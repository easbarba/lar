#+TITLE: Dots | .local/bin

* e_golang
#+begin_src shell


#+end_src

* e_debian
#+begin_src shell

micro
 clang
qemu-system-gui ovmf bridge-utils
acpid  tlp vainfo i965-va-driver libvdpau-va-gl1
firewalld firewall-config
gnome-keyring seahorse

#+end_src

* e_js
#+begin_src shell
front() {
	local packs=(eslint-config-airbnb-base parcel-bundler
		webpack-dev-server prettier gulp js-beautify tern eslint eslint_d
		ionic babel pug webpack-cli dockerfile-language-server-nodejs
		generator-code indium gulp-pug browser-sync typescript-formatter
		vue-language-server eslint-plugin-import sass jshint pug-cli
		babel-preset-airbnb yo webpack is-website-vulnerable tldr)
	e_dolist "$COMMAND" "${packs[@]}"
}

#+end_src

* e_arch
#+begin_src shell
element-desktop telegram-desktop transmission-gtk winetricks ripgrep parcellite
#+end_src
* e_gnome
#+begin_src shell

#+end_src
* e_arch_pre
#+begin_src shell
#!/usr/bin/env bash
set -euo pipefail

wifi() {
    local SSID = ''
    local PASS = ''
    local DEVICE = ''

    iwctl --passphrase $PASS station $DEVICE connect $SSID
}

meh() {
    echo "MEH"
}

base() {
    pacstrap base linux linux-firmware
}

time() {
    timedatectl set-timezone America/Sao_Paulo
}

hosts() {
    touch /etc/hosts

    <<EOF
    127.0.0.1 localhost
    .         localhost
    127.0.1.1 localhost archlinux localhost

    EOF
}

# * RUN
"$@"

#+end_src
* e_cinnamon
#+begin_src shell
#!/usr/bin/env bash

# Debug Options
set -euo pipefail

switch() {
    gsettings set org.cinnamon.desktop.keybindings.wm switch-to-workspace-1 "['<Super>1']"
    gsettings set org.cinnamon.desktop.keybindings.wm switch-to-workspace-2 "['<Super>2']"
    gsettings set org.cinnamon.desktop.keybindings.wm switch-to-workspace-3 "['<Super>3']"
    gsettings set org.cinnamon.desktop.keybindings.wm switch-to-workspace-4 "['<Super>4']"
    gsettings set org.cinnamon.desktop.keybindings.wm switch-to-workspace-5 "['<Super>5']"

    gsettings set org.cinnamon.desktop.keybindings.wm switch-to-workspace-left "['<Super>A']"
    gsettings set org.cinnamon.desktop.keybindings.wm switch-to-workspace-right "['<Super>D']"
    gsettings set org.cinnamon.desktop.keybindings.wm show-desktop "['<Super>v']"
}

move() {
    gsettings set org.cinnamon.desktop.keybindings.wm move-to-workspace-1 "['<Super><Shift>1']"
    gsettings set org.cinnamon.desktop.keybindings.wm move-to-workspace-2 "['<Super><Shift>2']"
    gsettings set org.cinnamon.desktop.keybindings.wm move-to-workspace-3 "['<Super><Shift>3']"
    gsettings set org.cinnamon.desktop.keybindings.wm move-to-workspace-4 "['<Super><Shift>4']"
    gsettings set org.cinnamon.desktop.keybindings.wm move-to-workspace-5 "['<Super><Shift>5']"
}

volume() {
    gsettings set org.cinnamon.desktop.keybindings.media-keys volume-up "['<Super><Shift>w']"
    gsettings set org.cinnamon.desktop.keybindings.media-keys volume-down "['<Super><Shift>s']"
    gsettings set org.cinnamon.desktop.keybindings.media-keys volume-mute "['<Super><Shift>e']"

    gsettings set org.cinnamon.desktop.sound maximum-volume 150
    gsettings set org.cinnamon.desktop.wm.preferences audible-bell false
}

media() {
    # gsettings set org.cinnamon.desktop.keybindings.media-keys kbd-brightness-down "['<Super><Shift>d', 'XF86KbdBrightnessDown']"
    # gsettings set org.cinnamon.desktop.keybindings.media-keys kbd-brightness-up "['<Super><Shift>a', 'XF86KbdBrightnessUp']"

    gsettings set org.cinnamon.desktop.keybindings.media-keys mic-mute "['<Super><Shift>q', 'XF86AudioMicMute']"

    gsettings set org.cinnamon.desktop.keybindings.media-keys screenshot-clip "['<Super><Shift>q', '<Control>Print']"
    gsettings set org.cinnamon.desktop.keybindings.media-keys screenshot "['<Super><Shift>q', 'Print']"

    gsettings set org.cinnamon.desktop.keybindings.media-keys play "['<Super>z', 'XF86AudioPlay']"
    gsettings set org.cinnamon.desktop.keybindings.media-keys next "['<Super><Shift>a', 'XF86AudioNext']"
    gsettings set org.cinnamon.desktop.keybindings.media-keys previous "['<Super><Shift>d', 'XF86AudioPrev']"
}

misc() {
    gsettings set org.cinnamon.desktop.wm.preferences num-workspaces 5
    gsettings set org.cinnamon.desktop.wm.preferences workspace-names "['MX','Read','Term','WWW','Media']"

    gsettings set org.cinnamon.desktop.keybindings.wm toggle-maximized "['<Super>M']"

    gsettings set org.cinnamon.muffin workspace-cycle true

    # gsettings set org.gnome.desktop.peripherals.mouse natural-scroll false
    # gsettings set org.gnome.desktop.peripherals.touchpad tap-to-click true
    # gsettings set org.gnome.desktop.background show-desktop-icons false
}

# * RUN

switch
move
misc

#+end_src
* e_emacs
#+begin_src shell

#!/usr/bin/env bash

# Debug Options
set -euo pipefail

BUILDS="$HOME/Builds"
EMACS_DIR="$BUILDS/emacs"
PREFIX="$HOME/.local"
TAG=emacs-27.1

check_deps()
{
    [[ ! -x $(command -v git) ]] && exit
}

repo_get()
{
    [[ -d $EMACS_DIR ]] && return

    git clone "https://git.savannah.gnu.org/git/emacs" "$BUILDS/emacs"
}

repo_update()
{
    [[ -d "$EMACS_DIR/.git" ]] && git pull
}

repo_checkout()
{
    git checkout ${TAG}
}

install()
{
    cd "$EMACS_DIR" || return

    make distclean

    sh autogen.sh

    sh configure --prefix="$PREFIX" --with-modules --with-gif --with-jpeg --with-png --with-rsvg --with-tiff --with-xft --with-xpm --with-x --with-dbus --with-imagemagick --with-mailutils --with-gnutls --with-x-toolkit=gtk3

    make -j2

    make install
}

# * RUN

echo "Emacs - Installing local build"

check_deps
repo_get
repo_update
repo_checkout

install

#+end_src
* e_gitconfig
#+begin_src shell
#!/usr/bin/env bash

# Debug Options
set -euo pipefail

git config --global init.defaultBranch main

git config --global user.name "$USER"
git config --global user.email "$USER@tutanota.me"

git config --global core.editor "nvim"
git config --global core.autocrlf input
git config --global core.excludesfile  "$USER/.gitignore_global"

git config --global color.ui true

git config --global credential.helper cache --timeout=1600

git config --global pull.ff only

git config --global fetch.prune true

#+end_src
* e_mate
#+begin_src shell
#!/usr/bin/env bash

# Debug Options
set -euo pipefail

keybindings() {
    gsettings set org.mate.Marco.global-keybindings switch-to-workspace-1 "<Super>1"
    gsettings set org.mate.Marco.global-keybindings switch-to-workspace-2 "<Super>2"
    gsettings set org.mate.Marco.global-keybindings switch-to-workspace-3 "<Super>3"
    gsettings set org.mate.Marco.global-keybindings switch-to-workspace-4 "<Super>4"
    gsettings set org.mate.Marco.global-keybindings switch-to-workspace-5 "<Super>5"

    gsettings set org.mate.Marco.global-keybindings switch-to-workspace-left "<Super>A"
    gsettings set org.mate.Marco.global-keybindings switch-to-workspace-right "<Super>D"

    gsettings set org.mate.Marco.window-keybindings move-to-workspace-1 '<Shift><Mod4>exclam'
    gsettings set org.mate.Marco.window-keybindings move-to-workspace-2 '<Shift><Mod4>at'
    gsettings set org.mate.Marco.window-keybindings move-to-workspace-3 '<Shift><Mod4>numbersign'
    gsettings set org.mate.Marco.window-keybindings move-to-workspace-4 '<Shift><Mod4>dollar'
    gsettings set org.mate.Marco.window-keybindings move-to-workspace-5 '<Shift><Mod4>percent'
}

volume() {
    gsettings set org.gnome.desktop.sound allow-volume-above-100-percent true
    gsettings set org.mate.Marco.general audible-bell false
}

interface() {
    gsettings set org.mate.interface icon-theme 'Papirus-Dark'
    gsettings set org.mate.interface gtk-theme 'Materia-dark'
}

default() {
    gsettings set org.cinnamon.desktop.default-applications.terminal exec 'mate-terminal'
}

misc() {
    gsettings set org.mate.background show-desktop-icons false
    gsettings set org.mate.Marco.general num-workspaces 5
    gsettings set org.mate.Marco.window-keybindings toggle-maximized "<Super>M"
    gsettings set org.mate.peripherals-touchpad natural-scroll false
    gsettings set org.mate.peripherals-touchpad tap-to-click true
    gsettings set org.mate.Marco.global-keybindings panel-run-dialog '<Mod4>x'
    gsettings set org.mate.Marco.global-keybindings run-command-screenshot '<Primary><Mod4>s'
    gsettings set org.mate.Marco.global-keybindings run-command-window-screenshot '<Primary><Shift><Mod4>s'
    # gsettings set org.cinnamon panels-autohide "['1:true']"
}

power() {
    gsettings set org.mate.power-manager idle-brightness 50
    gsettings set org.mate.power-manager idle-dim-ac false
    gsettings set org.mate.power-manager idle-dim-battery false
    gsettings set org.mate.power-manager idle-dim-time 10
}

workspaces() {
    gsettings set org.mate.Marco.workspace-names name-1 'Mx'
    gsettings set org.mate.Marco.workspace-names name-2 'Read'
    gsettings set org.mate.Marco.workspace-names name-3 'Term'
    gsettings set org.mate.Marco.workspace-names name-4 'WWW'
    gsettings set org.mate.Marco.workspace-names name-5 'Media'
}

media() {
    gsettings set org.mate.SettingsDaemon.plugins.media-keys volume-down-quiet '<Alt>XF86AudioLowerVolume'
    gsettings set org.mate.SettingsDaemon.plugins.media-keys previous '<Shift><Mod4>a'
    gsettings set org.mate.SettingsDaemon.plugins.media-keys next '<Shift><Mod4>d'
    gsettings set org.mate.SettingsDaemon.plugins.media-keys play '<Mod4>z'
    gsettings set org.mate.SettingsDaemon.plugins.media-keys volume-up '<Shift><Mod4>w'
    gsettings set org.mate.SettingsDaemon.plugins.media-keys volume-mute '<Shift><Mod4>e'
    gsettings set org.mate.SettingsDaemon.plugins.media-keys volume-down '<Shift><Mod4>s'
}

# * RUN

keybindings
volume
interface
misc
workspaces
power
# default

#+end_src
* e_nix
#+begin_src shell
#!/usr/bin/env bash

# Debug Options
set -euo pipefail

# Description: boostrap Nix
# Dependencies: sudo, curl, bash

install()
{
    [[ -x $(command -v nix-env) ]] && return

    curl -L https://nixos.org/nix/install | sh
}

packages()
{
    local packs=(direnv cpufetch ) # mcfly
    e_dolist 'nix-env --uninstall' "${packs[@]}"
}

languages()
{
    local packs2=(nixpkgs.ruby_2_7 nixpkgs.nodejs nixpkgs.nodePackages.npm)
    e_dolist 'nix-env --uninstall' "${packs2[@]}"
}

install
packages

#+end_src
* e_quicklisp
#+begin_src shell
#!/usr/bin/env bash

set -euo pipefail

boot() {
    wget -c https://beta.quicklisp.org/quicklisp.lisp
}

install() {
    sbcl --no-sysinit --no-userinit --load quicklisp.lisp \
        --eval '(quicklisp-quickstart:install)' \
        --eval "(ql:quickload '(:quicklisp-slime-helper :clx :cl-ppcre :alexandria :xembed :xml-emitter :dbus :prove :swank))" \
        --eval "(quit)"

}

# * RUN

boot
install

#+end_src
* e_wine
#+begin_src shell
#!/usr/bin/env bash

# DEBUG OPTIONS
set -euo pipefail

# * WINE

debian() {
    sudo dpkg --add-architecture i386
}

keys() {
    wget -nc https://dl.winehq.org/wine-builds/winehq.key

    sudo apt-key add winehq.key
}

install() {
    sudo apt install --install-recommends winehq-devel
}

debian
keys
install

#+end_src
