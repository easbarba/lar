#+TILE: Archives Legacy

* Summary
  :PROPERTIES:
  :TOC:      :include all :depth 2 :ignore this
  :END:
:CONTENTS:
- [[#dotfiles][Dotfiles]]
  - [[#irbrc][irbrc]]
  - [[#cejo][cejo]]
  - [[#blog][Blog]]
  - [[#asdf][asdf]]
  - [[#shell-software][shell-software]]
  - [[#shell-misc][shell-misc]]
  - [[#shell-custom][shell-custom]]
  - [[#emacs][Emacs]]
  - [[#nixos][Nixos]]
  - [[#bin][bin]]
  - [[#autostart][autostart]]
  - [[#xsessionrc][.xsessionrc]]
  - [[#xinitrc][.xinitrc]]
  - [[#sysinfo][sysinfo]]
  - [[#guix-config][Guix Config]]
  - [[#e_packs][e_packs]]
  - [[#e_distro][e_distro]]
  - [[#nyxt][Nyxt]]
  - [[#bashrc][bashrc]]
  - [[#xserverrc][.xserverrc]]
  - [[#sbcl][Sbcl]]
  - [[#xmobar][Xmobar]]
  - [[#pypirc][.pypirc]]
  - [[#gtk-30][gtk-3.0]]
  - [[#fontconfig][fontconfig]]
  - [[#stalonetray][StaloneTray]]
  - [[#pycodestyle][pycodestyle]]
  - [[#flake][Flake]]
  - [[#stumpwm][StumpWM]]
  - [[#xmonad][Xmonad]]
  - [[#xmobar][Xmobar]]
  - [[#qtile][Qtile]]
  - [[#bashrc][Bashrc]]
  - [[#tmux][Tmux]]
  - [[#xprofile][.xprofile]]
  - [[#autostart][autostart]]
  - [[#make][Make]]
  - [[#suckless][Suckless]]
- [[#languages][Languages]]
  - [[#golang][Golang]]
  - [[#elixir][Elixir]]
  - [[#scheme][Scheme]]
  - [[#common-lisp][Common Lisp]]
  - [[#haskell][Haskell]]
  - [[#elixir][Elixir]]
  - [[#c][C]]
  - [[#rust][Rust]]
  - [[#net][.NET]]
  - [[#swift][Swift]]
  - [[#lua][Lua]]
  - [[#java][Java]]
  - [[#python][Python]]
  - [[#php][PHP]]
  - [[#cpp][CPP]]
- [[#tools][Tools]]
  - [[#devops][DevOps]]
:END:

* Dotfiles
** irbrc
   #+begin_src ruby


# IRB.conf[:IRB_RC] = nil
# IRB.conf[:BACK_TRACE_LIMIT]=16
# IRB.conf[:USE_LOADER] = false
# IRB.conf[:USE_MULTILINE] = nil
# IRB.conf[:USE_SINGLELINE] = nil
# IRB.conf[:USE_COLORIZE] = true
# IRB.conf[:USE_TRACER] = false
# IRB.conf[:IGNORE_SIGINT] = true
# IRB.conf[:IGNORE_EOF] = false
# IRB.conf[:PROMPT] = {...}
# IRB.conf[:SAVE_HISTORY] = nil
# IRB.conf[:INSPECT_MODE]=nil

   #+end_src
** cejo
*** distro
    #+begin_src yaml
		---
		builddep: builddep
		clean: autoremove
		depends: repoquery --requires --resolve
		download: ''
		fix: fix
		help: help
		info: info
		install: install
		installed: list installed
		remove: remove
		search: search
		sysupgrade: sysupgrade
		update: update
		upgrade: upgrade

	    ---
	    builddep: ''
	    clean: autoremove
	    depends: ''
	    download: fetch
	    fix: fix
	    help: help
	    info: query
	    install: install
	    installed: version
	    remove: remove
	    search: search
	    sysupgrade: ''
	    update: update
	    upgrade: upgrade
	    ---
	    builddep: ''
	    clean: autoremove
	    depends: ''
	    download: fetch
	    fix: fix
	    help: help
	    info: query
	    install: install
	    installed: version
	    remove: remove
	    search: search
	    sysupgrade: ''
	    update: update
	    upgrade: upgrade

	---
	builddep: build-dep
	clean: nix-store --gc
	depends: depends
	download: download
	fix: install -f
	help: help
	info: show
	install: nix-env --install
	install+: nix-env --install -A
	installed: nix-env -qa
	remove: nix-env --uninstall
	search: nix-env -qa
	sysupgrade: ''
	update: nix-env --update
	upgrade: nix-env --upgrade


    ---
    builddep: ''
    clean: ''
    depends: ''
    download: ''
    fix: ''
    help: help
    info: ''
    install: "-S"
    installed: ''
    remove: "-R"
    search: "-Ss"
    sysupgrade: ''
    update: "-Syy"
    upgrade: "-Syu"


---
builddep: ''
clean: autoremove
depends: ''
download: fetch
fix: fix
help: help
info: query
install: install
installed: version
remove: remove
search: search
sysupgrade: ''
update: update
upgrade: upgrade

    #+end_src
*** floss
   #+begin_src yaml
   --- # golang
   - https://github.com/golang-standards/project-layout
   - https://github.com/hashicorp/nomad
   - https://github.com/hashicorp/consul
   - https://github.com/hashicorp/terraform
   - https://github.com/containers/buildah
   - https://github.com/containers/podman
   - https://github.com/sourcegraph/go-langserver
   - https://github.com/gorilla/mux
   - https://github.com/cli/cli
   - https://github.com/rclone/rclone
   - https://github.com/avelino/awesome-go
   - https://github.com/kubernetes-sigs/kind/
   - https://github.com/kubernetes/kubernetes
   - https://github.com/adonovan/gopl.io
   - https://github.com/golang/net
   - https://github.com/golang/tools
   - https://github.com/golang/go

   --- # c
   - https://gitlab.freedesktop.org/mesa/mesa.git
   - git://source.winehq.org/git/wine.git
   - https://github.com/openssh/openssh-portable.git
   - https://github.com/libressl-portable/portable.git
   - https://git.suckless.org/dwm
   - https://github.com/zsh-users/zsh.git
   - https://github.com/git/git.git
   - https://github.com/tmux/tmux.git
   - https://github.com/antirez/redis.git
   - https://github.com/curl/curl.git
   - git://c9x.me/qbe.git
   - https://github.com/mate-desktop/mate-terminal
   - https://github.com/mate-desktop/atril
   - https://github.com/mate-desktop/marco

   --- # elixir
   - https://github.com/bitwalker/distillery
   - https://github.com/ueberauth/guardian
   - https://github.com/absinthe-graphql/absinthe
   - https://github.com/christopheradams/elixir_style_guide
   - https://github.com/rrrene/credo
   - https://github.com/taylor/kiex
   - https://github.com/kerl/kerl
   - https://github.com/jeremyjh/dialyxir
   - https://github.com/elixir-lsp/elixir-ls
   - https://github.com/elixir-ecto/ecto
   - https://github.com/hexpm/hex
   - https://github.com/phoenixframework/phoenix
   - https://github.com/erlang/otp
   - https://github.com/elixir-lang/ex_doc
   - https://github.com/elixir-lang/elixir

   --- # common lisp
   - https://github.com/CodyReichert/awesome-cl.git
   - https://github.com/atlas-engineer/nyxt.git
   - https://github.com/LispCookbook/cl-cookbook.git
   - https://github.com/quicklisp/quicklisp-client.git
   - https://github.com/quicklisp/quicklisp-bootstrap.git
   - https://github.com/quicklisp/quicklisp-controller.git
   - https://github.com/franzinc/clx.git
   - https://gitlab.common-lisp.net/alexandria/alexandria.git
   - https://gitlab.common-lisp.net/asdf/asdf.git
   - https://gitlab.common-lisp.net/clpm/clpm.git
   - git://git.code.sf.net/p/sbcl/sbcl.git

   --- # Haskell
   - https://gitlab.haskell.org/ghc/ghc
   - https://gitlab.haskell.org/haskell/ghcup
   - https://github.com/haskell/cabal
   - https://github.com/commercialhaskell/stack
   - https://github.com/haskell/haskell-language-server
   - https://github.com/koalaman/shellcheck
   - https://github.com/jgm/pandoc
   - https://github.com/elm/compiler

   --- # Distros
   - https://github.com/purcell/nix-emacs-ci
   - https://github.com/jwiegley/nix-config
   - https://github.com/NixOS/nixos-hardware
   - https://github.com/NixOS/nixos-org-configurations
   - https://github.com/NixOS/nixpkgs
   - https://github.com/NixOS/nix
   - https://gitlab.com/guix-gaming-channels/games
   - https://gitlab.com/nonguix
   - https://git.savannah.gnu.org/git/guix.git


   --- # Dart
   - https://github.com/roughike/inKino
   - https://github.com/flame-engine/flame
   - https://github.com/felangel/bloc
   - https://github.com/flutter/plugins
   - https://github.com/dart-lang/build
   - https://github.com/dart-lang/sdk

   --- # Perl
   - https://github.com/moose/Moose
   - https://github.com/richterger/Perl-LanguageServer
   - https://github.com/imapsync/imapsync
   - https://github.com/ddclient/ddclient
   - https://github.com/apache/avro
   - https://github.com/mojolicious/mojo
   - https://github.com/i3/i3
   - https://github.com/bugzilla/bugzilla
   - https://github.com/hachiojipm/awesome-perl
   - https://github.com/Perl/perl5


   --- # python
   - https://github.com/python/cpython
   - https://github.com/python/mypy
   - https://github.com/python/peps
   - https://github.com/pypa/pip
   - https://github.com/pypa/wheel
   - https://github.com/pytest-dev/pytest
   - https://github.com/pypa/setuptools
   - https://github.com/PyCQA/pylint
   - https://github.com/nedbat/coveragepy
   - https://github.com/psf/black


   --- # php
   - https://github.com/PacktPublishing/Mastering-PHP-7
   - https://github.com/bcit-ci/CodeIgniter
   - https://github.com/felixfbecker/php-language-server
   - https://github.com/vimeo/psalm
   - https://github.com/laravel/lumen
   - https://github.com/nikic/php-parser
   - https://github.com/phpstan/phpstan
   - https://github.com/composer/composer
   - https://github.com/symfony/symfony
   - https://github.com/laravel/laravel
   - https://github.com/php/php-src
   #+end_src
*** Cero Linguagens
**** Ruby
     #+begin_src ruby
     def get_name_files(folder)
       name = folder.to_path
       files = []

       folder.children.each do |f|
	 files << f if f.file?
       end

       { name => files }
     end

     def prepare_folders
       Find.find(a) do |f|
	 next if f.start_with? a.join('.git').to_path # ignore .git folder

	 x = Pathname.new f
	 puts x.parent.to_path
       end

       # result = {}

       # SOURCE_FOLDER.children.each do |f|
       #   next unless f.basename.to_s != '.git' && f.directory?

       #   x = get_name_files f
       #   result[x.keys.first] = x.values
       # end

       # result
     end

     #+end_src
**** .NET
***** Temp
      #+begin_src csharp
     #+end_src
***** Projects
      #+begin_src csharp
      using System.Collections.Generic;
      using System.IO;

      using Cero.Services;

      namespace Cero.Sections.Projects
      {
	  /// <summary>
	  ///  A set of values used to specify a project information to start.
	  /// </summary>
	  public class Cpython : IProject
	  {
	      private readonly Folders _folders;
	      private readonly Git _git;
	      private readonly Runners _runners;

	      public Cpython(Folders folders, Git git, Runners runners) =>
		  (_folders, _git, _runners) = (folders, git, runners);

	      ProjectInfo Info() => new ProjectInfo()
	      {
		  Name = "cpython",
		  Url = "https://github.com/python/cpython",
		  Folder = Path.Join(_folders.Builds, "cpython"),
		  Tag = "v3.8.2",
		  Commands = new List<(string, string)>
		  {                ("mkdir", "-pv build"),
		      ("make", "distclean"),
		      ("sh", $@"configure --prefix={ _folders.Local } --enable-optimizations --with-lto --with-pydebug"),
		      ("make", "-s"),
		      ("make", "-j2 install"),
		  }
	      };

	      public void Start() =>
		  new ProjectBuilder(_git, _runners, Info()).Build();
	  }
      }


      using System.Collections.Generic;
      using System.IO;

      using Cero.Services;

      namespace Cero.Sections.Projects
      {
	  /// <summary>
	  ///  A set of values used to specify a project information to start.
	  /// </summary>
	  public class Nyxt : IProject
	  {
	      private readonly Folders _folders;
	      private readonly Git _git;
	      private readonly Runners _runners;

	      public Nyxt(Folders folders, Git git, Runners runners) =>
		  (_folders, _git, _runners) = (folders, git, runners);


	      ProjectInfo Info() => new ProjectInfo()
	      {
		  Name = "nyxt",
		  Url = "https://github.com/atlas-engineer/nyxt",
		  Folder = Path.Join(_folders.Builds, "nyxt"),
		  Commands = new List<(string, string)>
		  {
		      ("make", "all NYXT_INTERNAL_QUICKLISP=true"),
		      ("make", $"install PREFIX={ _folders.Local }")
		  }
	      };

	      public void Start() =>
		  new ProjectBuilder(_git, _runners, Info()).Build();
	  }
      }





      #+end_src
***** Packers
      #+begin_src csharp

      // "redhat.java",
      // "vscjava.vscode-java-debug",
      // "vscjava.vscode-maven",
      // "vscjava.vscode-java-test",
      // "vscjava.vscode-java-pack",
      // "vscjava.vscode-java-dependency",
      // "ms-vscode.go",
      // "ms-vscode.cpptools",
      // "ms-python.python",
      // "ms-python.anaconda-extension-pack",
      // "ms-python.anaconda-extension-pack",

      using Cero.Library;

      namespace Cero.Sections.Packers
      {
	  public class Go : IPacker
	  {
	      Di _di;

	      public string _name = "go";
	      public string _manager = "get";
	      string[] _packages = new string[]
	      {
		  "github.com/sourcegraph/go-langserver",
		  "golang.org/x/tools/cmd/gopls",
		  "golang.org/x/tools/cmd/goimports",
		  "github.com/saibing/bingo"
	      };

	      public Go(Di di) =>
		  _di = di;

	      public void Start()
	      {
		  dolist (var pack in _packages)
		      _di._runners.RunCommand(_name, $"{ _manager } -u -v { pack }");
	      }
	  }
      }


      using System.Linq;

      using Cero.Services;

      namespace Cero.Sections.Packers
      {
	  public class Cabal : IPacker
	  {
	      private readonly Runners _runners;

	      private readonly string _name;
	      private readonly string _manager;
	      private readonly string[] _packages;

	      public Cabal(Runners runners)
	      {
		  _runners = runners;

		  _name = "cabal";
		  _manager = "new-install";
		  _packages = new string[] { "hlint", "xmonad", "xmonad-contrib" };
	      }

	      private void InstallPackages()
	      {
		  dolist (var args in from pack in _packages
				       let args = $"{ _manager } --lib --upgrade { pack } --user"
				       select args)
		  {
		      _runners.RunCommand(_name, args);
		  }
	      }

	      public void Start()
	      {
		  _runners.RunCommand(_name, $"update");
		  InstallPackages();
	      }
	  }
      }

      using System.Linq;

      using Cero.Services;

      namespace Cero.Sections.Packers
      {
	  public class Cargo : IPacker
	  {
	      private readonly Runners _runners;

	      private readonly string _name;
	      private readonly string _manager;
	      private readonly string[] _packages;

	      public Cargo(Runners runners)
	      {
		  _runners = runners;

		  _name = "cargo";
		  _manager = "install";
		  _packages = new string[] { "ripgrep" };
	      }

	      public void Start()
	      {
		  dolist (var args in from pack in _packages
				       let args = $"{_manager} { pack }"
				       select args)
		  {
		      _runners.RunCommand(_name, args);
		  }
	      }
	  }
      }

      using System.IO;
      using System.Net;
      using System.Linq;

      using Cero.Services;

      namespace Cero.Sections.Packers
      {
	  public class QuickLisp : IPacker
	  {
	      private readonly WebClient _webClient;
	      private readonly Runners _runners;
	      private readonly Folders _folders;

	      private readonly string _name;
	      private readonly string[] _packages = default!;
	      private readonly string _quickLispFile;
	      private readonly string _quickLispSetupFile;

	      public QuickLisp(WebClient webClient, Folders folders, Runners runners)
	      {
		  _webClient = webClient;
		  _folders = folders;
		  _runners = runners;

		  _name = "sbcl";
		  _packages = new string[]
		  {
		      ":quicklisp-slime-helper", ":swank", ":clx", ":cl-ppcre", ":alexandria",
		      ":xembed", ":xml-emitter", ":dbus", ":prove", ":swank"
		  };
		  _quickLispFile = Path.Join(_folders.Home, "quicklisp.lisp");
		  _quickLispSetupFile = Path.Combine(_folders.Home, "quicklisp", "setup.lisp");
	      }

	      private void GetQuickLispFile()
	      {
		  if (File.Exists(_quickLispFile)) { return; }

		  _webClient.DownloadFile("https://beta.quicklisp.org/quicklisp.lisp", _quickLispFile);
	      }

	      private void InstallQuickLisp()
	      {
		  if (File.Exists(_quickLispSetupFile)) { return; }

		  var args = $@"--load { _quickLispFile } --eval (quicklisp-quickstart:install) --eval (quit)";
		  _runners.RunCommand(_name, args);
	      }

	      private void InstallPackages()
	      {
		  dolist (var args in from pack in _packages
				       let args = $@"--eval ""(ql:quickload ""{ pack }"")"" --eval (quit)"
				       select args)
		  {
		      _runners.RunCommand(_name, args);
		  }
	      }

	      public void Start()
	      {
		  GetQuickLispFile();
		  InstallQuickLisp();
		  InstallPackages();
	      }
	  }
      }


      using System.IO;
      using System.Net;

      using Cero.Services;
      using System.Linq;

      namespace Cero.Sections.Packers
      {
	  public class RustUp : IPacker
	  {
	      WebClient _webClient;
	      private readonly Folders _folders;
	      private readonly Runners _runners;

	      private readonly string _name;
	      private readonly string _manager;
	      private readonly string[] _packages;

	      public RustUp(WebClient webClient, Folders folders, Runners runners)
	      {
		  _webClient = webClient;
		  _folders = folders;
		  _runners = runners;

		  _name = "rustup";
		  _manager = "component";
		  _packages = new string[] { "rls", "rust-analysis", "rust-src", "clippy" };
	      }

	      string RustInit() =>
		  Path.Join(_folders.Home, "rustup-init.sh");

	      void GetRustUp()
	      {
		  if (File.Exists(RustInit())) { return; }

		  _webClient.DownloadFile(
		      "https://raw.githubusercontent.com/rust-lang/rustup/master/rustup-init.sh",
		      RustInit());
	      }

	      void InstallRustUp()
	      {
		  if (File.Exists(Path.Join(_folders.Home, ".rustup"))) { return; }

		  _runners.RunCommand("sh", $"{ RustInit() }");
	      }

	      public void InstallPackages()
	      {
		  dolist (var args in from pack in _packages
				       let args = $"{_manager} add { pack }"
				       select args)
		  {
		      _runners.RunCommand(_name, args);
		  }
	      }

	      public void Start()
	      {
		  GetRustUp();
		  InstallRustUp();
		  InstallPackages();
	      }
	  }
      }
      #+end_src
**** Python
     #+begin_src python

	 def advice(self) -> None:
	     """Additional instruction before building."""
	     from shutil import copy2

	     definitions = VARS.build / folder / "config.def.h"
	     config = VARS.build / folder / "config.h"
	     for file in definitions, config:
		 file.unlink()

	     source = VARS.software / "st_config.def.h"
	     copy2(source, definitions)


     pip  = ("requests",
	     "pyre-check",
	     "pyxdg",
	     "pillow",
	     "pyqt5",
	     "doc8",
	     "html5lib",
	     "grip",
	     "ninja",
	     "scipy",
	     "pep8",
	     "virtualenvwrapper",
	     "dulwich",
	     "fastapi",
	     "autopep8",
	     "pysimplegui",
	     "sympy",
	     "PyOpenAL",
	     "click",
	     "buku",
	     "bandit",
	     "django",
	     "pylint-django",
	     "flask",
	     "meson",
	     "sphinx",
	     "lxml",
	     "selenium",
	     "watchman",
	     "notebook",
	     "mutagen",
	     "pyperclip",
	     "pandas",
	     "pre-commit",
	     "pipenv",
	     "matplotlib",
	     "wily",
	     "monkeytype",
	     "astroid",
	     "flake8-bugbear",
	     "pyperf",
	     "hy",
	     "pip-tools",
	     "beautifulsoup4",
	     "prospector",
	     "jedi",
	     "jc",)


     PACKAGERS_COMMANDS: dict = {  # abstract command and real command
	 "apt": {  # Debian Family
	     "install": "install",
	     "search": "search",
	     "remove": "remove",
	     "upgrade": "upgrade",
	     "dist-upgrade": "dist-upgrade",
	     "update": "update",
	     "autoremove": "autoremove",
	     "download": "download",
	     "depends": "depends",
	     "system-upgrade": "dist-upgrade",
	     "installed": ["list", "--installed"],
	     "fix": "fix",
	     "info": "show",
	 },
	 "dnf": {  # Fedora
	     "install": "install",
	     "search": "search",
	     "remove": "remove",
	     "upgrade": "upgrade",
	     "update": "update",
	     "autoremove": "autoremove",
	     "system-upgrade": "system-upgrade",
	     "depends": ["repoquery", "--requires", "--resolve"],
	     "installed": ["list", "installed"],
	     "build-dep": "builddep",
	     "fix": "fix",
	     "info": "info",
	     "help": "help",
	 },
	 "pacman": {  # ArchLinux
	     "install": "-S",
	     "search": "-Ss",
	     "remove": "-R",
	     "upgrade": "-Syu",
	     "update": "-Syy",
	 },
	 "pkg": {  # FreeBSD
	     "install": "install",
	     "search": "search",
	     "remove": "remove",
	     "upgrade": "upgrade",
	     "update": "update",
	     "download": "fetch",
	     "autoremove": "autoremove",
	     "installed": "version",
	     "fix": "fix",
	     "info": "query",
	     "help": "help",
	 },
	 "help": {
	     "install": "Install a Package from Repositories",
	     "file": "Install a Package from the Local Filesystem",
	     "search": "Find a Package",
	     "remove": "Remove One or More Installed Packages",
	     "upgrade": "Upgrade Installed Packages",
	     "update": "Update Package Lists",
	     "autoremove": "Remove unused packages",
	     "system-upgrade": "Upgrade System",
	     "depends": "Package dependencies",
	     "installed": "List installed",
	     "build-dep": "Get dependencies to build package",
	     "fix": "Fix common issues in System",
	     "info": "View Info About a Specific Package",
	 },  # source: digitalocean
     }


     sleep(360)  # main terminal closing in...
     run(["killall", "kdeconnectd"], check=False, shell=False)



     # GLOBAL VARS
     GLOBAL_VARIABLES: dict = {
	 "HOME": Path.home(),
	 "DOCUMENTS": Path.home().joinpath("Documents"),
	 "BIN": Path.home().joinpath("bin"),
	 "VIDEOS": Path.home().joinpath("Videos"),
	 "PICTURES": Path.home().joinpath("Pictures"),
	 "MUSIC": Path.home().joinpath("Music"),
	 "DOWNLOADS": Path.home().joinpath("Downloads"),
	 "BUILD": Path.home().joinpath("Downloads/Build"),
	 "PROJECTS": Path.home().joinpath("Projects"),
	 "SOFTWARE": Path.home().joinpath("Documents/Settings"),
	 "XDG_CONFIG_HOME": Path.home().joinpath(".config"),
	 "HOME_LOCAL": Path.home().joinpath(".local"),
	 "HOME_LOCAL_BIN": Path.home().joinpath(".local/bin"),
	 "HOME_LOCAL_LIB": Path.home().joinpath(".local/lib"),
	 "XDG_DATA_HOME": Path.home().joinpath(".local/share"),
	 "PERSONAL": Path.home().joinpath("/data/Personal"),
	 "FONTS": Path.home().joinpath(".local/share/fonts"),
	 "DESCRIPTION": "An elegant collection of system automation solutions and software interface",
     }


     class Struct:
	 """Global Variables."""

	 def __init__(self, **entries):
	     """Literal Dict to Class attributes."""
	     self.__dict__.update(entries)


     VARS = Struct(**GLOBAL_VARIABLES)



     for packer in {"apt", "pacman", "dnf", "pkg"}:
	     if executable_exist(packer):
		 distro = packer

     except OSError:
	 LOGGER.exception("Unable to play media!")
	 LOGGER.exception("Could not download media")
	 LOGGER.exception("Unable to extract file.")
	 LOGGER.exception("Unable to compress")
	 LOGGER.exception("Unable to turn on/off network")
	 LOGGER.exception("SSH - Unable to set keys!")
	 LOGGER.exception("Unable to save screnshot")
	 LOGGER.exception("Unable to build dwm!")
	 LOGGER.exception("Unable to build st!")
	 LOGGER.exception("Unable to build Qtile!")
	 LOGGER.exception("Unable to install QuickLisp!")
	 LOGGER.exception("Go - Unable to install package!")
	 LOGGER.exception("Unable to install QuickLisp Packages!")
	 LOGGER.exception("NPM Unable to set prefix!")
	 LOGGER.exception("NPM - Unable to install package!")
	 LOGGER.exception("VSCode: Unable to install package!")
	 LOGGER.exception("Pip - Unable to install package.")
	 LOGGER.exception("Unable to send notification!")
	 LOGGER.exception("No permission to clean projects!")
	 LOGGER.exception("No permission to move file")
	 LOGGER.exception("Unable to retrieve item!")
	 LOGGER.exception("No permission to symlink file!")

     subprocess.run(  # Remove untracked files
	 ["git", "clean", "-fdx"],
	 cwd=folder,
	 check=False,
	 stdout=subprocess.DEVNULL,
     )

     # <kapsh> Do you need them to be functions and not class methods? You can write
     #         simple class with __getattr__(name): getattr(self, "do_" + name)()


     registry = {}


     def register(func):
	 registry[func.__name__] = func
	 return func

     import re
     # find all functions that begins with do_NAME
     funcs_name = re.findall(r"do_\w+", Path(__file__).resolve().read_text())
     # create a dict with function name and functio object references. eg: {"do_homer", <function do_homer at 0x7fe19d72d70>}
     functions = {key: eval(value) for key, value in zip(funcs_name, funcs_name)}


     HOME = Path.home()
     DOCUMENTS = HOME / "Documents"
     SOFTWARE = DOCUMENTS / "software"
     VIDEOS = HOME / "Videos"
     PICTURES = HOME / "Pictures"
     MUSIC = HOME / "Music"
     DOWNLOADS = HOME / "Downloads"
     PROJECTS = HOME / "Projects"
     HOME_LOCAL = HOME / ".local"
     HOME_LOCAL_BIN = HOME_LOCAL / "bin"
     HOME_LOCAL_LIB = HOME_LOCAL / "lib"
     XDG_CONFIG_HOME = HOME / ".config"
     XDG_DATA_HOME = HOME_LOCAL / "share"
     DATA = Path("/data")
     PERSONAL = DATA / "Personal"



     # TODO
     def do_wakeup(minutes) -> None:
	 """Wake up, Mr Freeman."""
	 # Start alarm in a give minutes
	 return minutes


     # TODO
     def do_help() -> None:
	 """List all functions available."""
	 # Use regext matching string to find all functions starting with "def do_*("


     def ts(fld):
	 import os

	 for root, dir, files in os.walk(fld):
	     for file in files:
		 print(os.path.isdir(root), os.path.isdir(file))


     def path_walk(top, topdown=False, followlinks=False):
	 """
	      See Python docs for os.walk, exact same behavior but it yields Path() instances instead
	 """
	 names = list(top.iterdir())

	 dirs = (node for node in names if node.is_dir() is True)
	 nondirs = (node for node in names if node.is_dir() is False)

	 if topdown:
	     yield top, dirs, nondirs

	 for name in dirs:
	     if followlinks or name.is_symlink() is False:
		 for x in path_walk(name, topdown, followlinks):
		     yield x

	 if topdown is not True:
	     yield top, dirs, nondirs


     (".css", ".js", ".svg", ".html", "iku.jpg")

     def ts(fld):
	 """Test."""
	 import os

	 for root, dir, files in os.walk(fld):
	     for file in files:
		 print(os.path.isdir(root), os.path.isdir(file))

     print(f"Download {pj_name}")  # Github only!
     pj_github_url = f"{pj_url}/archive/master.{compress_format}"
     pj_new_name = zip_folder / f"{pj_name}.{compress_format}"
     _retrieve_this(pj_github_url, pj_new_name)

     from urllib.request import urlopen
     import json

     try:
	 with urlopen("http://wttr.in/Brasilia?format=j1") as url:
	     data = json.loads(url.read().decode())
	     weather = data.get("weather")[0].get("hourly")[0].get("tempC")
     except Exception as why:
	 print(why)
     else:
	 con = "ON"

     def internet_on():
	 """Internet connection is on."""

	 import urllib.error

	 try:
	     urllib.request.urlopen("http://216.58.192.142", timeout=1)  # google
	 except urllib.error.URLError:
	     return False
	 else:
	     del urllib.error
	     return True

     folder = PROJECTS / parent / os.path.basename(url)
     #+end_src
***** Makefile
      #+begin_src makefile
      # Licensed under the Apache License: http://www.apache.org/licenses/LICENSE-2.0
      .POSIX:
      SHELL=sh
      PYTHON=python3
      PROJECT=pan
      PIP= $(PYTHON) -m pip

      help:
	      @echo "make install        "	"---    "  fresh install of package
	      @echo "make dev            "	"---    "  set up development env and toolings
	      @echo "make doc            "	"---    "  generate documentation in /docsn
	      @echo "make clean          "	"---    "  clean project non-essential files
	      @echo "make all            "	"---    "  install package and set up devel toolings


      install:
	      $(PIP) install --user .

      clean:
	      $(PIP) uninstall $(PROJECT)

      doc:
	      sphinx-build -b html sourcedir builddir

      dev:
	      $(PYTHON) devel/deploy.py


      ENV=env
      BIN=~/bin

      env:
	      $(PYTHON) -m venv env

      req:
	      $(PIP) install -r requirements.txt

      req-dev:
	      $(PIP) install -r requirements-dev.txt

      script:
	      mkdir -pv ~/bin
	      ln -sf $(PWD)/pan/__main__.py $(BIN)/pan.py

      script-clean:
	      rm $(BIN)/pan.py

      #+end_src
** Blog
*** css
    #+begin_src css
    section[id] {

	// margin-top: 6rem;
	// min-height: 100vh;
    }


    nav {
	// position: fixed;
	// width: 100vw;
	// min-height: 12vh;
	// margin: 0 auto;
	// background:#EEE1C6;
    }


    #aboutme {
	ul { ul { display: flex;  }
	     li { list-style-type: none;
		  a { padding: .5rem 0 .5rem; color: $links; }}}
    }
    #+end_src
*** Make(C)
    #+begin_src makefile
    CC = gcc
    CFLAGS = -Wall -Werror -std=c99
    LDFLAGS =
    PROJECT= aspnet
    SRC = $(PROJECT)/main.c
    DIST = dist
    SHELL = sh
    RM = rm -rf

    default:
	    @echo "make install		-- fresh install of package"
	    @echo "make all		-- clean previous install, build and run program"
	    @echo "make clean		-- clean non-essential files"
	    @echo "make build		-- compile and prepare program to run"

    all: clean build run

    clean:
	    $(RM) $(DIST)

    build:
	    mkdir $(DIST)
	    $(CC) -o $(DIST)/$(PROJECT) $(CFLAGS) $(SRC)

    run:
	    ./$(DIST)/$(PROJECT)
    #+end_src
** asdf
   #+begin_src shell-script
   #!/usr/bin/env bash
   #!/usr/bin/env bash

   # set -e

   source "$HOME/.asdf/completions/asdf.bash"
   source "$HOME/.asdf/asdf.sh"

   asdf_lua()
   {
       [[ -f "$HOME/.asdf/shims/lua" ]] && return

       echo 'Installing Lua binaries'

       asdf plugin-add lua https://github.com/Stratus3D/asdf-lua

       asdf install lua latest

       asdf global lua "$(asdf latest lua)"
   }

   packages()
   {
       echo 'Installing  packages'

       local packages=()

       for pack in "${packages[@]}"
       do
	    install "${pack}" # --user-install
	    update  "${pack}"
       done
   }

   # * RUN

   echo 'Lua - ASDF'

   asdf_lua
   packages



   # set -e

   erlang()
   {
       # https://github.com/asdf-vm/asdf-erlang

       [[ -f "$HOME/.asdf/shims/erl" ]] && return

       echo 'Installing Erlang binaries'

       asdf plugin add erlang https://github.com/asdf-vm/asdf-erlang.git

       asdf install erlang latest

       asdf global erlang "$(asdf latest erlang)"
   }

   elixir()
   {
       # https://github.com/asdf_vm/asdf_elixir

       [[ -f "$HOME/.asdf/shims/elixir" ]] && return

       echo 'Installing Elixir binaries'

       asdf plugin-add ruby https://github.com/asdf-vm/asdf-elixir.git

       asdf install elixir latest

       asdf global elixir "$(asdf latest elixir)"
   }

   # * Run
   erlang
   elixir

   #+end_src
** shell-software
   #+begin_src shell-script
   s-startx()
   {
       if [ -z "${DISPLAY}" ] && [ -n "${XDG_VTNR}" ] && [ "${XDG_VTNR}" -eq 1 ]; then
	   exec startx
       fi
   }

   #+end_src
** shell-misc
   #+begin_src shell-script
   e_cli_tools()
   {
       local enhancd_dir="$HOME/Projects/Bash/enhancd/"
       [[ -d $enhancd_dir ]] && cd $enhancd_dir && source ./init.sh

      if [ -x "$(command -v rustup)" ]; then
	  source "${XDG_DATA_HOME}/bash-completion/completions/rustup"
	  # export RUSTUP_HOME="$XDG_CONFIG_HOME/rustup"
      fi
   }

   asdf_python()
   {
       echo 'Installing python binaries'

       # https://github.com/danhper/asdf_python

       asdf plugin-add python

       asdf install python latest

       asdf global python "$(asdf latest python)"
   }


   python()
   {
       echo 'Installing pip packages'

       local packages=(pip ansible wheel setuptools blackyoutube-dl python-language-server
		       pyls-black pyls-isort pyls-mypy jedi ipython pylama
		       pyflakes flake8-import-order pydocstyle flake8 mccabe yapf
		       pylint rope pytest pep8-naming mutagen)

       for pack in "${packages[@]}"
       do
	   python3 -m pip install --upgrade --user "${pack}"
       done
   }


   e_basher()
   {
       local basher_dir="$HOME/.basher"

       [[ "$1" == 'upgrade' ]] && git -C "$HOME/.config/basher" pull

       [[ ! -d "$basher_dir/.git" ]] && git clone https://github.com/basherpm/basher "$basher_dir"

       # add Basher Bin folder to $PATH
       export PATH="$basher_dir/bin"${PATH:+:}${PATH}

       # load basher
       eval "$(basher init - bash)"
   }
   #+end_src
** shell-custom
   #+begin_src shell-script
   #!/usr/bin/env bash

   packages()
   {
       echo 'Installing packages'

       # local packages=()

       # for pack in "${packages[@]}"
       # do
       # done
   }

   # * RUN

   echo 'Elixir - ASDF'

   asdf_erlang
   asdf_elixir
   packages



   # set -e

   source "$HOME/.asdf/completions/asdf.bash"
   source "$HOME/.asdf/asdf.sh"

   asdf_lisp()
   {
       # https://github.com/asdf_vm/asdf_elixir

       [[ -f "$HOME/.asdf/shims/elixir" ]] && return


       echo 'Installing Elixir binaries'
       asdf plugin-add sbcl https://github.com/smashedtoatoms/asdf-sbcl.git

       asdf install sbcl latest

       asdf global sbcl "$(asdf latest sbcl)"
   }

   asdf_sbcl()
   {
       # https://github.com/asdf-vm/asdf-erlang
       a-welcome "Building: SBCL"

       echo " -- Cleaning"
       rm -rf "$HOME_LOCAL_LIB/sbcl"
       rm -rf "$HOME_LOCAL_BIN/sbcl"
       rm -rf "$XDG_DATA_HOME/doc/sbcl"

       a-clone git://git.code.sf.net/p/sbcl/sbcl "$PROJECTS/lisp/sbcl"

       a-cd "$PROJECTS/lisp/sbcl"
       git reset --hard
       git clean -fdx
       git pull

       export -n SBCL_HOME

       echo " -- Comping SBCL"
       sh make.sh --fancy --prefix="$HOME_LOCAL"
       INSTALL_ROOT="$HOME_LOCAL" sh install.sh

       export SBCL_HOME="$HOME_LOCAL_LIB/sbcl"

       a-sucess "Done"
   }

   packages()
   {
       echo 'Installing packages'

       # local packages=()

       # for pack in "${packages[@]}"
       # do
       # done
   }

   # * RUN

   echo 'Elixir - ASDF'

   asdf_lisp
   packages



   e_path_rust()
   {
       export PATH="${HOME}/.cargo/bin":${PATH}
   }

   e_path_rbenv()
   {
       local rbenv_dir="$HOME/.rbenv"

       local rbenv_shims="$rbenv_dir/shims"
       local rbenv_bin="$rbenv_dir/bin"

       export PATH="$rbenv_bin"${PATH:+:}$PATH
       export PATH="$rbenv_shims"${PATH:+:}$PATH
   }

   e-packs-cargo()
   {
       echo 'Installing cargo packages'

       local packages=(starship alacritty)

       for pack in "${packages[@]}"
       do
	   cargo install "$pack"
       done
   }

   e-packs-rustup()
   {
       # rls needs toolchain to work
       rustup component add rls --toolchain stable-x86_64-unknown-linux-gnu
   }

   e-packs-rbenv()
   {
       export RBENV_DIR="$HOME/.rbenv"
       export RUBY_BUILD_DIR="$RBENV_DIR/plugins/ruby-build"
       export RUBY_SHIMS_DIR="$RBENV_DIR/shims"

       local rbenv_binary="$HOME/.rbenv/bin/rbenv"

       export PATH="$RUBY_SHIMS_DIR"${PATH:+:}$PATH

       [[ ! -x "$RBENV_DIR/bin" ]] && git clone https://github.com/rbenv/rbenv.git "$RBENV_DIR"

       # Set up rbenv in your shell.
       $rbenv_binary init

       curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-doctor | bash

       [[ ! -x "$RUBY_BUILD_DIR" ]] && git clone https://github.com/rbenv/ruby-build "$RUBY_BUILD_DIR"
       [[ ! -x "$RUBY_BUILD_DIR" ]] && git -C "$RUBY_BUILD_DIR" pull

       # compile dynamic bash extension
       cd "$RBENV_DIR" && src/configure && make -C src

       local version=2.7.2
       $rbenv_binary install $version
       $rbenv_binary global $version && rbenv rehash
   }

   e-packs-asdf-elixir()
   {
       echo 'Installing elixir binaries'

       # https://github.com/asdf-vm/asdf-erlang
       # https://github.com/asdf-vm/asdf-elixir

       asdf plugin-add erlang https://github.com/asdf-vm/asdf-erlang.git
       asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir.git

       asdf install erlang latest
       asdf install elixir latest

       asdf global "$(asdf latest erlang)"
       asdf global "$(asdf latest elixir)"
   }

   e-packs-rvm()
   {
       gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB

       curl -sSL https://get.rvm.io | bash -s stable

       source "$HOME/.rvm/scripts/rvm"

       rvm get stable
   }

   e-packs-vscode()
   {
       echo 'Installing vscode packages'

       local packages=(2gua.rainbow-brackets abierbaum.vscode-file-peek
		       alefragnani.Bookmarks alefragnani.project-manager
		       CoenraadS.bracket-pair-colorizer-2
		       dbaeumer.vscode-eslint donjayamanne.githistory
		       felipecaputo.git-project-manager HookyQR.beautify
		       mads-hartmann.bash-ide-vscode
		       MS-CEINTL.vscode-language-pack-pt-BR
		       eamodio.gitlens njpwerner.autodocstring
		       bmalehorn.vscode-fish
		       davidanson.vscode-markdownlint josef.rouge-theme
		       tuttieee.emacs-mcx esbenp.prettier-vscode
		       visualstudioexptteam.vscodeintellicode
		       msjsdiag.debugger-for-chrome
		       formulahendry.dotnet-test-explorer
		       jmrog.vscode-nuget-package-manager
		       redhat.vscode-yaml
		       firefox-devtools.vscode-firefox-debug
		       ms-vscode-remote.remote-ssh
		       ms-vscode-remote.remote-wsl ms-mssql.mssql
		       ms-azuretools.vscode-docker ms-vscode.powershell
		       ms-dotnettools.csharp)

       for pack in "${packages[@]}"
       do
	   code --install-extension "${pack}" --force
       done
   }

   e_path_nvm()
   {
       local nvm_dir="$HOME/.config/nvm"

       [ -s "$nvm_dir/nvm.sh" ] && source "$nvm_dir/nvm.sh"  # Loads NVM
       [ -s "$nvm_dir/bash_completion" ] && source "$nvm_dir/bash_completion"  # Loads NVM Bash Completion

       local nvm_bin="$(nvm_version_dir)/$(nvm_version)/bin"
       export PATH="$nvm_bin"${PATH:+:}$PATH
   }

   rust=(pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev python3)

   e-packs-nvm()
   {
       local nvm_dir="$HOME/.config/nvm"

       if [[ ! -d ${nvm_dir} ]]; then
	   git clone https://github.com/nvm-sh/nvm.git ${nvm_dir}
       else
	   cd ${nvm_dir} && git pull
       fi

       source ${nvm_dir}/nvm.sh

       nvm install node
   }

   e-packs-flatpak()
   {
       echo 'Installing flatpak packages'

       local packages=(com.spotify.Client com.valvesoftware.Steam com.visualstudio.code com.skype.Client)

       for pack in "${packages[@]}"
       do
	   flatpak install flathub "${pack}"
       done
   }

   e_path_luarocks()
   {
       export PATH="$HOME/.luarocks/bin"${PATH:+:}$PATH
   }

   e-debian()
   {

       elixir=(build-essential autoconf m4 libncurses5-dev
	       libwxgtk3.0-gtk3-dev libgl1-mesa-dev libglu1-mesa-dev libpng-dev
	       libssh-dev unixodbc-dev xsltproc fop libxml2-utils libncurses-dev
	       openjdk-11-jdk)

   }
   e-ubuntu()
   {
       sudo systemctl set-default multi-user.target
       xorg=(xorg x11-apps xinit xdotool dbus-x11 xserver-xorg-input-synaptics xserver-xorg-input-libinput xserver-xorg-input-kbd awesome)

       util-linux alsa-utils network-manager stterm
       lua5.4 luarocks lua-check
       gnome-keyring
       ssh-askpass-gnome
       network-manager-gnome

       wm_packages=(rofi aria2 socat dunst udiskie unclutter scrot libnotify-bin seahorse gconf2 ranger w3m highlight odt2txt lynx mediainfo xautolock caca-utils x11proto-dev libfile-mimeinfo-perl dmenu xdg-utils mpd mpc ncmpc ncmpcpp mpv screenkey brightnessctl tlp acpi-call)

       firewalld firewall-config firewall-applet
   }


   # Findfile and find content
   # f() { find . -iname "*$1*" $(@:2)}
   # r() { grep "$1" $(@:2)} -R . }

   function yarn {
       # Non-debian repositories
       if [ ! $(command -v yarn) ]; then
	   cd ${HOME}

	   curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
	   echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

	   sudo apt update
	   sudo apt -y install yarn
       fi
   }

   elx-dotnet ()
   {
       local packages=("PowerShell" "dotnet-aspnet-codegenerator" "dotnet-script")

       # iunstall
       for pack in "${packages[@]}"
       do
	   dotnet tool update --global "${pack}"
       done

       # update
       for pack in "${packages[@]}"
		   f    do
		   dotnet tool install --global "${pack}"
		done
   }


   elx-cabal()
   {
       cabal update

       local packages=(hlint xmonad xmonad-contrib)

       for pack in "${packages[@]}"
       do
	   cabal new-install --lib --upgrade "$pack" --user
       done
   }


   debian(){
       mpd mpc ncmpc ncmpcpp

       # rvm
       sudo apt install -y bison libgdbm-dev libncurses5-dev libyaml-dev libreadline6-dev

       if [ ! -x "$(command -v mono)" ]; then
	   sudo apt install -y apt-transport-https dirmngr gnupg ca-certificates
	   sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
	   echo "deb https://download.mono-project.com/repo/debian stable-buster main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list

	   sudo apt update
	   sudo apt install -y -t stable-buster mono-complete
       fi
       xmonad libghc-xmonad-dev \
	      libghc-xmonad-contrib-dev yabar xmobar
       if [ ! -x "$(command -v monodevelop)" ]; then
	   sudo apt install -y apt-transport-https dirmngr
	   sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
	   echo "deb https://download.mono-project.com/repo/debian vs-buster main" | sudo echo tee /etc/apt/sources.list.d/mono-official-vs.list

	   sudo apt update
	   sudo apt install -y monodevelop
       fi

       if [ ! -x "$(command -v dotnet)" ]; then
	   wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
	   sudo dpkg -i packages-microsoft-prod.deb

	   sudo apt update
	   sudo apt install -y dotnet-sdk-3.1
       fi

       # xmonad
       sudo apt install libmagic-dev

       # Kitty
       sudo apt install -y libdbus-1-dev libxcursor-dev libxrandr-dev libxi-dev libxinerama-dev libgl1-mesa-dev libxkbcommon-x11-dev libfontconfig-dev and libpython-dev

       ranger w3m highlight odt2txt lynx mediainfo xautolock \
	      caca-utils
       # clang/llvm
       sudo apt install -y libclang-8-dev llvm-dev
       sudo apt install -y libssl-dev zlib1g-dev libbz2-dev libreadline-dev \
	    libsqlite3-dev libncurses5-dev libncursesw5-dev xz-utils tk-dev \
	    libffi-dev liblzma-dev python-openssl

       xmonad libghc-xmonad-dev libghc-xmonad-contrib-dev \
	      cabal-install xmobar

       i3 i3lock i3blocks sway swaylock

       # python3
       sudo apt -y build-dep python3
       # python package deps
       $install libgirepository1.0-dev libvirt-dev libsmbclient-dev \
		libcups2-dev libxslt1-dev libsdl1.2-dev
       # Lisp
       $install libfixposix-dev
       # ghcup
       $install build-essential curl libffi-dev libffi6 libgmp-dev libgmp10 libncurses-dev libncurses5 libtinfo5
       # xmonad/cabal
       $install libxss-dev


       nim
       sudo apt install -y xorg-dev libgtk2.0-dev libjpeg-dev libncurses5-dev libdbus-1-dev \
	    libgif-dev libtiff-dev
       sudo apt install -y libm17n-dev libpng-dev librsvg2-dev libotf-dev libgnutls28-dev \
	    libxml2-dev # emacs bulding dependencies

       clangd clang-format
       libvirt-clients libvirt-daemon-system libvirt-dev libvirt0 virt-manager
       postgresql  postgresql-client postgresql-doc   pgadmin3 phppgadmin
       epiphany-browser
       # FLOSS Projects
       sudo apt install -y libevent-dev
       # emacs vterm
       sudo apt install -y libvterm-bin libvterm-dev
       sudo apt install -y libwwwbrowser-perl libnotify-bin libarchive-tools
       sudo apt install -y libqt4-dev libcrypto++-dev libsqlite3-dev libc-ares-dev \
	    libcurl4-openssl-dev
       sudo apt install -y libssl-dev libedit-dev libclang-7-dev

       # nEXT
       sudo apt install -y sbcl libwebkit2gtk-4.0-dev glib-networking sqlite \
	    gsettings-desktop-schemas libfixposix-dev libgstreamer1.0-0 \
	    gir1.2-gst-plugins-base-1.0 xclip notify-osd


       if [ ! -x "$(command -v composer)" ]; then
	   cd "$HOME/bin/" || "$HOME/bin/" && cd "$HOME/bin/" || exit

	   EXPECTED_SIGNATURE="$(wget -q -O - https://composer.github.io/installer.sig)"
	   php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
	   ACTUAL_SIGNATURE="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"

	   if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]
	   then
	       >&2 echo 'ERROR: Invalid installer signature'
	       rm composer-setup.php
	       exit 1
	   fi

	   php composer-setup.php --quiet
	   RESULT=$?
	   rm composer-setup.php
	   exit $RESULT
       fi
   }

   ubuntu(){
       sudo apt install -y libwwwbrowser-perl libnotify-bin libarchive-tools
       sudo apt install -y libqt4-dev libcrypto++-dev libsqlite3-dev libc-ares-dev \
	    libcurl4-openssl-dev
       sudo apt install -y libssl-dev libedit-dev libclang-7-dev
       sudo apt install -y xorg-dev libgtk2.0-dev libjpeg-dev libncurses5-dev libdbus-1-dev \
	    libgif-dev libtiff-dev
       sudo apt install -y libm17n-dev libpng-dev librsvg2-dev libotf-dev libgnutls28-dev \
	    libxml2-dev # emacs bulding dependencies
       sudo apt install -y libpng-dev zlib1g-dev libpoppler-glib-dev \
	    libpoppler-private-dev # pdf-tools
       sudo apt install -y ghostscript mupdf-tools poppler-utils texlive-binaries \
	    unoconv djvulibre-bin ncurses-dev # libreoffice-common
       sudo apt install -y texlive-latex-base texlive-fonts-recommended \
	    texlive-latex-extra # texlive-rotating texlive-capt-of
       sudo apt install -y uuid-dev libicu-dev icu-devtools libedit-dev libxml2-dev \
	    libsqlite3-dev swig libpython-dev libncurses5-dev pkg-config \
	    libcurl4-openssl-dev systemtap-sdt-dev tzdata rsync

       # python deps
       sudo apt install -y libgirepository1.0-dev libvirt-dev libsmbclient-dev \
	    libcups2-dev libxslt1-dev libsdl1.2-dev
       # clang/llvm
       sudo apt install -y libclang-8-dev llvm-dev
       sudo apt install -y  libssl-dev zlib1g-dev libbz2-dev libreadline-dev \
	    libsqlite3-dev  libncurses5-dev libncursesw5-dev xz-utils tk-dev \
	    libffi-dev liblzma-dev python-openssl

   }


   apt()
   {
   }

   arch(){
       # echo  " -- Plasma"
       # sudo pacman -S --noconfirm xorg xorg-apps plasma-meta kde-applications-meta \
	   #      plasma-wayland-session
   }

   elx-guixsd () {
       echo "GuixSD: Install"

       echo "-- Free Software Foundation"
       guix package -i zile wget stow screen gimp bash parted emacs gcc-toolchain \
	    gdb automake gettext texinfo recutils patch make autoconf gnutls # info

       echo "-- System packages"
       guix package -i p7zip zip unzip util-linux alsa-utils network-manager \
	    font-hack font-dejavu vim

       echo "-- System Tools"
       guix package -i lshw usbutils lsof time net-tools iproute2 curl rsync \
	    dbus pkg-config zlib acl alsa-lib librsvg libotf libice giflib libxpm \
	    m17n-lib libxinerama libtool # gtk+ graphviz help2man # Guix deps

       echo "-- X.org"
       # guix package -i xauth xorg-server xinit setxkbmap xsetroot xautolock \
	   # xf86-input-synaptics xf86-input-libinput xhost  xdg-utils xdg-user-dirs

       echo "-- Window Managers"
       guix package -i stumpwm awesome

       echo "-- Window Managers Tools"
       guix package -i icecat sbcl-next scrot slock aria2 network-manager-applet \
	    udiskie st polkit-gnome cheese dmenu lm-sensors aspell aspell-dict-en \
	    syncthing perl-file-mimeinfo mpv youtube-dl imagemagick ghc-pandoc \
	    inkscape gconf obs ranger w3m highlight lynx mediainfo libcaca \
	    font-adobe-source-han-sans libreoffice calibre kdeconnect
       # mupdf ghostscript xdg-utils screenkey xdotool

       echo '-- Codecs'
       guix package -i ffmpeg pulseaudio vorbis-tools gstreamer gst-plugins-good \
	    gst-plugins-ugly gst-plugins-bad gst-libav gst-plugins-base gst123

       echo "-- Programming Languages"
       guix package -i sbcl clisp \
	    python-pip  \
	    shellcheck zenity bash-completion \
	    clang cmake m4 libtool

       echo "-- Dependencies"
       guix package -i alsa-lib acl libpng zlib librsvg libsm libxpm m17n-lib \
	    libotf libjpeg
       guix package -i giflib libpng libxft libtiff libx11 libxml2 libsm ncurses \
	    libice gtk+ gnutls # emacs
       guix package -i cairo emacs-minimal emacs-tablist glib libpng pkg-config \
	    poppler zlib # emacs pdf-tools
       guix package -i webkitgtk openssl gsettings-desktop-schemas \
	    glib-networking # next
       guix package -i libfixposix # stumpwm-module:dbus

       echo "-- Emulators & Virtualization"
       guix package -i qemu virt-manager ovmf libvirt wine

       echo "-- Development tools"
       guix package -i tree git xsel xclip fontconfig freetype subversion bc \
	    perl # exuberant-ctags
       guix package -i htop strace ltrace openssh cpio lzop atool wmctrl poppler \
	    perf sqlite texlive-latex-pdfx

       echo "-- Security tools"
       guix package -i tcpdump

       echo 'Laptop tool & Wifi'
       guix package -i iw wireless-tools acpi

       echo "Done"
   }

   elx-guixbin () {

       echo "-- TOOLS: Guix Packages"
       if [ ! -x "$(command -v guix)" ]; then

	   echo "-- Guix: Installing"
	   cd "$HOME" || echo "hmm?"

	   echo "-- Authorizing Guix GPG Key"
	   sudo gpg --keyserver pool.sks-keyservers.net \
		--recv-keys 3CE464558A84FDC69DB40CFB090B11993D9AEBB5

	   echo "-- Downloading Guix Installer"
	   wget -c https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh

	   sudo bash "$HOME"/guix-install.sh

	   echo "-- Setting Guix Root User"
	   sudo guix pull && sudo guix package -u
	   sudo guix package -i glibc-locales

	   echo "-- Cleaning"
	   rm "$HOME/guix-install.sh"
       fi

       echo "-- Setting Guix User"
       guix pull && guix package -u
       guix package -i glibc-locales gs-fonts font-gnu-freefont-ttf font-dejavu

       echo "-- Done"
   }

   elx-freebsd () {
       echo "-- af - Installing System Packages"

       echo "-- Updating System"
       sudo freebsd-update fetch
       sudo freebsd-update install

       sudo pkg update
       sudo pkg upgrade

       # change default shell
       sudo pw usermod "$USER" -s /usr/local/bin/zsh

       echo "-- Essential System packages"
       sudo pkg install -y git p7zip  zip unzip neovim zsh
       #  alsa-utils network-manager fonts-dejavu

       echo "-- System Toolings"
       sudo pkg install -y dmidecode usbutils lsof curl  entr tree git xsel-conrad\
	    xclip ctags fontconfig  freetype subversion htop ltrace lhasa  lzop \
	    atool wmctrl poppler-utils mercurial jq  ncdu ripgrep nnn fzf fzy \
	    rsync bat rclone tmux fish pv  zile wget stow screen gimp bash  gcc \
	    gdb guile guile-lib  autoconf automake gnutls  parallel emacs
       # net-tools iproute2 console-data  info parted texffinfo build-essential gdbserver wget2

       echo "-- Programming Languages"
       sudo pkg install -y nim sbcl ruby postgresql12-client sqlite3 \
	    hs-ShellCheck zenity bash-completion cmake m4 libtool
       # python3-venv clangd lldb

       echo  "-- Desktop Environments Software"
       sudo pkg install -y chromium firefox xdg-utils screenfetch \
	    aspell syncthing p5-File-MimeInfo obs-studio ImageMagick7 hs-pandoc \
	    en_GB-libreoffice br-libreoffice calibre inkscape gconf2 w3m highlight \
	    odt2txt lynx  mediainfo droid-fonts-ttf ko-nanumfonts-ttf mpv \
	    kdeconnect-kde kdenlive cheese ctorrent thunderbird
       # lm-sensors caca-utils x11proto-deve screenkey fonts-nanum

       echo "-- Windows Manager Software"
       sudo pkg install -y dwm awesome dmenu xorg xdotool xautolock \
	    xf86-video-intel xf86-input-synaptics xf86-input-libinput libinput \
	    dbus xf86-input-keyboard rofi aria2 socat dunst OpenSSH-askpass \
	    automount automounter unclutter cmus scrot maim libnotify seahorse
       # stterm network-manager-gnome  gthumb kitty

       echo "-- Emulators & Virtualization"
       sudo pkg install -y qemu qemu-utils virt-manager wine winetricks
       # qemu-system-x86 qemu-system-gui qemu-kvm  ovmf libvirt-clients libvirt-daemon-system libvirt-dev libvirt0 virt-manager uefi-edk2-qemu

       echo ' -- Codecs'
       sudo pkg install -y ffmpeg pulseaudio  vorbis-tools \
	    gstreamer1-plugins-bad gstreamer1-plugins-good \
	    gstreamer-plugins-ugly
       # pulseaudio-utils

       echo "-- Final preparations: clean & tidy up system"
       sudo pkg -y autoremove

       echo "Done"
   }

   elx-arch () {
       echo  "-- Arch - Installing System Packages"

       echo "-- Updating System"
       sudo pacman -Syu

       echo  "-- Essential System packages"
       sudo pacman -S --noconfirm git p7zip zip unzip util-linux alsa-utils \
	    networkmanager neovim kitty

       echo  "-- System Tools"
       sudo pacman -S --noconfirm lshw at usbutils lsof time net-tools iproute2 \
	    curl entr tree git xsel xclip ctags fontconfig  freetype2 subversion \
	    bc htop  strace ltrace openssh cpio lhasa lzop atool wmctrl poppler \
	    perf mercurial sysstat jq dialog ncdu ripgrep nnn fzf fzy rsync bat \
	    rclone xonsh tmux fish pv zile wget stow screen gimp bash parted \
	    texinfo gcc gdb guile make autoconf automake gnutls parallel emacs \
	    zsh code
       # console-data wget2 gdbserver locate brz

       echo "-- Fonts"
       sudo pacman -S --noconfirm otf-ipafont ttf-baekmuk ttf-dejavu \
	    noto-fonts-emoji

       echo  "-- Programming Languages"
       sudo pacman -S --noconfirm npm nodejs sbcl clisp ruby nim crystal shards \
	    lua luarocks postgresql sqlite3 shellcheck zenity bash-completion \
	    clang lldb cmake automake m4 libtool

       echo  " --Desktop Enviroment Software"
       sudo pacman -S --noconfirm chromium firefox xdg-utils screenfetch lm_sensors \
	    aspell aspell-en syncthing perl-file-mimeinfo obs-studio imagemagick \
	    inkscape mpv calibre thunderbird kdeconnect cheese syncthing-gtk \
	    discord deluge lxappearance moka-icon-theme

       echo  "-- Windows Manager Software"
       sudo pacman -S --noconfirm xorg xorg-apps xorg-xinit  \
	    xorg-xsetroot xautolock xf86-input-synaptics \
	    xf86-input-libinput xdotool xorg-xhost xf86-video-intel \
	    dunst scrot slock xdotool udiskie aria2 polkit \
	    xdg-utils feh xautolock openssh-askpass xorg-xset \
	    xorg-xbacklight dmenu kitty alacritty pulseaudio acpi ttf-dejavu \
	    unclutter maim pacman-contrib network-manager-applet pandoc \
	    ranger w3m highlight odt2txt lynx mediainfo libcaca  \
	    cmus mate-power-manager xorg-setxkbmap pkgconf

       echo  "-- Emulators & Virtualization"
       sudo pacman -S --noconfirm qemu wine ovmf libvirt

       echo  ' -- Codecs'
       sudo pacman -S --noconfirm ffmpeg pulseaudio vorbis-tools \
	    gstreamer gst-libav gst-plugins-bad gst-plugins-base gst-plugins-good \
	    gst-plugins-ugly pamixer

       echo  ' -- Dependencies'
       # next
       sudo pacman -S --noconfirm  webkit2gtk
       # python
       sudo pacman -S --noconfirm bzip2 expat gdbm libffi libnsl openssl zlib mpdecimal \
	    sqlite tk xz bluez-libs gdb llvm mpdecimal valgrind xorg-server-xvfb
       # qtile
       sudo pacman -S --noconfirm  gobject-introspection

       echo  "-- Security tools"
       sudo pacman -S --noconfirm tcpdump

       if [[ ! -x $(command -v erlang) ]]; then
	   cd ${HOME}

	   local binary=erlang-solutions_2.0_all.deb
	   [[ ! -e ${HOME}"/${binary}" ]] && wget https://packages.erlang-solutions.com/${binary}

	   sudo apt install "${HOME}/${binary}"
	   sudo apt update
	   sudo apt install esl-erlang elixir
       fi

       echo  "-- DONE"
   }

   elx-guixsd ()
   {
       a-welcome " -- GuixSD - Reconfiguring System!"
       sudo guix pull
       sudo guix system reconfigure "$1"
   }

   elx-stumpwm ()
   {
       a-welcome " -- Building: STUMPWM"

       a-clone https://github.com/stumpwm/stumpwm \
	       "$HOME/Projects/lisp/stumpwm"
       a-clone https://github.com/stumpwm/stumpwm-contrib \
	       "$HOME/Projects/lisp/stumpwm-contrib"

       a-cd "$PROJECTS/lisp/stumpwm"

       echo " -- Cleaning Project"
       if [[ -e ./Makefile ]]; then
	   make uninstall
	   make clean
	   git clean -fdx
       fi

       echo "Installing"
       autoconf
       ./configure --prefix=$HOME_LOCAL
       make && make install

       a-sucess " -- Done"
   }

   elx-clisp ()
   {
       a-welcome "Building: $TITLE"

       echo " -- Cleaning directory"
       PREFIX="$HOME_LOCAL" make distclean && git clean -fdx

       a-clone https://gitlab.com/gnu-clisp/clisp "$PROJECTS/lisp/clisp"

       a-cd "$PROJECTS/lisp/clisp"
       git pull

       echo " -- Comping CLISP"
       sh configure --prefix=$HOME_LOCAL
       PREFIX="$HOME_LOCAL" make
       PREFIX="$HOME_LOCAL" make install

       a-sucess "Done"
   }

   elx-ccls ()
   {
       echo " -- Building CCLS"
       git clone --depth=1 --recursive https://github.com/MaskRay/ccls \
	   "$HOME/.local/ccls"

       (cd "$HOME/.local/ccls" || echo "No $_ folder"
	cmake -H. -BRelease -DCMAKE_BUILD_TYPE=Release
	cmake --build Release)

       ln -sf "$HOME/.local/ccls/Release/ccls" "$HOME/.local/bin/ccls"

       echo -e " -- Done"
   }

   elx-emacs ()
   {
       a-welcome "Building Emacs"

       if [[ ! -d "$PROJECTS/lisp/emacs" ]]; then
	   echo " -- Cloning"
	   a-clone https://git.savannah.gnu.org/git/emacs "$PROJECTS/lisp/emacs"
       fi

       a-cd "$PROJECTS/lisp/emacs"

       echo " -- Preparing Project files"
       make bootstrap

       echo " -- Stable release, please!"
       git checkout master

       echo " -- Pulling latest changes"
       git pull

       echo " -- Generate configure file and Emacs scripts"
       sh autogen.sh

       echo " -- Configuring Emacs"
       ./configure --prefix=$HOME_LOCAL \
	--with-modules \
	--with-xwidgets \
	--with-gif \
	--with-jpeg \
	--with-png \
	--with-rsvg \
	--with-tiff \
	--with-xft \
	--with-xpm \
	--with-x \
	--with-dbus \
	--with-json \
	--with-imagemagick \
	--with-jansson \
	--with-multicolor-fonts \
	--with-x-toolkit=gtk3 \
	--with-mailutils \
	--with-gnutls

       echo " -- -- Deploying binaries"
       make -j2
       make install

       a-sucess "DONE"
   }

   elx-st ()
   {
       if [ ! -d "$XDG_CONFIG_HOME/st/.git" ]; then
	   echo -e " -- Cloning dwm to $XDG_CONFIG_HOME"
	   git clone https://git.suckless.org/st "$XDG_CONFIG_HOME/st"
       fi

       echo " -- Copying config.def.h"
       python3 "$ALL/init.py"

       cd "$XDG_CONFIG_HOME/st" || echo "There is no $_"

       echo "cleaning"
       rm config.h

       echo "installing"
       make PREFIX="$HOME_LOCAL" clean install

       a-sucess "DONE"
       echo -e " -- Done"
   }

   elx-next ()
   {
       a-welcome "Building: NEXT"

       echo "Cloning"
       a-clone https://github.com/atlas-engineer/next "$HOME/Projects/lisp/next"
       a-cd "$PROJECTS/lisp/next"

       echo "Cleaning"
       git clean -fdx
       git pull
       make clean-all

       echo "Installing"
       make all PREFIX="$HOME_LOCAL"
       make install PREFIX="$HOME_LOCAL"

       a-sucess "DONE"
   }

   elx-cpython ()
   {
       a-welcome "Building: CPYTHON"

       echo "Cloning"
       a-clone https://github.com/python/cpython "$HOME/Projects/python/cpython"
       a-cd "$HOME/Projects/python/cpython"

       echo " -- Cleaning Project"
       [[ -e ./Makefile ]] && make clean
       git clean -fdx
       git pull
       git checkout 3.8

       echo " -- Installing Project"
       sh configure --enable-optimizations --with-lto --prefix="$HOME_LOCAL"
       make -s
       make -j2 install

       a-sucess "DONE"
   }

   elx-dwm ()
   {
       (if [ ! -d "$XDG_CONFIG_HOME/dwm/.git" ]; then
	    rm -rf "$XDG_CONFIG_HOME/dwm" || "Okay, proceed."

	    echo -e " -- Cloning dwm to $XDG_CONFIG_HOME"
	    git clone https://git.suckless.org/dwm "$XDG_CONFIG_HOME/dwm"

	    cd "$XDG_CONFIG_HOME/dwm" || echo "There is no $_"

	    git checkout 6.2
	fi)

       (echo -e " -- Overwriting config.def.h with my custom one."
	python3 "$ALL/a_init")

       echo -e " -- Installing dwm"
       cd "$XDG_CONFIG_HOME/dwm" || echo "There is no $_"

       rm config.h
       make PREFIX="$HOME_LOCAL" config.h clean install

       echo -e " -- Done"
   }

   elx-rider()
   {
       cd ${BINARIOS} || mkdir ${BINARIOS}

       local rider=https://download.jetbrains.com/rider/
       local link=JetBrains.Rider-2020.1.4.tar.gz?_ga=2.49354848.731073982.1596379847-463458703.1596379846

       wget ${rider}/${link}
       tar zxvf ${BINARIOS}/JetBrains.Rider-*.tar.gz

       ln -sf ${BINARIOS}/Rider/bin/rider.sh ~/bin/rider
   }

   elx-inicia()
   {
       # Home
       [[ ! -d $HOME/Livros ]] && elx-home
       [[ ! -d $HOME/.config/emacs ]] && elx-dotfiles
       [[ ! -e $HOME/.local/share/fonts/JetBrainsMono-Regular.ttf ]] && elx-fonts
       [[ ! -e $HOME/.ssh/id_rsa.pub ]] && elx-ssh
       [[ ! -e $HOME/bin/liquidprompt ]] && elx-binaries

       # Dependencies
       [[ ! -x $HOME/bin/cero ]] && elx-cero

       # Windows Manager
       cero project sbcl
       [[ ! -d $HOME/quicklisp ]] && elx-quicklisp
       [[ ! -x $HOME/.local/bin/stumpwm ]] && cero project stumpwm

       # Custom Builds
       [[ ! -x $HOME/.local/bin/emacs ]] && cero project emacs
   }

   elx-suspende ()
   {
       echo "Suspending system in $1 ..."
       sleep "$1" && systemctl suspend
   }

   elx-lar()
   {
       root=(data more)

       for main in "${root[@]}"; do
	   dirlist=(`ls /$main`)

	   for dir in "${dirlist[@]}"; do
	       [[ "$dir" == "lost+found" ]] && continue
	       # TODO: check if folder exist before symlinking
	       echo "/$main/$dir --> $HOME/$dir"
	       ln -sf "/$main/$dir" "$HOME/$dir"
	   done
       done
   }

   elx-atualiza ()
   {
       elx-cero
       cero distro update; cero distro upgrade;
       elx-vscode
       cero operation oss clone
   }


   elx-vscode()
   {
       if [ ! -x "$(command -v code)" ]; then
	   curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
	   sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
	   sudo sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'

	   sudo apt-get install apt-transport-https
	   sudo apt-get update
	   sudo apt-get install code
       fi

   }
   # Cero
   elx-cero () { cd "$PESSOAL/cero" && bash build.sh; }

   elx-fontes()
   {
       local url=https://download.jetbrains.com/fonts/JetBrainsMono-2.001.zip
       wget -c "${url}" -P "${BINARIES}"

       unzip "${BINARIES}"/JetBrainsMono*.zip -d "${BINARIES}"

       mv -v "${BINARIES}"/ttf/*.ttf ~/.local/share/fonts/

       fc-cache -fv
   }

   elx-screenshot()
   {
       local shotter="scrot"
       local partial="-s"

       # if(Partial != null)
       #   {
       #           _runners.Run(GetScrotCommands().name, GetScrotCommands().args, _folders.Fotografias);
       #       }
       #       else
       #           {
       #               _runners.Run(GetScrotCommands().name, folder: _folders.Fotografias);
       #           }
   }

   elx-envia()
   {
       # Descricao: Send files over to connected system. eg: mobile.

       local sender="kdeconnect-cli"
       local id="${sender} -a --id-only"

       [ ! -x "$(command -v $sender)" ] && exit 0 #  sender was not found!

       echo " -- Start Sender"
       ($sender &)

       if [ ! "$1" == "" ]; then
	   kdeconnect-cli -d "$id" --share "$@"
       fi
   }

   elx-save()
   {
       # rich-sh tricks: args to array-like - http://www.etalabs.net/sh_tricks.html
       for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
	   echo " "
   }

   elx-microphone-test ()
   {
       arecord -vvv -f dat /dev/null
   }

   elx-eclipse-jdtls ()
   {
       cd $EMACS_DIR && mkdir -pv $EMACS_DIR/eclipse.jdt.ls

       wget -c http://download.eclipse.org/jdtls/snapshots/jdt-language-server-latest.tar.gz

       tar zxvf jdt-language-server-latest.tar.gz -C eclipse.jdt.ls
   }

   elx-streamer()
   {
       youtube-dl -o - "$1" | vlc -
   }

   elx-screen-capture () {
       # DEPENDENCIES: ffmpeg, pulseaudio, x11
       ffmpeg -y \
	      -video_size 1366x768 \
	      -framerate 30 -f x11grab -i :0.0 \
	      -f pulse -ac 2 -i default \
	      "$HOME"/Videos/screen1_recording_"$(date '+%Y-%m-%d_%H-%M-%S')".mkv
   }

   elx-screen-capture-stop () {
       killall ffmpeg; pkill ffmpeg
   }



   elx-wine-prefix-32-create () {

       # Dependecies: wine, winetricks

       # Descricao: Create wineprefix with given name and install some basic winetricks packages

       # kill wineserver before installation
       wineserver -k

       # Check if ~/wine/prefixes/ folder exist
       if [ ! -d "$HOME/wine/prefixes/" ]; then
	   mkdir -p "$HOME"/wine/prefixes/
       fi

       # Where Wine prefixes using DXVK are to be set up
       wine_prefix_folder="$HOME/wine/prefixes"

       echo -e " -- Please name your Wine prefix: "

       # keyboard input to string
       read -r input_variable

       echo -e " -- Disable Wine debugging"
       export WINEDEBUG=-all

       echo -e " -- Create Wine prefix and call for its configuration, press OK once done!"
       WINEARCH=win32 WINEPREFIX="$wine_prefix_folder"/"$input_variable"/ winecfg
       # d3dx9_36
   }

   elx-wine-prefix-64-create () {

       # Dependecies: wine, winetricks, GNU Coreutils, GNU Bash

       # Descricao: Create wineprefix with given name and install some basic winetricks packages

       # kill wineserver before installation
       wineserver -k

       # Check if ~/wine/prefixes/ folder exist
       if [ ! -d "$HOME/wine/prefixes/" ]; then
	   mkdir -p "$HOME"/wine/prefixes/
       fi

       # Where Wine prefixes using DXVK are to be set up
       wine_prefix_folder="$HOME/wine/prefixes"

       echo -e " -- Please name your Wine prefix: "

       # keyboard input to string
       read -r input_variable

       echo -e " -- Disable Wine debugging"
       export WINEDEBUG=-all

       echo -e " -- Create Wine prefix and call for its configuration, press OK once done!"
       WINEARCH=win64 WINEPREFIX="$wine_prefix_folder"/"$input_variable"/ winecfg
       # d3dx9_36
   }

   elx-wine-prefix-32-install-exe () {

       # Dependecies: wine, winetricks, GNU Coreutils, GNU Bash

       # Descricao: Create wineprefix with given name and install some basic winetricks packages

       # kill wineserver before installation
       wineserver -k

       # Check if ~/wine/prefixes/ folder exist
       if [ ! -d "$HOME/wine/prefixes/" ]; then
	   mkdir -p "$HOME"/wine/prefixes/
       fi

       # Where Wine prefixes using DXVK are to be set up
       wine_prefix_folder="$HOME/wine/prefixes"

       echo -e " -- Please name your Wine prefix: "

       # keyboard input to string
       read -r input_variable

       echo -e " -- Disable Wine debugging"
       export WINEDEBUG=-all

       echo -e " -- Run argument exe with Wine prefix"
       WINEARCH=win32 WINEPREFIX="$wine_prefix_folder"/"$input_variable"/ wine "$1"
   }

   elx-wine-prefix-64-install-exe () {

       # Dependecies: wine, winetricks, GNU Coreutils, GNU Bash

       # Descricao: Create wineprefix with given name and install some basic winetricks packages

       # kill wineserver before installation
       wineserver -k

       # Check if ~/wine/prefixes/ folder exist
       if [ ! -d "$HOME/wine/prefixes/" ]; then
	   mkdir -p "$HOME"/wine/prefixes/
       fi

       # Where Wine prefixes using DXVK are to be set up
       wine_prefix_folder="$HOME/wine/prefixes"

       echo -e " -- Please name your Wine prefix: "

       # keyboard input to string
       read -r input_variable

       echo -e " -- Disable Wine debugging"
       export WINEDEBUG=-all

       echo -e " -- Run argument exe with Wine prefix"
       WINEARCH=win64 WINEPREFIX="$wine_prefix_folder"/"$input_variable"/ wine "$1"
   }

   elx-winetricks-32-install-packages () {

       # Dependecies: wine, winetricks, GNU Coreutils, GNU Bash

       # Descricao: Install winetricks packages

       # kill wineserver before installation
       wineserver -k

       # Where Wine prefixes using DXVK are to be set up
       wine_prefix_folder="$HOME/wine/prefixes"

       echo -e " -- Disable Wine debugging"
       export WINEDEBUG=-all

       echo -e " -- Please name your Wine prefix: "
       read -r input_variable      # keyboard input to string

       echo -e " -- Install Winetricks packages"
       WINEARCH=win32 WINEPREFIX="$wine_prefix_folder"/"$input_variable"/ winetricks vcrun2005
   }

   e-winetricks-64-install-packages () {

       # Dependecies: wine, winetricks, GNU Coreutils, GNU Bash

       # Descricao: Install winetricks packages

       # kill wineserver before installation
       wineserver -k

       # Where Wine prefixes using DXVK are to be set up
       wine_prefix_folder="$HOME/wine/prefixes"

       echo -e " -- Disable Wine debugging"
       export WINEDEBUG=-all

       echo -e " -- Please name your Wine prefix: "
       read -r input_variable      # keyboard input to string

       echo -e " -- Install Winetricks packages"
       WINEARCH=win64 WINEPREFIX="$wine_prefix_folder"/"$input_variable"/ winetricks vcrun2005
   }

   elx-wine-install-prefix () {
       echo -e " -- Dependecies: wine staging (debian/ubuntu), winetricks (github), GNU Coreutils, GNU Bash"

       echo -e " -- Descricao: Create wineprefix with given name and get dxvk lastest dll and dependencies"

       echo -e " -- Killing wineserver"
       wineserver -k

       echo -e " -- Making ~/wine/prefixes/ if not present"
       if [ ! -d "$HOME/wine/prefixes/" ]; then
	   mkdir -p "$HOME"/wine/prefixes/
       fi

       echo -e " -- Assigning Wine prefixes folder"
       wine_prefix_folder="$HOME/wine/prefixes"

       echo -e " -- Please name your Wine prefix:"

       # keyboard input to string

       read -r input_variable

       echo -e " -- Disable Wine debugging"
       export WINEDEBUG=-all

       echo -e " -- Create Wine prefix, press Ok"
       WINEARCH=win32 WINEPREFIX="$wine_prefix_folder"/"$input_variable"/ winecfg

       echo -e " -- Install Winetricks packages"
       # WINEPREFIX="$wine_prefix_folder"/"$input_variable"/ winetricks
   }

   elx-makeit () {

       if [ ! -e "$PWD/Makefile" ]; then
	   echo -e " --  There is no Makefile in PWD"
       else
	   echo -e " -- Using Makefile"
	   echo "          "

	   echo -e " -- Cleaning Project"
	   echo "          "

	   make -ks clean

	   echo "          "
	   echo -e " -- Building Project"
	   echo "          "

	   make -ks build

	   echo "          "
	   echo -e " -- Project built with no ERROR"
	   echo "          "

	   echo -e " -- Running binary:"
	   echo "<<-----------------------------------------"
	   echo "          "
	   echo "          "

	   make -ks run

	   echo "          "
	   echo "          "
	   echo "----------------------------------------->>"

	   echo "          "
	   echo -e " -- DONE!"
       fi
   }


   elx-eclipse-jdtls ()
   {
       cd $EMACS_DIR && mkdir -pv $EMACS_DIR/eclipse.jdt.ls

       wget -c http://download.eclipse.org/jdtls/snapshots/jdt-language-server-latest.tar.gz

       tar zxvf jdt-language-server-latest.tar.gz -C eclipse.jdt.ls
   }



   # Get the current date using strftime.
   # # Using above function.
   # $ date "%a %d %b  - %l:%M %p"
   # Fri 15 Jun  - 10:00 AM

   # # Using echo directly.
   # $ echo '%(%a %d %b  - %l:%M %p)T\n' "-1"
   # Fri 15 Jun  - 10:00 AM

   # # Assigning a variable using echo.
   # $ echo -v date '%(%a %d %b  - %l:%M %p)T\n' '-1'
   # $ echo '%s\n' "$date"
   # Fri 15 Jun  - 10:00 AM
   elx-date() {
       # Usage: date "format"
       # See: 'man strftime' for format.
       echo "%($1)T" "-1"
   }

   # Progress bars
   # Example Usage:

   # for ((i=0;i<=100;i++)); do
   #     # Pure bash micro sleeps (for the example).
   #     (:;:) && (:;:) && (:;:) && (:;:) && (:;:)

   #     # Print the bar.
   #     bar "$i" "10"
   # done

   # echo '\n'
   # my-bar() {
   #     # Usage: bar 1 10
   #     #            ^----- Elapsed Percentage (0-100).
   #     #               ^-- Total length in chars.
   #     ((elapsed=$1*$2/100))

   #     # Create the bar with spaces.
   #     echo -v prog  "%${elapsed}s"
   #     echo -v total "%$(($2-elapsed))s"

   #     echo '%s\r' "[${prog// /-}${total}]"
   # }

   # my-update () {
   #     sudo "$SYSTEM_PACKAGE_MANAGER" update "$1"
   # }

   # my-terminal-apps-update () {
   #     npm update -g
   # }

   elx-quicklisp ()
   {
       cd "$HOME" || exit
       wget -c https://beta.quicklisp.org/quicklisp.lisp

       sbcl --no-sysinit --no-userinit --load quicklisp.lisp \
	    --eval '(quicklisp-quickstart:install)' \
	    --eval "(ql:quickload '(:quicklisp-slime-helper :clx :cl-ppcre :alexandria :xembed :xml-emitter :dbus :prove :swank))" \
	    --eval "(quit)"

       quick="$HOME/quicklisp.lisp"; [[ -e "$HOME/quicklisp" ]] && [[ -e $quick ]] && rm $quick
   }

   _BLUE="\\e[44m"
   _ORANGE="\\e[43m"
   _GREEN="\\e[42m"
   _RED="\\e[41m"
   _RESET="\033[0m"

   elx-welcome ()
   {
       printf "$_BLUE %s $_RESET " $1
       echo
   }
   elx-warning ()
   {
       printf "$_RED %s $_RESET" $1
       echo
   }
   elx-sucess ()
   {
       printf "$_GREEN %s $_RESET" $1
       echo
   }
   elx-notify ()
   {
       printf "$_ORANGE %s $_RESET" $1
       echo
   }

   # ---------------
   elx-clone ()
   {
       url=$1
       folder=$2
       git clone $url $folder
   }

   elx-cd ()
   {
       cd $1 || echo "No $_ folder"
   }

   elx-folder-exist-do()
   { # if folder exist do action

       local folder="$1"
       local action="$2"

       [[ -d $folder ]] && eval "$action $folder"
   }

   elx-folder-not-exist-do()
   {
       # if folder do not exist do action
       # if $3 = "yes" do that too

       local folder="$1"
       local action="$2"

       [[ ! -d $folder ]] && eval "$action $folder"

       local action2="$3"
       [[ $action2 = "yes" ]] && cd "$folder"
   }

   elx-dolist()
   { # For each element in string list do action

       local action="$1"
       local packs="$2"

       echo $action

       # # Arguments to packs array
       # IFS=' ' read -r -a packages <<< "$1"

       # # iterate over each elm in array
       # for package in "${packages[@]}"
       # do
       #     echo $package
       # done
   }

   elx-app-installed()
   {
       local app="$1"
       local action="$@"

       [[ -x $(command -v $app) ]] && "$action"
   }


   lxDolist ()
   {
       local packages="$2"
       local runner="$1"

       for pack in "${packages[@]}"
       do
	   "${runner}" "${pack}"
       done
   }

   # --------------- SYSTEM PACKAGES INTERFACE
   elx-qemu-image-run () {

       elx-notify " -- Qemu img to be run: "
       qemu-system-x86_64
       -m 2G -vga qxl \
	  -drive if=pflash,format=raw,readonly,file=/usr/share/OVMF/OVMF_CODE.fd \
	  -drive if=pflash,format=raw,file=OVMF_VARS.fd \
	  -enable-kvm \
	  -hda
   }


   # # Type
   # alias Tp='type -a'

   # # git
   # alias Gitcl='git clone '
   # alias Giti='git init'
   # alias Gita='git add '
   # alias Gitc='git commit -m '
   # alias Gitpl='git pull'
   # alias Gitrh='git reset --hard'
   # alias Gits='git status'
   # alias Gitpu='git push'
   # alias Gitp='git push origin master'
   # alias Gitb='git branch -a --color'
   # alias Gitch='git checkout -- '
   # alias Gitrv='git remote -v'
   # alias Gitrao='git remote add origin'
   # alias Gitrso='git remote set-url origin'
   # alias Gitm='git mv'
   # alias Gitcov='git count-objects -v'
   # alias Gitsh='git stash'
   # alias Gitri='git rebase -i'
   # alias Git='git --no-pager'
   # alias Gitd='git diff --color'
   # alias Gitdw='git diff --color-words'
   # alias Gitl='git log --pretty=oneline'
   # alias Gitbsd='git branch --sort=-committerdate '
   # alias Gitbsa='git branch --sort=committerdate '
   # alias Giuncr='git config --system --unset credential.helper'

   # # GNU Emacs
   # alias Em='emacs -nw'
   # alias Emt='emacs -nw' # emacs terminal
   # alias Ems="SUDO_EDITOR=\"emacsclient -t -a emacs\" sudoedit"
   # alias Emq='emacs -Q -nw'
   # alias Emct='emacsclient -t'
   # alias Emcc='emacsclient -nc'
   # alias EM='cd $HOME/.emacs.d/'

   # # GNU Screen
   # alias Scrl='screen -list'
   # alias Scrw='screen -wipe'

   # # Network Manager
   # alias Nnon='nmcli networking on'
   # alias Nnoff='nmcli networking off'
   # alias Nds='nmcli device status'
   # alias Ncs='nmcli connection show'
   # alias Ncsa='nmcli connection show --active'
   # alias Ndw='nmcli dev wiend'

   # # ffmpeg
   # alias Ffsr='ffmpeg -video_size 1920x1080 -framerate 60 -f x11grab -i :0.0 st-urxvt.mp4'

   # # systemD
   # alias Sctl='systemically'
   # alias Ssc='sudo systemctl'
   # alias Scu='systemctl --user'
   # alias Jc='sudo journalctl'
   # alias Journ='sudo journalctl -b -f'
   # alias Out='loginctl terminate-user $USER'
   # alias Pwf='systemctl poweroff'
   # alias Rbt='systemctl reboot'
   # # alias Spd='sudo systemctl suspend'

   # # udisks
   # alias umb='udisksctl mount -b /dev/sd'
   # alias umnb='udisksctl unmount -b /dev/sd'

   # # Tmux
   # alias Tks='tmux kill-server'
   # alias Tkst='tmux kill-session -t'
   # alias Ta='tmux at'
   # alias Tns='tmux new -s Shell'
   # alias Tds='tmux detach'

   # # ------------------------------------------------
   # # Distros Commands

   # # GNU Guix & GuixSD
   # alias Gpul='guix pull'
   # alias Gpulu='guix pull & guix package -u' # guix pull and update
   # alias Gpu='guix package -u' # update
   # alias Gpi='guix package -i' # install
   # alias Gpr='guix package -r' # remove
   # alias Gps='guix package -s' # search
   # alias Gpsos='guix package --show=PACKAGE' # Show details about PACKAGE
   # alias Gpl='guix package -l' # list generation
   # alias Gpl='guix package --roll-back' # rollback one generation
   # alias GpS='guix package -S' # switch-generation=PATTERN
   # alias Gsr='sudo guix system reconfigure'

   # # Debian
   # alias Apu='sudo apt update'
   # alias Apug='sudo apt upgrade'
   # alias Apdg='sudo apt dist-upgrade'
   # alias Apd='apt download' # download deb file
   # alias Aptsg='sudo apt -t stable upgrade'
   # alias Aptug='sudo apt -t unstable upgrade'
   # alias Apttg='sudo apt -t testing upgrade'
   # alias Apuug='sudo apt update ; sudo apt upgrade'
   # alias Api='sudo apt install'
   # alias Apri='sudo apt --reinstall install'
   # alias Appr='sudo apt purge'
   # alias Apio='sudo apt install --only-upgrade'
   # alias Aps='apt search'
   # alias Apr='sudo apt remove'
   # alias Apar='sudo apt autoremove'
   # alias Apli='apt list --installed'
   # alias Aplil='apt list --installed | less'
   # alias Apsl='sudo vi /etc/apt/sources.list'
   # alias Apac='apt-get clean'
   # alias Apfs='apt-file search'
   # alias Apcir='apt-cache --installed rdepends' # package X depends on
   # # .deb in /var/cache/apt/archives/

   # # Red Hat
   # alias Di='sudo dnf install'
   # alias Dr='sudo dnf remove'
   # alias Du='sudo dnf update'
   # alias Ds='dnf search'
   # alias Dli='dnf list installed | less'

   # # Nix
   # alias Ni='nix-env -i' # install
   # alias Ne='nix-env -e' # uninstall
   # alias Nqa='nix-env -qa' # search for specific app or no argument view the set of available packages in Nixpkgs
   # alias Nu='nix-env -u' # update specific package or no arguments upgrade all packages
   # alias Nrb='nix-env --rollback' # rollback specific package
      # alias Ngc='nix-collect-garbage -d' #  run the Nix garbage collector to get rid of unused packages, since uninstalls or upgrades don't actually delete them
      # alias Ndr='nix-env -u --dry-run' # mimic universal upgrade, just like Gentoo's emerge

      # # Gentoo - # https://wiki.gentoo.org/wiki/Portage#emerge
      # alias Ema='sudo emerge --ask'
      # alias Ems='sudo emerge --search'
      # alias Emu='sudo emerge --unmerge'
      # alias Ema='emerge --ask'
      # alias Ems='emerge --search'
      # alias Empv='emerge --pretend --verbose'
      # alias Eman='sudo emerge --ask --newuse'
      # alias Emudnw='sudo emerge --update --deep --newuse @world'
      # alias Emundww='sudo emerge --ask --update --newuse --deep --with-bdeps=y @world'
      # alias Emacdw='sudo emerge --ask --changed-use --deep @world'
      # alias Emdc='sudo emerge --depclean'
      # alias Emrr='sudo revdep-rebuild'
      # alias Emdc='sudo dispatch-conf'
      # alias Emig='emerge --info | grep -i'
      # alias Emigu='emerge --info | grep USE'
      # alias Empr='sudo emerge @preserved-rebuild'
      # # Eclean https://wiki.gentoo.org/wiki/Eclean#Cleaning_distendles
      # alias Emc='sudo eclean distendles'
      # alias Emc='sudo eclean packages'
      # # qpkg

      # # Arch Linux
      # alias Pacu='sudo pacman -Syu'
      # alias Paci='sudo pacman -S'
      # alias Pacr='sudo pacman -R'
      # alias Pacr='sudo pacman -Rd'
      # alias Pacrns='sudo pacman -Rns'
      # alias Pacrcns='sudo pacman -Rcns'
      # # alias Pacrnsqd='pacman -Rsn $(pacman -Qdtq)'
      # alias Pacs='pacman -Ss'
      # alias Pacud='pacman -U'
      # alias Pacqe='pacman -Qe'
      # alias Pacqi='pacman -Qi'
      # alias Pacqt='pacman -Qt | less'
      # # alias Mirrors='sudo pacman-mirrors -g; and sudo pacman -Su'

      # # Arch Linux Pckbuild Handlers
      # alias Yi='yaourt -S --aur'
      # alias Yu='yaourt -Su --aur'
      # alias Ys='yaourt -Ss --aur'
      # alias Pru='pacaur -Su -a'
      # alias Pri='pacaur -S'
      # alias Prs='pacaur -Ss'
      # alias Prr='pacaur -R'

      # #PCKBUILD
      # alias Mpsi='makepkg -si'

      # alias Strc="awk '!/^ *#/ && NF'"
      alias Dmesg='clear; dmesg -eL -w'

      # Scripts for recursive tasks (without space on endlename)
      alias Jpg='for f in *.jpg; do mv "$f" "$f/%.jpg/.jp"; done'
    #+end_src
** Emacs
*** scripts
    #+begin_src shell-script
#!/usr/bin/env bash

MX="$HOME/.config/emacs"

emacs -q -l "$MX/profiles/emacs-reader.el"

    #+end_src
*** EXWM - Emacs como Sistem Operacional
    #+begin_src emacs-lisp ~/.config/emacs/init.el :mkdirp yes



    (use-package exwm
      :config
      (defcustom a/controler (when (executable-find "pactl")
			       "pactl")
	"pactl - Control a running PulseAudio sound server")

      (defcustom a/controler-volume "set-sink-volume"
	"Set the volume of the specified sink")

      (defun a/system-volume-get ()
	"Get System Current Volume"
	(when (executable-find "amixer")
	  (let ((current-volume (shell-command-to-string "amixer get Master")))
	    (string-match "\\([0-9]+%\\)" current-volume)
	    (match-string 0 current-volume))))

      (defun a/system-volume-set (delta)
	"Increase System Volume"
	(interactive)
	(when a/controler
	  (start-process "PULSEAUDIO-INCREASE" nil
			 a/controler a/controler-volume "0" delta)))

      (defun a/system-volume-increase ()
	"Increase System Volume"
	(interactive)
	(a/system-volume-set "+3%")
	(a/system-volume-get)
	(message "Volume: %s" (a/system-volume-get)))

      (defun a/system-volume-decrease ()
	"Decrease System Volume"
	(interactive)
	(a/system-volume-set "-3%")
	(message "Volume: %s" (a/system-volume-get)))

      (defun a/system-volume-toggle ()
	"Mute System audio"
	(interactive)
	(when a/controler
	  (start-process "PULSEAUDIO-INCREASE" nil  a/controler
			 "set-sink-mute" "0" "toggle")))
      )
    #+end_src
*** Built-in definitions
    #+BEGIN_SRC emacs-lisp

	      ;; (add-hook 'text-mode-hook 'abbrev-mode) ;; abbrev config
	      ;; (setq-default abbrev-mode t)  ;; turn on abbrev mode globally
	      ;; (setq save-abbrevs 'silently)

      ;; (global-set-key (kbd "C-s") 'isearch-forward-regexp)
      ;; (global-set-key (kbd "C-r") 'isearch-backward-regexp)
      ;; (global-set-key (kbd "C-M-s") 'isearch-forward)
      ;; (global-set-key (kbd "C-M-r") 'isearch-backward)

  ;; (global-eldoc-mode)
	    ;; (remove-hook 'minibuffer-setup-hook 'winner-save-unconditionally)

		  ;; (add-hook 'prog-mode-hook 'flyspell-prog-mode)
		  ;; (dolist (hooks '(org-mode-hook
		  ;;                  text-mode-hook))
		  ;;   (add-hook hooks 'flyspell-mode))


			;; (define-ibuffer-column size-h
			;;   (:name "Size" :inline t)
			;;   (file-size-human-readable (buffer-size))) ;


			;; ;; Modify the default ibuffer-formats (toggle with `)
			;; (setq ibuffer-formats
			;;       '((mark modified read-only vc-status-mini " "
			;;               (name 22 22 :left :elide)
			;;               " "
			;;               (size-h 9 -1 :right)
			;;               " "
			;;               (mode 12 12 :left :elide)
			;;               " "
			;;               vc-relative-file)
			;;         (mark modified read-only vc-status-mini " "
			;;               (name 22 22 :left :elide)
			;;               " "
			;;               (size-h 9 -1 :right)
			;;               " "
			;;               (mode 14 14 :left :elide)
			;;               " "
			;;               (vc-status 12 12 :left)
			;;               " "
			;;               vc-relative-file)))

			;; (setq ibuffer-filter-group-name-face 'font-lock-doc-face)

			    (concat (getenv "GUIX_PROFILE") "/share/info")
				(add-to-list 'Info-directory-list "/usr/local/share/info/")



				  (when (fboundp 'fringe-mode) (set-fringe-mode '(2 . 6)))
				      (display-time)


				      (when (> emacs-major-version 25) (pixel-scroll-mode))

				      (stq text-scale-mode-step 0.8
					   display-time-day-and-date t
					   display-time-24hr-format t
					   display-time-string-forms
					   '(" "
					     dayname " "
					     month " / "
					     day " "
					     24-hours ":"
					     minutes " "  (if mail " Mail " " "))
					   display-battery-mode t
					   battery-mode-line-format " %p "
					   )
				      ;; =============== TIME / BATTERY
				      (display-battery-mode)

				      (cond ((member "Noto Sans Mono" (font-family-list))
					     (set-face-attribute 'mode-line nil :font "Noto Sans Mono-10"))
					    ((member "DejaVu Sans Mono" (font-family-list))
					     (set-face-attribute 'mode-line nil :font "DejaVu Sans Mono-10")))


				      (global-set-key [remap forward-word] 'forward-same-syntax)

				      ;; ** ADVICES
				      (defun elisp-index-search-with-text-at-point ()
					"Provide the symbol at point as the default when reading TOPIC interactively."
					(interactive
					 (let ((symbol-at-point (thing-at-point 'symbol)))
					   (list (read-string (if symbol-at-point
								  (format "Topic (%s): " symbol-at-point)
								(format "Topic: "))
							      nil nil symbol-at-point)))))

				      (advice-add 'elisp-index-search :before #'elisp-index-search-with-text-at-point)

				      (defun previous-line--next-line-at-end (&optional arg try-vscroll)
					"Insert an empty line when moving up from the top line."
					(if (and next-line-add-newlines (= arg 1)
						 (save-excursion (beginning-of-line) (bobp)))
					    (progn
					      (beginning-of-line)
					      (newline))))

				      (advice-add 'previous-line :before #'previous-line--next-line-at-end)


				      (put 'narrow-to-region 'disabled nil)
				      (put 'narrow-to-page 'disabled nil)
				      (put 'narrow-to-defun 'disabled nil)
				      (put 'upcase-region 'disabled nil)
				      (put 'downcase-region 'disabled nil)

    #+END_SRC

*** Functions,variables
    #+BEGIN_SRC emacs-lisp :results code
    (defun dired-two-pane ()
      "Open dired in two-pane setup."
      (interactive)
      (push-window-configuration)
      (let ((here default-directory))
	(delete-other-windows)
	(dired "~/")
	(split-window-horizontally)
	(dired here)))




    ;; --------------- JAVA
    (when (executable-find "pacmd")
      (let ((current-volume
	     (substring
	      (shell-command-to-string
	       "pacmd list-sink-inputs | grep -m 1 volume \
    | awk '{print substr($5, 1, length($1)-2)}'")
	      0 -1)))
	(message "VOL: %s" current-volume)))



       ;;;###autoload
    (defun my-java-eclipse-jdt-ls-server-install ()
      "Download and extract eclipse lsp server into .emacs.d folder."
      (interactive)

      (let* ((default-directory user-emacs-directory))
	(when (file-directory-p "eclipse.jdt.ls") (delete-directory "eclipse.jdt.ls" t t))
	(make-directory "eclipse.jdt.ls")

	(when (file-exists-p "jdt-language-server-latest.tar.gz") (delete-file "jdt-language-server-latest.tar.gz" t))

	(set-process-sentinel ;; !!! Use a sentinel to make sure second start-process only begins after this one finish!
	 (start-process "ECLIPSE-LS-INSTALL" "ECLIPSE-LS-INSTALL"
			"wget" "http://download.eclipse.org/jdtls/snapshots/jdt-language-server-latest.tar.gz")

	 (lambda (p e) (when (= 0 (process-exit-status p))
		    (start-process "ECLIPSE-SERVER-EXTRACT" "ECLIPSE-SERVER-EXTRACT"
				   "tar" "zxvf" "jdt-language-server-latest.tar.gz" "-C" "eclipse.jdt.ls"))))))


       ;;;###autoload
    (defun my-langtool-install ()
      "Install languagetool server."
      (interactive)
      (start-process-shell-command "LanguageTool Server Install" nil "
		     cd ~/.emacs.d/ || exit
		     wget -N https://languagetool.org/download/LanguageTool-stable.zip
		     unzip LanguageTool-stable.zip
		     mv LanguageTool-??? LanguageTool
		     rm LanguageTool-stable.zip ")
      (message "LangTool installed"))

    ;; =============== MPC
    ;; (require 'mpc)

    ;; (autoload 'zap-up-to-char "misc"
    ;;   "Kill up to, but not including ARGth occurrence of CHAR." t)

    (:eval (when (frame-parameter (selected-frame) 'exwm-active)
	     (condition-case nil
		 (number-to-string
		  (+ 1
		     (exwm-workspace--position
		      (exwm-workspace--workspace-from-frame-or-index
		       (selected-frame)))))
	       (error "~"))))


    ;; ** LOCAL LIBRARIES (USER-LISP)
    (when (file-exists-p (expand-file-name "site-lisp" user-emacs-directory))

      (add-to-list 'load-path (expand-file-name "site-lisp" user-emacs-directory))

      (progn   ;; PO-MODE
	(setq auto-mode-alist (cons '("\\.pot\\'\\|\\.pot\\." . po-mode)  auto-mode-alist))
	(autoload 'po-mode "po-mode" "Major mode for translators to edit PO files" t))

      (require 'xahlee)
      (require 'prelude)
      (require 'cherry-picked-defun))



       ;;;###autoload



    ;; ------------------ EXWM
     ;;;###autoload
    (defun my-audio-reload ()
      "Reload stuck pulseaudio"
      (interactive)
      (start-process "PULSEAUDIO-RELOAD" nil "pulseaudio" "-k" )
      (start-process "PULSEAUDIO-RELOAD" nil "pulseaudio" "-D" )
      (message "Pulseaudio reloaded"))

     ;;;###autoload
    (defun my-videocam-record ()
      "Record webcam."
      (interactive)
      (async-shell-command "cd ~/Videos; ffmpeg -f v4l2 -video_size 1280x720 -i /dev/video0 -c:v libx264 -preset ultrafast webcam.mkv")
      (other-window 1)
      (message "recording webcam using ffmpeg"))

    ;; ------------------ SYSTEM UPDATE
    (defcustom my-system-package-manager
      (let ((package-manager (cond ((executable-find "apt") "apt")
				   ((executable-find "dnf") "dnf"))))
	package-manager)
      "Define System's Package Manager.")

    (defun guixp ()
      "Is System Package Manager `guix'?."
      (when (executable-find "guix") "t"))

    (defun npmp ()
      "Is System Package Manager `npm'?."
      (when (executable-find "npm") "t"))

    (defun my-system-packages-run-command (sudo package-manager command command2 noconfirm)
      "Update and Upgrade System packages."
      (let* ((height (/ (window-total-height) 3))
	     (command2 (when command2
			 (concat *and* sudo *space* my-system-package-manager *space* command2))))

	;; Run with Shell
	(split-window-vertically (- height))
	(other-window 1)
	(eshell "new")
	(insert (concat
		 sudo *space* package-manager *space* command
		 command2
		 ,*space* noconfirm))
	(eshell-send-input)))

    (defun my-system-packages-update ()
      "Update System Packages database."
      (interactive)
      (when (guixp)
	(let ((update "pull"))
	  (my-system-packages-run-command "sudo" my-system-package-manager "update" nil "-y"))))

    (defun my-system-packages-upgrade ()
      "Upgrade System Packages."
      (interactive)
      (my-system-packages-run-command "sudo" my-system-package-manager "update" "upgrade" "-y")
      (cond ((guixp)
	     (my-system-packages-run-command nil "guix" "pull" "package -u" nil))
	    ((npmp)
	     (my-system-packages-run-command nil "npm" "update -g" nil nil))))


    ;; --------------- MISC

     ;;;###autoload
    (defun my-query-replace-word-at-point ()
      "Replace word at point with given string."
      (interactive)
      (setq word (thing-at-point 'word t))
      (message "String is %s"
	       (setq nameto (read-minibuffer (format "Replace %s with: " word))))
      (query-replace word nameto))

     ;;;###autoload
    (defun my-java-find-pom-file ()
      "Find file in upper dirs."
      (interactive)
      (if-let* ((pf (expand-file-name
		     (concat (locate-dominating-file
			      (if (string= (file-name-nondirectory (buffer-file-name)) "pom.xml")
				  (file-name-directory
				   (directory-file-name (file-name-directory (buffer-file-name))))
				(buffer-file-name))
			      "pom.xml")
			     "pom.xml"))))
	  (find-file pf)
	(message "Unable to find pom.xml")))


    (defun next-word (p)
      "Move point to the beginning of the next word, past any spaces"
      (interactive "d")
      (forward-word)
      (forward-word)
      (backward-word))
    (global-set-key [remap forward-word] 'next-word)

     ;;;###autoload
    (defun my-to-next-word (&optional n)
      "Go to the beginning of the Nth word after point.
	 N defaults to 1 (next word)."
      (interactive "p")
      (if (< n 0)
	  (to-previous-word (- n))
	(dotimes (_  n)
	  (let ((opt  (point)))
	    (skip-syntax-forward "^w")
	    (when (eq opt (point))
	      (skip-syntax-forward "w")
	      (skip-syntax-forward "^w"))))))
    ;; (global-set-key [remap forward-word] 'my-to-next-word)

     ;;;###autoload
    (defun my-to-previous-word (&optional n)
      "Go to the beginning of the Nth word before point.
	 N defaults to 1 (previous word)."
      (interactive "p")
      (if (< n 0)
	  (to-next-word (- n))
	(dotimes (_  n)
	  (let ((opt  (point)))
	    (skip-syntax-backward "w")
	    (when (eq opt (point))
	      (skip-syntax-backward "^w")
	      (skip-syntax-backward "w"))))))
    ;; (global-set-key [remap backward-word] 'my-to-previous-word)


    ;; =============== EGLOT
    ;; ECLIPSER SERVER JAR TO CLASSPATH
    (defconst my/eclipse-jdt-home (concat user-emacs-directory "eclipse.jdt.ls/plugins/org.eclipse.equinox.launcher_1.5.200.v20180922-1751.jar"))

    (defun my/eclipse-jdt-contact (interactive)
      (let ((cp (getenv "CLASSPATH")))
	(setenv "CLASSPATH" (concat cp ":" my/eclipse-jdt-home))
	(unwind-protect
	    (eglot--eclipse-jdt-contact nil)
	  (setenv "CLASSPATH" cp))))

    (setcdr (assq 'java-mode eglot-server-programs) #'my/eclipse-jdt-contact)

    (unless (file-exists-p "~/.emacs.d/eclipse.jdt.ls/plugins")
      (my-java-eclipse-jdt-ls-server-install))

    (defadvice elisp-index-search (before interactive-default activate)
      "Provide the symbol at point as the default when reading TOPIC interactively."
      (interactive
       (let ((symbol-at-point (thing-at-point 'symbol)))
	 (list (read-string (if symbol-at-point
				(format "Topic (%s): " symbol-at-point)
			      (format "Topic: "))
			    nil nil symbol-at-point)))))



    (defun e-ido-for-mode(prompt the-mode)
      (switch-to-buffer
       (ido-completing-read prompt
			    (save-excursion
			      (delq
			       nil
			       (mapcar (lambda (buf)
					 (when (buffer-live-p buf)
					   (with-current-buffer buf
					     (and (eq major-mode the-mode)
						  (buffer-name buf)))))
				       (buffer-list)))))))

    (defun e-ido-shell-buffer()
      (interactive)
      (ido-for-mode "Shell:" 'shell-mode))

    ;; (global-set-key (kbd "C-c s") 'ido-shell-buffer)

    (defun e-ido-for-this-mode
	()
      (interactive)
      (let
	  ((the-mode major-mode))
	(switch-to-buffer
	 (ido-completing-read
	  (format "Buffers of %s: " the-mode)
	  (save-excursion
	    (delq
	     nil
	     (mapcar
	      (lambda
		(buf)
		(when
		    (buffer-live-p buf)
		  (with-current-buffer buf
		    (and
		     (eq major-mode the-mode)
		     (buffer-name buf)))))
	      (buffer-list))))))))


    (defun e-recentf-ido-find-file-prelude ()
      "Find a recent file using Ido."
      (interactive)
      (let ((file (ido-completing-read "Choose recent file: " recentf-list nil t)))
	(when file
	  (find-file file))))



    (defun e-recentf-ido-find-file ()
      "Find a recent file using Ido."
      (interactive)
      (let* ((file-assoc-list
	      (mapcar (lambda (x)
			(cons (file-name-nondirectory x)
			      x))
		      recentf-list))
	     (filename-list
	      (remove-duplicates (mapcar #'car file-assoc-list)
				 :test #'string=))
	     (filename (ido-completing-read "Choose recent file: "
					    filename-list
					    nil
					    t)))
	(when filename
	  (find-file (cdr (assoc filename
				 file-assoc-list))))))

    (defun e-recentf-open-files-compl ()
      (interactive)
      (let* ((all-files recentf-list)
	     (tocpl (mapcar (function
			     (lambda (x) (cons (file-name-nondirectory x) x))) all-files))
	     (prompt (append '("File name: ") tocpl))
	     (fname (completing-read (car prompt) (cdr prompt) nil nil)))
	(find-file (cdr (assoc-ignore-representation fname tocpl)))))



    ;; =============== Filtering messages
    ;; filter annoying messages
    ;; (defvar message-filter-regexp-list '("^Starting new Ispell process \\[.+\\] \\.\\.\\.$"
    ;;				     "^Ispell process killed$")
    ;;   "filter formatted message string to remove noisy messages")
    ;; (defadvice message (around message-filter-by-regexp activate)
    ;;   (if (not (ad-get-arg 0))
    ;;       ad-do-it
    ;;     (let ((formatted-string (apply 'format (ad-get-args 0))))
    ;;       (if (and (stringp formatted-string)
    ;;	       (some (lambda (re) (string-match re formatted-string)) message-filter-regexp-list))
    ;;	  (save-excursion
    ;;	    (set-buffer "*Messages*")
    ;;	    (goto-char (point-max))
    ;;	    (insert formatted-string "\n"))
    ;;	(progn
    ;;	  (ad-set-args 0 `("%s" ,formatted-string))
    ;;	  ad-do-it)))))

    ;; Highlight Current Line
    ;; (global-hl-line-mode +1)


    ;; =============== PO-MODE

    (progn
      ;; (require 'po-mode)
      ;; (require 'po-mode+)

      (autoload 'po-mode "po-mode"
	"Major mode for translators to edit PO files" t)
      (setq auto-mode-alist (cons '("\\.pot\\'\\|\\.pot\\." . po-mode)
				  auto-mode-alist))

      (autoload 'po-mode "po-mode+"
	"Major mode for translators to edit PO files" t))


    (defun j-youtube-dl ()
      "Abo abo youtube video downloader | improved version"
      (interactive)
      (setq terminal-process (get-buffer-process "*ansi-term*"))
      (let* ((str (current-kill 0))
	     (proc (if (get-buffer "*ansi-term*")
		       (switch-to-buffer "*ansi-term*")
		     (ansi-term "/bin/bash"))))
	(term-send-string
	 proc (concat "cd ~/Videos && youtube-dl " str "\n"))))


    ;; ==================================================
    ;; IDO
    ;; ==================================================

    ;; __________________________________________________
    ;; Make Ido complete almost anything (except the stuff where it shouldn't)
    ;; M-x to ido like

    (defvar ido-enable-replace-completing-read t
      "If t, use ido-completing-read instead of completing-read if possible.

						      Set it to nil using let in around-advice for functions where the
						      original completing-read is required.  For example, if a function
						      foo absolutely must use the original completing-read, define some
						      advice like this:

						      (defadvice foo (around original-completing-read-only activate)
							(let (ido-enable-replace-completing-read) ad-do-it))")

    ;; Replace completing-read wherever possible, unless directed otherwise
    (defadvice completing-read
	(around use-ido-when-possible activate)
      (if (or (not ido-enable-replace-completing-read) ; Manual override disable ido
	      (and (boundp 'ido-cur-list)
		   ido-cur-list)) ; Avoid infinite loop from ido calling this
	  ad-do-it
	(let ((allcomp (all-completions "" collection predicate)))
	  (if allcomp
	      (setq ad-return-value
		    (ido-completing-read prompt
					 allcomp
					 nil require-match initial-input hist def))
	    ad-do-it))))

    ;; OR

    (global-set-key
     "\M-X"
     (lambda ()
       (interactive)
       (call-interactively
	(intern
	 (ido-completing-read
	  "M-X "
	  (all-completions "" obarray 'commandp))))))


    ;; ==================================================
    ;; MISC

    (global-set-key (kbd "M-w") ; C-c
		    (lambda (beg end &optional region)
		      (interactive (list (mark) (point) 'region))
		      (let ((old-point end))
			(if (use-region-p)
			    (kill-ring-save beg end region)
			  (kill-ring-save
			   (move-beginning-of-line nil)
			   (progn (move-end-of-line nil)
				  (point)))
			  (goto-char old-point)))))


    (require 'f)
    (require 's)
    (defun e-download-file (url directory file-name)
      "Download the file at URL into DIRECTORY.
		The FILE-NAME defaults to the one used in the URL."
      (interactive
       ;; We're forced to let-bind url here since we access it before
       ;; interactive binds the function parameters.
       (let ((url (read-from-minibuffer "URL: ")))
	 (list
	  url
	  (read-directory-name "Destination dir: ")
	  ;; deliberately not using read-file-name since that inludes the directory
	  (read-from-minibuffer
	   "File name: "
	   (car (last (s-split "/" url)))))))
      (letu ((destination (f-join directory file-name)))
	    (url-copy-file url destination 't)
	    (find-file destination)))

    (defun yank-pop-forwards (arg)
      (interactive "p")
      (ya
       nk-pop (- arg)))
    (global-set-key "\M-Y" 'yank-pop-forwards) ; M-Y (Meta-Shift-Y)


     ;;;###autoload
    (defun keep-beginning-of-line (ARG)
      "Make `C-a` keep going to first non-whitespace character _and_then_ beginning of
       next line(previous with C-u).
     It will not work as expected in comment block because of goddamn rebox2"
      (interactive "P")
      (when (bolp) (forward-line (if ARG -1 1)))
      (let ((orig-point (point)))
	(back-to-indentation)
	(when (= orig-point (point))
	  (move-beginning-of-line 1))))
    ;; (global-set-key [remap move-beginning-of-line] #'keep-beginning-of-line)

     ;;;###autoload
    (defun keep-end-of-line (ARG)
      "Make `C-e` keep going to end of next line(previous with C-u).
     It will become normal in comment block because of goddamn rebox2"
      (interactive "P")
      (when (eolp) (forward-line (if ARG -1 1)))
      (move-end-of-line nil))
    ;; (global-set-key [remap move-end-of-line] #'keep-end-of-line)


     ;;;###autoload
    (defun increment-region (&optional beg end ARG)
      "Increment all decimal numbers in region between `beg' and `end' by `ARG'.
     If no prefix ARG is given, increment by 1.
     If the mark is not active, try to build a region using `symbol-at-point'."
      (interactive "r\np")
      (or ARG (setq ARG 1))
      (unless (and mark-active transient-mark-mode)
	(let ((bounds (bounds-of-thing-at-point 'symbol)))
	  (if bounds (setq beg (car bounds) end (cdr bounds)))))
      (if (< end beg)
	  (let ((tmp end))
	    (setq beg end end tmp)))
      (save-excursion
	(goto-char beg)
	(while (re-search-forward "-?[0-9]+" end t)
	  (replace-match (number-to-string (+ ARG (string-to-number (match-string 0)))))))
      (setq deactivate-mark nil))
    ;;
     ;;;###autoload
    (defun decrement-region (&optional beg end ARG)
      "Decrement all decimal numbers in region between `beg' and `end' by `ARG'.
      If no prefix ARG is given, increment by 1.
      If the mark is not active, try to build a region using `symbol-at-point'."
      (interactive "r\np")
      (or ARG (setq ARG 1))
      (unless (and mark-active transient-mark-mode)
	(let ((bounds (bounds-of-thing-at-point 'symbol)))
	  (if bounds (setq beg (car bounds) end (cdr bounds)))))
      (increment-region beg end (- ARG)))


    ;; ==================================================
    ;; CASE
    ;; ==================================================

    ;; ;; You can do M-c/u/l the whole word in any position inside the word
    ;; (defadvice endless/upcase (before upcase-word-advice activate)
    ;;   (unless (looking-back "\\b")
    ;;     (backward-word)))
    ;; (defadvice endless/downcase (before downcase-word-advice activate)
    ;;   (unless (looking-back "\\b")
    ;;     (backward-word)))
    ;; (defadvice endless/capitalize (before capitalize-word-advice activate)
    ;;   (unless (looking-back "\\b")
    ;;     (backward-word)))

    ;; automatically convert the comma/dot once downcase/upcase next character
     ;;;###autoload
    (defun endless/convert-punctuation (rg rp)
      "Look for regexp RG around point, and replace with RP.
     Only applies to text-mode."
      (let ((f "\\(%s\\)\\(%s\\)")
	    (space "?:[[:blank:]\n\r]*"))
	;; We obviously don't want to do this in prog-mode.
	(if (and (derived-mode-p 'org-mode)
		 (or (looking-at (format f space rg))
		     (looking-back (format f rg space))))
	    (replace-match rp nil nil nil 1))))

     ;;;###autoload
    (defun endless/capitalize ()
      "Capitalize region or word.
     Also converts commas to full stops, and kills
     extraneous space at beginning of line."
      (interactive)
      (endless/convert-punctuation "," ".")
      (if (use-region-p)
	  (call-interactively 'capitalize-region)
	;; A single space at the start of a line:
	(when (looking-at "^\\s-\\b")
	  ;; get rid of it!
	  (delete-char 1))
	(call-interactively 'subword-capitalize)))

     ;;;###autoload
    (defun endless/downcase ()
      "Downcase region or word.
     Also converts full stops to commas."
      (interactive)
      (endless/convert-punctuation "\\." ",")
      (if (use-region-p)
	  (call-interactively 'downcase-region)
	(call-interactively 'subword-downcase)))

     ;;;###autoload
    (defun endless/upcase ()
      "Upcase region or word."
      (interactive)
      (if (use-region-p)
	  (call-interactively 'upcase-region)
	(call-interactively 'subword-upcase)))



    ;; MoveText
    (defun e-move-text-internal (arg)
      (cond
       ((and mark-active transient-mark-mode)
	(if (> (point) (mark))
	    (exchange-point-and-mark))
	(let ((column (current-column))
	      (text (delete-and-extract-region (point) (mark))))
	  (forward-line arg)
	  (move-to-column column t)
	  (set-mark (point))
	  (insert text)
	  (exchange-point-and-mark)
	  (setq deactivate-mark nil)))
       (t
	(let ((column (current-column)))
	  (beginning-of-line)
	  (when (or (> arg 0) (not (bobp)))
	    (forward-line)
	    (when (or (< arg 0) (not (eobp)))
	      (transpose-lines arg))
	    (forward-line -1))
	  (move-to-column column t)))))

    (defun e-move-text-down (arg)
      "Move region (transient-mark-mode active) or current line
	   arg lines down."
      (interactive "*p")
      (e-move-text-internal arg))
    (global-set-key (kbd "C-c <down>") 'e-move-text-down)

    (defun e-move-text-up (arg)
      "Move region (transient-mark-mode active) or current line
	   arg lines up."
      (interactive "*p")
      (e-move-text-internal (- arg)))
    (global-set-key (kbd "C-c <up>") 'e-move-text-up)

    (defun e-ido-imenu ()
      "Update the imenu index and then use ido to select a symbol to navigate to.
		Symbols matching the text at point are put first in the completion list."
      (interactive)
      (imenu--make-index-alist)
      (let ((name-and-pos '())
	    (symbol-names '()))
	(flet ((addsymbols (symbol-list)
			   (when (listp symbol-list)
			     (dolist (symbol symbol-list)
			       (let ((name nil) (position nil))
				 (cond
				  ((and (listp symbol) (imenu--subalist-p symbol))
				   (addsymbols symbol))

				  ((listp symbol)
				   (setq name (car symbol))
				   (setq position (cdr symbol)))

				  ((stringp symbol)
				   (setq name symbol)
				   (setq position (get-text-property 1 'org-imenu-marker symbol))))

				 (unless (or (null position) (null name))
				   (add-to-list 'symbol-names name)
				   (add-to-list 'name-and-pos (cons name position))))))))
	  (addsymbols imenu--index-alist))
	;; If there are matching symbols at point, put them at the beginning of `symbol-names'.
	(let ((symbol-at-point (thing-at-point 'symbol)))
	  (when symbol-at-point
	    (let* ((regexp (concat (regexp-quote symbol-at-point) "$"))
		   (matching-symbols (delq nil (mapcar (lambda (symbol)
							 (if (string-match regexp symbol) symbol))
						       symbol-names))))
	      (when matching-symbols
		(sort matching-symbols (lambda (a b) (> (length a) (length b))))
		(mapc (lambda (symbol) (setq symbol-names (cons symbol (delete symbol symbol-names))))
		      matching-symbols)))))
	(let* ((selected-symbol (ido-completing-read "Symbol? " symbol-names))
	       (position (cdr (assoc selected-symbol name-and-pos))))
	  (push-mark (point))
	  (goto-char position))))
    #+END_SRC

    #+RESULTS:
    #+BEGIN_SRC emacs-lisp
    e-ido-imenu
    #+END_SRC
*** Packages
    #+BEGIN_SRC emacs-lisp :results code
    (use-package feather
      :disabled
      :config (feather-mode))

    (use-package leaf
      :disabled
      :config (feather-mode))

    (use-package leaf-keywords
      :disabled
      :config (leaf-keywords-init))

    (use-package selectrum
      :disabled
      :defer 1
      :config
      (ido-mode 0)
      (selectrum-mode +1))

    (use-package selectrum-prescient
      :disabled
      :defer 1
      :config
      (selectrum-prescient-mode +1)
      (prescient-persist-mode +1))

    (use-package ereader
      :defer 1
      :config
      (add-hook 'ereader-mode-hook
		(lambda ()
		  (face-remap-add-relative 'variable-pitch
					   :family "Hack"
					   :height 1.4)))
      (setq visual-fill-column-center-text t)
      (add-hook 'ereader-mode-hook 'visual-line-mode))

   (use-package csharp-mode
      :defer 1
      :hook (csharp-mode . company-mode)
      :config
      (add-to-list 'auto-mode-alist '("\\.csproj\\'" . xml-mode))
      (add-hook 'csharp-mode-hook (lambda () (setq truncate-lines t)))
      (defun csharp-disable-clear-string-fences (orig-fun &rest args)
	"This turns off `c-clear-string-fences' for `csharp-mode'. When
			      on for `csharp-mode' font lock breaks after an interpolated string
			      or terminating simple string."
	(unless (equal major-mode 'csharp-mode)
	  (apply orig-fun args)))
      (advice-add 'c-clear-string-fences :around 'csharp-disable-clear-string-fences))


    (defvar sharper-path (f-join *site-lisp* "/sharper.el"))
    (use-package sharper
      :load-path sharper-path
      :bind ("C-c S" . sharper-main-transient))


    (use-package slime
      :defer t
      :custom
      (slime-contribs '(slime-fancy))
      (inferior-lisp-program "sbcl")
      :bind (:map slime-mode-map ("C-c s" . slime-selector))
      :config (slime-setup '(slime-fancy slime-asdf slime-company)))

    (use-package slime-company
      :after (slime company)
      :config (setq slime-company-completion 'fuzzy
		    slime-company-after-completion 'slime-company-just-one-space))

    (use-package flymake-diagnostic-at-point
      :defer 1
      :config (add-hook 'flymake-mode-hook #'flymake-diagnostic-at-point-mode))

    (use-package eldoc-box
      :after eglot-mode
      :config (add-hook 'eglot--managed-mode-hook #'eldoc-box-hover-mode t))

    (use-package dante
      :after haskell-mode
      :commands 'dante-mode
      :hook
      ('haskell--mode . 'flymake-mode)
      ('haskell--mode . 'dante-mode))

    (use-package pydoc
      :defer 1
      :custom (pydoc-command "python3 -m pydoc"))

    (use-package dap-java :after (lsp-java))

    (use-package lsp-java
      :disabled
      :after lsp
      :hook ('java-mode-hook . 'lsp)
      :config  (use-package dap-java :after (lsp-java)))

    (use-package company-lsp
      :disabled
      :defer t
      :commands company-lsp)

    (use-package omnisharp
      :disabled
      :defer 1
      :hook
      (csharp-mode . company-mode)
      (omnisharp-mode . csharp-mode)
      :custom (omnisharp-debug t)
      :config
      (eval-after-load 'company'(add-to-list 'company-backends
					     'company-omnisharp)))

    (use-package elpy
      :disabled
      :defer 1
      :custom
      (elpy-rpc-python-command "python3.8")
      (python-shell-interpreter-args "-i")
      (elpy-syntax-check-command "pylint")
      :init (advice-add 'python-mode :before 'elpy-enable))

    (use-package quickrun
      :defer t
      :bind (("C-c q" . quickrun)))

    (use-package centaur-tabs
      :disabled
      :defer 1
      :demand
      :config (centaur-tabs-mode t)
      :custom
      (centaur-tabs-set-bar 'under)
      :bind
      ("C-<prior>" . centaur-tabs-backward)
      ("C-<next>" . centaur-tabs-forward))

    ;; (use-package haskell-mode
    ;;   :custom haskell-check-command)

    ;; (quelpa '(mini-frame :repo "muffinmad/emacs-mini-frame" :fetcher github) :upgrade nil)
    ;; (require 'mini-frame)
    ;; (mini-frame-mode)
    (use-package lsp-python-ms
      :hook (python-mode . (lambda ()
			     (require 'lsp-python-ms)
			     (lsp))))

    (when (require 'quelpa nil :noerror)
      (quelpa
       '(quelpa-use-package
	 :fetcher git
	 :url "https://github.com/quelpa/quelpa-use-package.git"))
      (require 'quelpa-use-package)

      (use-package mini-frame
	:quelpa ((mini-frame :repo "muffinmad/emacs-mini-frame" :fetcher github) :upgrade t))

      (use-package sbuffer
	:quelpa (sbuffer :fetcher github :repo "alphapapa/sbuffer.el")))


    (use-package evil
      :disabled
      :defer 1
      :config (evil-mode 1))

    (use-package evil-collection
      :disabled
      :custom (evil-collection-setup-minibuffer t)
      (evil-want-keybinding nil)
      :init (evil-collection-init))

    (use-package ido-at-point
      :disabled
      :after ido
      :config (ido-at-point-mode))

    (use-package ess
      :disabled
      :defer 1
      :custom ((ess-indent-level 4)
	       (ess-arg-function-offset 4)
	       (ess-else-offset 4)))

    (use-package spaceline
      :disabled
      :defer 1
      :config
      (require 'spaceline-config)
      (spaceline-spacemacs-theme)
      (setq-default spaceline-erc-track-p nil
		    spaceline-buffer-encoding-abbrev-p nil
		    spaceline-buffer-size-p nil
		    spaceline-version-control-p nil
		    spaceline-hud-p nil
		    spaceline-buffer-modified-p nil
		    powerline-default-separator 'slant))

    (use-package ace-window
      :defer 1
      :bind (("C-c c" . ace-window)))

    (use-package highlight-indentation
      :defer 1
      :config )

    (dolist (modes '(python-mode-hook
		     js-mode-hook
		     css-mode-hook
		     c-mode-hook
		     c++-mode-hook
		     java-mode-hook))
      (add-hook modes 'eglot-ensure))

    (use-package pipenv
      :disabled
      :hook (python-mode . pipenv-mode)
      :custom
      (pipenv-keymap-prefix "C-c p")
      (pipenv-projectile-after-switch-function
       #'pipenv-projectile-after-switch-extended))

    (use-package circadian
      :defer 1
      :custom (circadian-themes '(("6:00" . tsdh-light)
				  ("19:30" . wombat)))
      :config (circadian-setup))

    (use-package color-identifiers-mode
      :init (add-hook 'after-init-hook 'global-color-identifiers-mode))

    (use-package browse-kill-ring
      :defer 1
      :config
      (setq browse-kill-ring-separator "\f")
      (global-set-key (kbd "M-Y") 'browse-kill-ring)
      (with-eval-after-load 'browse-kill-ring
	(define-key browse-kill-ring-mode-map (kbd "C-g") 'browse-kill-ring-quit)
	(define-key browse-kill-ring-mode-map (kbd "M-n") 'browse-kill-ring-forward)
	(define-key browse-kill-ring-mode-map (kbd "M-p") 'browse-kill-ring-previous)))

    (use-package mini-modeline
      :disabled
      :defer 1
      :config (mini-modeline-mode t))

    #+END_SRC
*** Functions - Cherry Picked
    #+BEGIN_SRC emacs-lisp :mkdirp yes
    ;; CHERRY-PICKED FUNCTIONS
    ;; ========================================

    (defun my-unkillable-scratch-buffer ()
      "Nope, I must not do it!"
      (if (equal (buffer-name (current-buffer)) "*scratch*")
	  (progn
	    (delete-region (point-min) (point-max))
	    nil)
	t))
    (add-hook 'kill-buffer-query-functions 'my-unkillable-scratch-buffer)

    ;;;###autoload
    (defun my-swap-buffer ()
      "Repeated invocations will make the selected buffer appear in each windows successively."
      (interactive)
      (cond ((one-window-p) (display-buffer (other-buffer)))
	    ((let* ((buffer-a (current-buffer))
		    (window-b (cadr (window-list)))
		    (buffer-b (window-buffer window-b)))
	       (set-window-buffer window-b buffer-a)
	       (switch-to-buffer buffer-b)
	       (other-window 1)))))

    ;;;###autoload
    (defun my-window-split-toggle ()
      "Toggle between horizontal and vertical split with two windows."
      (interactive)
      (if (> (length (window-list)) 2)
	  (error "Can't toggle with more than 2 windows!")
	(let ((func (if (window-full-height-p)
			#'split-window-vertically
		      #'split-window-horizontally)))
	  (delete-other-windows)
	  (funcall func)
	  (save-selected-window
	    (other-window 1)
	    (switch-to-buffer (other-buffer))))))

    ;;;###autoload
    (defun elisp-index-search+ ()
      "Look up TOPIC in the indices of the Emacs Lisp Reference Manual."
      (interactive)
      (let (topic)
	(setq topic (read-string (concat "Subject to look up: ") nil nil
				 (symbol-name (symbol-at-point))))
	(funcall 'switch-to-buffer-other-window nil)
	(info "elisp")
	(Info-index topic)))


    ;; Helper function
    (defun my-shorten-directory (dir max-length)
      "Show up to `max-length' characters of a directory name `dir'."
      (let ((path (reverse (split-string (abbreviate-file-name dir) "/")))
	    (output ""))
	(when (and path (equal "" (car path)))
	  (setq path (cdr path)))
	(while (and path (< (length output) (- max-length 4)))
	  (setq output (concat (car path) "/" output))
	  (setq path (cdr path)))
	(when path
	  (setq output (concat ".../" output)))
	output))

    ;;;###autoload
    (defun my-current-minor-modes ()
      "Return the list of minor modes enabled in the current buffer."
      (interactive)
      (delq nil
	    (mapcar (lambda (mode)
		      (if (and (boundp mode) (symbol-value mode))
			  mode))
		    minor-mode-list)))

    ;;;###autoload
    (defun my-find-symbol-at-point ()
      "Find the symbol at point, i.e. go to definition."
      (interactive)
      (let ((sym (symbol-at-point)))
	(if (boundp sym)
	    (find-variable sym)
	  (find-function sym))))

    ;; (define-key lisp-mode-shared-map (kbd "M-.") 'find-symbol-at-point)


    ;; BUFFER-MOVE: https://www.emacswiki.org/emacs/buffer-move.el

    ;;;###autoload
    (defun my-buf-move-up ()
      "Swap the current buffer and the buffer above the split.

    If there is no split, ie now window above the current one, an
    error is signaled."
      ;;  "Switches between the current buffer, and the buffer above the
      ;;  split, if possible."
      (interactive)
      (let* ((other-win (windmove-find-other-window 'up))
	     (buf-this-buf (window-buffer (selected-window))))
	(if (null other-win)
	    (error "No window above this one")
	  ;; swap top with this one
	  (set-window-buffer (selected-window) (window-buffer other-win))
	  ;; move this one to top
	  (set-window-buffer other-win buf-this-buf)
	  (select-window other-win))))

    ;;;###autoload
    (defun my-buf-move-down ()
      "Swap the current buffer and the buffer under the split.

    If there is no split, ie now window under the current one, an
    error is signaled."
      (interactive)
      (let* ((other-win (windmove-find-other-window 'down))
	     (buf-this-buf (window-buffer (selected-window))))
	(if (or (null other-win)
		(string-match "^ \\*Minibuf" (buffer-name (window-buffer other-win))))
	    (error "No window under this one")
	  ;; swap top with this one
	  (set-window-buffer (selected-window) (window-buffer other-win))
	  ;; move this one to top
	  (set-window-buffer other-win buf-this-buf)
	  (select-window other-win))))

    ;;;###autoload
    (defun my-buf-move-left ()
      "Swap the current buffer and the buffer on the left of the split.

    If there is no split, ie now window on the left of the current
    one, an error is signaled."
      (interactive)
      (let* ((other-win (windmove-find-other-window 'left))
	     (buf-this-buf (window-buffer (selected-window))))
	(if (null other-win)
	    (error "No left split")
	  ;; swap top with this one
	  (set-window-buffer (selected-window) (window-buffer other-win))
	  ;; move this one to top
	  (set-window-buffer other-win buf-this-buf)
	  (select-window other-win))))

    ;;;###autoload
    (defun my-mini-buffer-scratch ()
      "Opens up a new mini-buffer scratch!"
      (interactive)
      (let* ((height (/ (window-total-height) 3)))
	(split-window-vertically (- height))
	(other-window 1)
	(switch-to-buffer (get-buffer-create "*scratch*"))
	(lisp-interaction-mode)))


    ;; --------------------------------------------------
    ;; misc-cmd.el
    ;;;###autoload
    (defun my-delete-window-maybe-kill-buffer ()
      "Delete selected window.

    If no other window shows its buffer, kill the buffer too."
      (interactive)
      (let* ((selwin  (selected-window))
	     (buf     (window-buffer selwin)))
	(delete-window selwin)
	(unless (get-buffer-window buf 'visible) (kill-buffer buf))))

    ;;;###autoload
    (defun server-shutdown ()
      "Save buffers, Quit, and Shutdown (kill) server."
      (interactive)
      (save-some-buffers)
      (kill-emacs))


    ;;;###autoload
    (defun my-buf-move-right ()
      "Swap the current buffer and the buffer on the right of the split.

    If there is no split, ie now window on the right of the current
    one, an error is signaled."
      (interactive)
      (let* ((other-win (windmove-find-other-window 'right))
	     (buf-this-buf (window-buffer (selected-window))))
	(if (null other-win)
	    (error "No right split")
	  ;; swap top with this one
	  (set-window-buffer (selected-window) (window-buffer other-win))
	  ;; move this one to top
	  (set-window-buffer other-win buf-this-buf)
	  (select-window other-win))))

    ;;;###autoload
    (defun my-mark-line (&optional arg)
      "Put mark at end of line, point at beginning, ARG.

    A numeric prefix arg means move forward (backward if negative) that
    many lines, thus marking a line other than the one point was
    originally in."
      (interactive "P")
      (setq arg  (if arg (prefix-numeric-value arg) 0))
      (let ((inhibit-field-motion  t))
	(forward-line arg)
	(push-mark nil t t)
	(goto-char (line-end-position))))


    (defun insert-filename-as-heading ()
      "Take current filename (word separated by dash) as heading."
      (interactive)
      (insert
       (capitalize
	(replace-regexp-in-string "-" " " (file-name-sans-extension (buffer-name))))))

    (defun my-toggle-camelcase-underscores ()
      "Toggle between camelcase and underscore notation for the symbol at point."
      (interactive)
      (save-excursion
	(let* ((bounds (bounds-of-thing-at-point 'symbol))
	       (start (car bounds))
	       (end (cdr bounds))
	       (currently-using-underscores-p (progn (goto-char start)
						     (re-search-forward "_" end t))))
	  (if currently-using-underscores-p
	      (progn
		(upcase-initials-region start end)
		(replace-string "_" "" nil start end)
		(downcase-region start (1+ start)))
	    (replace-regexp "\\([A-Z]\\)" "_\\1" nil (1+ start) end)
	    (downcase-region start (cdr (bounds-of-thing-at-point 'symbol)))))))


    (defun ambrevar/call-process-to-string (program &rest args)
      "Call PROGRAM with ARGS and return output."
      (with-output-to-string
	(with-current-buffer standard-output
	  (apply 'call-process program nil t nil args))))


    ;;;###autoload
    (defun my-yank-more ()
      (interactive)
      (insert "[[")
      (yank)
      (insert "][more]]"))

    ;;;###autoload
    (defun my-install-maybe (pkg)
      (when (not (package-installed-p pkg))
	(package-install pkg)))

    ;; (my-install-maybe 'yasnippet)

    ;;;###autoload
    (defun my-number-of-packages ()
      "Function to return the number of active packages."
      (interactive)
      (message (concat (number-to-string (length package-selected-packages))
		       " packages installed...")))

    ;;;###autoload
    (defun my-spell-buffer-pt-BR ()
      "Function to spell checking inside the buffer."
      (interactive)
      (ispell-change-dictionary "brasileiro")
      (flyspell-buffer))

    ;;;###autoload
    (defun my-spell-buffer-en ()
      "Function to spell checking the buffer in US language."
      (interactive)
      (ispell-change-dictionary "en_US")
      (flyspell-buffer))


    ;;;###autoload
    (defun idomenu--read (index-alist &optional prompt guess)
      (let* ((symatpt (thing-at-point 'symbol))
	     (names (mapcar 'car index-alist))
	     (name (ido-completing-read (or prompt "imenu ") names
					nil t nil nil nil))
	     (choice (assoc name index-alist)))
	(if (imenu--subalist-p choice)
	    (idomenu--read (cdr choice) prompt nil)
	  choice)))

    ;;;###autoload
    (defun my-ido-menu ()
      (interactive)
      (let ((index-alist (cdr (imenu--make-index-alist))))
	(if (equal index-alist '(nil))
	    (message "No imenu tags in buffer")
	  (imenu (idomenu--read index-alist nil t)))))


    ;;;###autoload
    (defun my-hrs/find-file-as-sudo ()
      (interactive)
      (let ((file-name (buffer-file-name)))
	(when file-name
	  (find-alternate-file (concat "/sudo::" file-name)))))

    ;;;###autoload
    (defun my-sudo-edit (&optional arg)
      "Edit currently visited file as root.

			With a prefix ARG prompt for a file to visit.
			Will also prompt for a file to visit if current
			buffer is not visiting a file."
      (interactive "P")
      (if (or arg (not buffer-file-name))
	  (find-file (concat "/sudo:root@localhost:"
			     (ido-read-file-name "Find file(as root): ")))
	(find-alternate-file (concat "/sudo:root@localhost:" buffer-file-name))))

    ;; Vi-like text processing

    ;; https://www.emacswiki.org/emacs/CopyWithoutSelection
    ;;;###autoload
    (defun my-get-point (symbol &optional arg)
      "get the point"
      (funcall symbol arg)
      (point))


    ;;;###autoload
    (defun my-copy-thing (begin-of-thing end-of-thing &optional arg)
      "copy thing between beg & end into kill ring"
      (save-excursion
	(let ((beg (my-get-point begin-of-thing 1))
	      (end (my-get-point end-of-thing arg)))
	  (copy-region-as-kill beg end))))

    ;;;###autoload
    (defun my-paste-to-mark(&optional arg)
      "Paste things to mark, or to the prompt in shell-mode"
      (let ((pasteMe
	     (lambda()
	       (if (string= "shell-mode" major-mode)
		   (progn (comint-next-prompt 25535) (yank))
		 (progn (goto-char (mark)) (yank) )))))
	(if arg
	    (if (= arg 1)
		nil
	      (funcall pasteMe))
	  (funcall pasteMe))))

    ;;;###autoload
    (defun my-copy-word (&optional arg)
      "Copy words at point into kill-ring"
      (interactive "P")
      (copy-thing 'backward-word 'forward-word arg)
      (message "Copied word"))

    ;;;###autoload
    (defun my-copy-backward-word ()
      "copy word before point"
      (interactive "")
      (save-excursion
	(let ((end (point))
	      (beg (my-get-point 'backward-word)))
	  (copy-region-as-kill beg end)))
      (message "Copied backward word"))


    ;;;###autoload
    (defun my-hrs/append-to-path (path)
      "Add a path both to the $PATH variable and to Emacs' exec-path."
      (setenv "PATH" (concat (getenv "PATH") ":" path))
      (add-to-list 'exec-path path))

    ;;;###autoload
    (defun my-def-word ()
      "Find definition of the word at point"
      (interactive)
      (browse-url (concat "https://www.merriam-webster.com/dictionary/" (thing-at-point 'word))))

    ;; Zap to before char - Just like Vi Copy inside delimiters
    ;;;###autoload
    (defun my-zap-to-before-char (arg char)
      "Kill up to and ARGth occurrence of CHAR.
				      Case is ignored if `case-fold-search' is non-nil in the current buffer.
				      Goes backward if ARG is negative; error if CHAR not found."
      (interactive "p\ncZap to BEFORE char: ")
      ;; Avoid "obsolete" warnings for translation-table-for-input.
      (with-no-warnings
	(if (char-table-p translation-table-for-input)
	    (setq char (or (aref translation-table-for-input char) char))))
      (kill-region (point) (progn
			     (search-forward (char-to-string char) nil nil arg)
			     (goto-char (if (> arg 0) (1- (point)) (1+ (point))))
			     (point))))


    ;; Capitalize word despite where point is (/u/dakra)

    (defmacro dakra-define-up/downcase-dwim (case)
      (let ((func (intern (concat "dakra-" case "-dwim")))
	    (doc (format "Like `%s-dwim' but %s from beginning when no region is active." case case))
	    (case-region (intern (concat case "-region")))
	    (case-word (intern (concat case "-word"))))
	`(defun ,func (arg)
	   ,doc
	   (interactive "*p")
	   (save-excursion
	     (if (use-region-p)
		 (,case-region (region-beginning) (region-end))
	       (beginning-of-thing 'symbol)
	       (,case-word arg))))))
    (dakra-define-up/downcase-dwim "upcase")
    (dakra-define-up/downcase-dwim "downcase")
    (dakra-define-up/downcase-dwim "capitalize")



    ;;;###autoload
    (defun my-mark-sexp-backward (N)
      "Mark word backword"
      (interactive "p")
      (if (and
	   (not (eq last-command this-command))
	   (not (eq last-command 'e-mark-word)))
	  (set-mark (point)))
      (backward-word N))



    ;;;###autoload
    (defun my-replace-next-underscore-with-camel (arg)
      (interactive "p")
      (if (> arg 0)
	  (setq arg (1+ arg))) ; 1-based index to get eternal loop with 0
      (let ((case-fold-search nil))
	(while (not (= arg 1))
	  (search-forward-regexp "\\b_[a-z]")
	  (forward-char -2)
	  (delete-char 1)
	  (capitalize-word 1)
	  (setq arg (1- arg)))))


    ;;;###autoload
    (defun my-yank-to-x-clipboard ()
      "Terminal x to clipboard workaround"
      (interactive)
      (if (region-active-p)
	  (progn
	    (shell-command-on-region (region-beginning) (region-end) "xsel -i")
	    (message "Yanked region to clipboard!")
	    (deactivate-mark))
	(message "No region active; can't yank to clipboard!")))

    ;; Permit yanking text to X11 clipboard; beats the heck out of
    ;; manually copying with the cursor.


    ;;;###autoload
    (defun my-copy-file-name-to-clipboard ()
      "Copy the current buffer file name to the clipboard."
      (interactive)
      (let ((filename (if (equal major-mode 'dired-mode)
			  default-directory
			(buffer-file-name))))
	(when filename
	  (kill-new filename)
	  (message "Copied buffer file name '%s' to the clipboard." filename))))


    ;;;###autoload
    (defun my-switch-bury-or-kill-buffer (&optional aggr)
      "With no argument, switch (but unlike C-x b, without the need
			to confirm).  With C-u, bury current buffer.  With double C-u,
			kill it (unless it's modified)."
      (interactive "P")
      (cond
       ((eq aggr nil) (progn
			(cl-dolist (buf '("*Buffer List*" "*Ibuffer*" "*Bookmark List* " "*vc-change-log*" "*Locate*" "*grep*" "*compilation*" ))
			  (when (get-buffer buf)
			    (bury-buffer buf)))
			(switch-to-buffer (other-buffer))))
       ((equal aggr '(4)) (bury-buffer))
       ((equal aggr '(16)) (kill-buffer-if-not-modified (current-buffer)))))



    ;;;###autoload
    (defun my-transpose-chars (arg)
      "Move character at point forward one character.
			With prefix arg ARG, effect is to take character at point and
			drag it forward past ARG other characters (backward if ARG
			negative)."
      (interactive "P")
      (forward-char)
      (if arg
	  (transpose-chars arg)
	(transpose-chars 1))
      (backward-char))

    ;;;###autoload
    (defun my-backward-transpose-chars (arg)
      "Move character at point backward one character.
			With prefix arg ARG, effect is to take character at point and
			drag it backward past ARG other characters (backward if ARG
			negative)."
      (interactive "P")
      (my-transpose-chars (- (or arg 1))))

    ;;;###autoload
    (defun my-backward-transpose-words (arg)
      "Interchange wnords around point, leaving point at end of them.
			With prefix arg ARG, effect is to take word before or around
			point and drag it forward past ARG other words (backward if ARG
			negative). If ARG is zero, the words around or after point and
			around or after mark are interchanged."
      (interactive "P")
      (transpose-words (- (or arg 1))))

    ;;;###autoload
    (defun my-transpose-lines (arg)
      (interactive "P")
      (save-excursion
	(end-of-line)
	(when (eobp) (insert "\n")))
      (forward-line 1)
      (with-demoted-errors "%s"
	(transpose-lines (or arg 1)))
      (forward-line -1))

    ;;;###autoload
    (defun my-backward-transpose-lines (arg)
      (interactive "P")
      (my-transpose-lines (- (or arg 1))))

    ;;;###autoload
    (defun my-paragraphize ()
      "Remove empty newlines from region."
      (interactive)
      (if (region-active-p)
	  (flush-lines "^$" (region-beginning) (region-end))
	(message "No region active.")))

    ;;;###autoload
    (defun my-transpose-window ()
      "Switch between vertical and horizontal window split.

			Source: http://tinyurl.com/k7s96fa"
      (interactive)
      (if (= (count-wiqndows) 2)
	  (let* ((this-win-buffer (window-buffer))
		 (next-win-buffer (window-buffer (next-window)))
		 (this-win-edges (window-edges (selected-window)))
		 (next-win-edges (window-edges (next-window)))
		 (this-win-2nd (not (and (<= (car this-win-edges)
					     (car next-win-edges))
					 (<= (cadr this-win-edges)
					     (cadr next-win-edges)))))
		 (splitter
		  (if (= (car this-win-edges)
			 (car (window-edges (next-window))))
		      #'split-window-horizontally
		    #'split-window-vertically)))
	    (delete-other-windows)
	    (let ((first-win (selected-window)))
	      (funcall splitter)
	      (if this-win-2nd (other-window 1))
	      (set-window-buffer (selected-window) this-win-buffer)
	      (set-window-buffer (next-window) next-win-buffer)
	      (select-window first-win)
	      (if this-win-2nd (other-window 1))))))

    ;;;###autoload
    (defun my-split-vert-focus ()
      "Split window vertically and move focus to other window."
      (interactive)
      (split-window-right)
      (other-window 1))

    ;;;###autoload
    (defun my-split-horz-focus ()
      "Split window horizontally and move focus to other window."
      (interactive)
      (split-window-below)
      (other-window 1))

    ;;;###autoload
    (defun sudo-shell-command (command)
      (interactive "MShell command (root): ")
      (with-temp-buffer
	(cd "/sudo::/")
	(async-shell-command command)))

    ;;;###autoload
    (defun my-auto-commit-on-kill ()
      (when buffer-file-name
	(let* ((current (magit-file-relative-name))
	       (choices (nconc (magit-modified-files) (magit-untracked-files)))
	       (to-stage (car (member current choices))))
	  (when to-stage
	    (magit-stage-file to-stage)
	    (magit-commit)))))

    ;; (add-hook 'kill-buffer-hook 'my/auto-commit-on-kill)

    ;;;###autoload
    (defun my-open-line-below ()
      (interactive)
      (end-of-line)
      (newline)
      (indent-for-tab-command))

    ;;;###autoload
    (defun my-open-line-above ()
      (interactive)
      (beginning-of-line)
      (newline)
      (forward-line -1)
      (indent-for-tab-command))

    ;;;###autoload
    (defun my-goto-line-with-feedback ()
      "Show line numbers temporarily, while prompting for the line number input"
      (interactive)
      (unwind-protect
	  (progn
	    (linum-mode 1)
	    (goto-line (read-number "Goto line: ")))
	(linum-mode -1)))

    ;;;###autoload
    (defun my-dired-du ()
      (interactive)
      (let ((files (dired-get-marked-files)))
	(with-temp-buffer
	  (apply 'call-process "/usr/bin/du" nil t nil "-sch" files)
	  (message "Size of all marked files: %s"
		   (progn
		     (re-search-backward "\\(^[0-9.,]+[A-Za-z]+\\).*total$")
		     (match-string 1))))))


    (require 'url)

    ;;;###autoload
    (defun my-download-file (&optional url download-dir download-name)
      (interactive)
      (let ((url (or
		  url
		  (read-string "Enter download URL: "))))
	(let ((download-buffer (url-retrieve-synchronously url)))
	  (save-excursion
	    (set-buffer download-buffer)
	    ;; we may have to trim the http response
	    (goto-char (point-min))
	    (re-search-forward "^$" nil 'move)
	    (forward-char)
	    (delete-region (point-min) (point))
	    (write-file (concat (or download-dir
				    "~/Downloads/")
				(or download-name
				    (car (last (split-string url "/" t))))))))))


    ;;;###autoload
    (defun query-replace-from-top ()
      (interactive)
      (save-excursion
	(goto-char (point-min))
	(call-interactively 'query-replace)))

    ;;;###autoload
    (defun flush-blank-lines (start end)
      "Mark a block and delete all blank/empty lines inside it."
      (interactive "r")
      (flush-lines "^\\s-*$" start end nil))

    ;;;###autoload
    (defun wh/start-tmp-file (file-name)
      "Create a file in /tmp for the given file name."
      (interactive "sName of temporary file: ")
      (start--file (expand-file-name (format "/tmp/%s" file-name))))

    ;;;###autoload
    (defun my-increment-region (&optional beg end ARG)
      "Increment all decimal numbers in region between `beg' and `end' by `ARG'.
    If no prefix ARG is given, increment by 1.
    If the mark is not active, try to build a region using `symbol-at-point'."
      (interactive "r\np")
      (or ARG (setq ARG 1))
      (unless (and mark-active transient-mark-mode)
	(let ((bounds (bounds-of-thing-at-point 'symbol)))
	  (if bounds (setq beg (car bounds) end (cdr bounds)))))
      (if (< end beg)
	  (let ((tmp end))
	    (setq beg end end tmp)))
      (save-excursion
	(goto-char beg)
	(while (re-search-forward "-?[0-9]+" end t)
	  (replace-match (number-to-string (+ ARG (string-to-number (match-string 0)))))))
      (setq deactivate-mark nil))
    ;;
    ;;;###autoload
    (defun my-decrement-region (&optional beg end ARG)
      "Decrement all decimal numbers in region between `beg' and `end' by `ARG'.
     If no prefix ARG is given, increment by 1.
     If the mark is not active, try to build a region using `symbol-at-point'."
      (interactive "r\np")
      (or ARG (setq ARG 1))
      (unless (and mark-active transient-mark-mode)
	(let ((bounds (bounds-of-thing-at-point 'symbol)))
	  (if bounds (setq beg (car bounds) end (cdr bounds)))))
      (increment-region beg end (- ARG)))


    (defun ora-shell-command-sentinel (process signal)
      (when (memq (process-status process) '(exit signal))
	(advice-remove 'shell-command-sentinel 'ora-shell-command-sentinel)
	(message (with-current-buffer (process-buffer process)
		   (string-trim (buffer-string))))))

    (defun ora-dired-do-async-shell-command ()
      "Wrap `dired-do-async-shell-command' without popup windows."
      (interactive)
      (advice-add 'shell-command-sentinel :override #'ora-shell-command-sentinel)
      (save-window-excursion
	(call-interactively 'dired-do-async-shell-command)))

    (provide 'cherry-picked-defun)



    #+END_SRC

    #+RESULTS:
    : cherry-picked-defun

*** Prelude - Functions
    #+BEGIN_SRC emacs-lisp :mkdirp yes
    ;; PRELUDE
    ;; ========================================

    (defun prelude-move-beginning-of-line (arg)
      "Move point back to indentation of beginning of line.

    Move point to the first non-whitespace character on this line.
    If point is already there, move to the beginning of the line.
    Effectively toggle between the first non-whitespace character and
    the beginning of the line.

    If ARG is not nil or 1, move forward ARG - 1 lines first. If
    point reaches the beginning or end of the buffer, stop there."
      (interactive "^p")
      (setq arg (or arg 1))

      ;; Move lines first
      (when (/= arg 1)
	(let ((line-move-visual nil))
	  (forward-line (1- arg))))

      (let ((orig-point (point)))
	(back-to-indentation)
	(when (= orig-point (point))
	  (move-beginning-of-line 1))))

    ;; (global-set-key (kbd "C-a") 'prelude-move-beginning-of-line)

    (defadvice kill-ring-save (before slick-copy activate compile)
      "When called interactively with no active region, copy a single
    line instead."
      (interactive
       (if mark-active (list (region-beginning) (region-end))
	 (message "Copied line")
	 (list (line-beginning-position)
	       (line-beginning-position 2)))))

    (defadvice kill-region (before slick-cut activate compile)
      "When called interactively with no active region, kill a single
      line instead."
      (interactive
       (if mark-active (list (region-beginning) (region-end))
	 (list (line-beginning-position)
	       (line-beginning-position 2)))))

    ;; kill a line, including whitespace characters until next non-whiepsace character
    ;; of next line
    (defadvice kill-line (before check-position activate)
      (if (member major-mode
		  '(emacs-lisp-mode scheme-mode lisp-mode
				    c-mode c++-mode objc-mode
				    latex-mode plain-tex-mode))
	  (if (and (eolp) (not (bolp)))
	      (progn (forward-char 1)
		     (just-one-space 0)
		     (backward-char 1)))))

    ;; taken from prelude-editor.el
    ;; automatically indenting yanked text if in programming-modes
    (defvar yank-indent-modes
      '(LaTeX-mode TeX-mode)
      "Modes in which to indent regions that are yanked (or yank-popped).
    Only modes that don't derive from `prog-mode' should be listed here.")

    (defvar yank-indent-blacklisted-modes
      '(python-mode slim-mode haml-mode)
      "Modes for which auto-indenting is suppressed.")

    (defvar yank-advised-indent-threshold 1000
      "Threshold (# chars) over which indentation does not automatically occur.")

    (defun yank-advised-indent-function (beg end)
      "Do indentation, as long as the region isn't too large."
      (if (<= (- end beg) yank-advised-indent-threshold)
	  (indent-region beg end nil)))

    (defadvice yank (after yank-indent activate)
      "If current mode is one of 'yank-indent-modes,
    indent yanked text (with prefix arg don't indent)."
      (if (and (not (ad-get-arg 0))
	       (not (member major-mode yank-indent-blacklisted-modes))
	       (or (derived-mode-p 'prog-mode)
		   (member major-mode yank-indent-modes)))
	  (let ((transient-mark-mode nil))
	    (yank-advised-indent-function (region-beginning) (region-end)))))

    (defadvice yank-pop (after yank-pop-indent activate)
      "If current mode is one of `yank-indent-modes',
    indent yanked text (with prefix arg don't indent)."
      (when (and (not (ad-get-arg 0))
		 (not (member major-mode yank-indent-blacklisted-modes))
		 (or (derived-mode-p 'prog-mode)
		     (member major-mode yank-indent-modes)))
	(let ((transient-mark-mode nil))
	  (yank-advised-indent-function (region-beginning) (region-end)))))

    ;; prelude-core.el
    (defun prelude-duplicate-current-line-or-region (arg)
      "Duplicates the current line or region ARG times.
    If there's no region, the current line will be duplicated. However, if
    there's a region, all lines that region covers will be duplicated."
      (interactive "p")
      (pcase-let* ((origin (point))
		   (`(,beg . ,end) (prelude-get-positions-of-line-or-region))
		   (region (buffer-substring-no-properties beg end)))
	(-dotimes arg
	  (lambda (n)
	    (goto-char end)
	    (newline)
	    (insert region)
	    (setq end (point))))
	(goto-char (+ origin (* (length region) arg) arg))))

    ;; prelude-core.el
    (defun indent-buffer ()
      "Indent the currently visited buffer."
      (interactive)
      (indent-region (point-min) (point-max)))

    ;; prelude-editing.el
    (defcustom prelude-indent-sensitive-modes
      '(coffee-mode python-mode slim-mode haml-mode yaml-mode)
      "Modes for which auto-indenting is suppressed."
      :type 'list)

    (defun indent-region-or-buffer ()
      "Indent a region if selected, otherwise the whole buffer."
      (interactive)
      (unless (member major-mode prelude-indent-sensitive-modes)
	(save-excursion
	  (if (region-active-p)
	      (progn
		(indent-region (region-beginning) (region-end))
		(message "Indented selected region."))
	    (progn
	      (indent-buffer)
	      (message "Indented buffer.")))
	  (whitespace-cleanup))))


    ;; add duplicate line function from Prelude
    ;; taken from prelude-core.el
    (defun prelude-get-positions-of-line-or-region ()
      "Return positions (beg . end) of the current line
    or region."
      (let (beg end)
	(if (and mark-active (> (point) (mark)))
	    (exchange-point-and-mark))
	(setq beg (line-beginning-position))
	(if mark-active
	    (exchange-point-and-mark))
	(setq end (line-end-position))
	(cons beg end)))

    (defun kill-default-buffer ()
      "Kill the currently active buffer -- set to C-x k so that users are not asked which buffer they want to kill."
      (interactive)
      (let (kill-buffer-query-functions) (kill-buffer)))

    ;; smart openline
    (defun prelude-smart-open-line (arg)
      "Insert an empty line after the current line.
    Position the cursor at its beginning, according to the current mode.
    With a prefix ARG open line above the current line."
      (interactive "P")
      (if arg
	  (prelude-smart-open-line-above)
	(progn
	  (move-end-of-line nil)
	  (newline-and-indent))))

    (defun prelude-smart-open-line-above ()
      "Insert an empty line above the current line.
    Position the cursor at it's beginning, according to the current mode."
      (interactive)
      (move-beginning-of-line nil)
      (newline-and-indent)
      (forward-line -1)
      (indent-according-to-mode))

    (defadvice kill-ring-save (before slick-copy activate compile)
      "When called interactively with no active region, copy a single
    line instead."
      (interactive
       (if mark-active (list (region-beginning) (region-end))
	 (message "Copied line")
	 (list (line-beginning-position)
	       (line-beginning-position 2)))))

    (defadvice kill-region (before slick-cut activate compile)
      "When called interactively with no active region, kill a single
      line instead."
      (interactive
       (if mark-active (list (region-beginning) (region-end))
	 (list (line-beginning-position)
	       (line-beginning-position 2)))))

    ;; kill a line, including whitespace characters until next non-whiepsace character
    ;; of next line
    (defadvice kill-line (before check-position activate)
      (if (member major-mode
		  '(emacs-lisp-mode scheme-mode lisp-mode
				    c-mode c++-mode objc-mode
				    latex-mode plain-tex-mode))
	  (if (and (eolp) (not (bolp)))
	      (progn (forward-char 1)
		     (just-one-space 0)
		     (backward-char 1)))))

    ;; Emacs-Redux - Increment and Decrement Integer at Point

    (require 'thingatpt)

    (defun my-thing-at-point-goto-end-of-integer ()
      "Go to end of integer at point."
      (let ((inhibit-changing-match-data t))
	;; Skip over optional sign
	(when (looking-at "[+-]")
	  (forward-char 1))
	;; Skip over digits
	(skip-chars-forward "[[:digit:]]")
	;; Check for at least one digit
	(unless (looking-back "[[:digit:]]")
	  (error "No integer here"))))
    (put 'integer 'beginning-op 'thing-at-point-goto-end-of-integer)

    (defun my-thing-at-point-goto-beginning-of-integer ()
      "Go to end of integer at point."
      (let ((inhibit-changing-match-data t))
	;; Skip backward over digits
	(skip-chars-backward "[[:digit:]]")
	;; Check for digits and optional sign
	(unless (looking-at "[+-]?[[:digit:]]")
	  (error "No integer here"))
	;; Skip backward over optional sign
	(when (looking-back "[+-]")
	  (backward-char 1))))
    (put 'integer 'beginning-op 'thing-at-point-goto-beginning-of-integer)

    (defun my-thing-at-point-bounds-of-integer-at-point ()
      "Get boundaries of integer at point."
      (save-excursion
	(let (beg end)
	  (thing-at-point-goto-beginning-of-integer)
	  (setq beg (point))
	  (thing-at-point-goto-end-of-integer)
	  (setq end (point))
	  (cons beg end))))
    (put 'integer 'bounds-of-thing-at-point 'thing-at-point-bounds-of-integer-at-point)

    (defun my-thing-at-point-integer-at-point ()
      "Get integer at point."
      (let ((bounds (bounds-of-thing-at-point 'integer)))
	(string-to-number (buffer-substring (car bounds) (cdr bounds)))))
    (put 'integer 'thing-at-point 'thing-at-point-integer-at-point)

    (defun my-increment-integer-at-point (&optional inc)
      "Increment integer at point by one.

	  With numeric prefix arg INC, increment the integer by INC amount."
      (interactive "p")
      (let ((inc (or inc 1))
	    (n (thing-at-point 'integer))
	    (bounds (bounds-of-thing-at-point 'integer)))
	(delete-region (car bounds) (cdr bounds))
	(insert (int-to-string (+ n inc)))))

    (defun my-decrement-integer-at-point (&optional dec)
      "Decrement integer at point by one.

	  With numeric prefix arg DEC, decrement the integer by DEC amount."
      (interactive "p")
      (increment-integer-at-point (- (or dec 1))))

    (defun my-prelude-open-with (arg)
      "Open visited file in default external program.

	  With a prefix ARG always prompt for command to use."
      (interactive "P")
      (when buffer-file-name
	(shell-command (concat
			(cond
			 ((and (not arg) (eq system-type 'darwin)) "open")
			 ((and (not arg) (member system-type '(gnu gnu/linux gnu/kfreebsd))) "xdg-open")
			 (t (read-shell-command "Open current file with: ")))
			" "
			(shell-quote-argument buffer-file-name)))))

    (defun my-byte-compile-init-dir ()
      "Byte-compile all your dotfiles."
      (interactive)
      (byte-recompile-directory user-emacs-directory 0))

    (defun my-remove-elc-on-save ()
      "If you're saving an elisp file, likely the .elc is no longer valid."
      (add-hook 'after-save-hook
		(lambda ()
		  (if (file-exists-p (concat buffer-file-name "c"))
		      (delete-file (concat buffer-file-name "c"))))
		nil
		t))

    ;; (add-hook 'emacs-lisp-mode-hook 'e-remove-elc-on-save)

    (defun my-eval-and-replace ()
      "Replace the preceding sexp with its value."
      (interactive)
      (backward-kill-sexp)
      (condition-case nil
	  (prin1 (eval (read (current-kill 0)))
		 (current-buffer))
	(error (message "Invalid expression")
	       (insert (current-kill 0)))))

    (defun my-smart-open-line-above ()
      "Insert an empty line above the current line.
	Position the cursor at it's beginning, according to the current mode."
      (interactive)
      (move-beginning-of-line nil)
      (newline-and-indent)
      (forward-line -1)
      (indent-according-to-mode))

    (defun top-join-line ()
      "Join the current line with the line beneath it."
      (interactive)
      (delete-indentation 1))

    (defun smarter-move-beginning-of-line (arg)
      "Move point back to indentation of beginning of line.

	Move point to the first non-whitespace character on this line.
	If point is already there, move to the beginning of the line.
	Effectively toggle between the first non-whitespace character and
	the beginning of the line.

	If ARG is not nil or 1, move forward ARG - 1 lines first.  If
	point reaches the beginning or end of the buffer, stop there."
      (interactive "^p")
      (setq arg (or arg 1))

      ;; Move lines first
      (when (/= arg 1)
	(let ((line-move-visual nil))
	  (forward-line (1- arg))))

      (let ((orig-point (point)))
	(back-to-indentation)
	(when (= orig-point (point))
	  (move-beginning-of-line 1))))

    ;; remap C-a to `smarter-move-beginning-of-line'
    ;;                 'smarter-move-beginning-of-line)

    (defun my-find-user-init-file ()
      "Edit the `user-init-file', in another window."
      (interactive)
      (find-file user-init-file))

    (defun my-rename-file-and-buffer ()
      "Rename the current buffer and file it is visiting."
      (interactive)
      (let ((filename (buffer-file-name)))
	(if (not (and filename (file-exists-p filename)))
	    (message "Buffer is not visiting a file!")
	  (let ((new-name (read-file-name "New name: " filename)))
	    (cond
	     ((vc-backend filename) (vc-rename-file filename new-name))
	     (t
	      (rename-file filename new-name t)
	      (set-visited-file-name new-name t t)))))))

    (defun my-delete-file-and-buffer ()
      "Kill the current buffer and deletes the file it is visiting."
      (interactive)
      (let ((filename (buffer-file-name)))
	(when filename
	  (if (vc-backend filename)
	      (vc-delete-file filename)
	    (progn
	      (delete-file filename)
	      (message "Deleted file %s" filename)
	      (kill-buffer))))))


    (defun my-start-or-switch-to (function buffer-name)
      "Invoke FUNCTION if there is no buffer with BUFFER-NAME.
	Otherwise switch to the buffer named BUFFER-NAME.  Don't clobber
	the current buffer."
      (if (not (get-buffer buffer-name))
	  (progn
	    (split-window-sensibly (selected-window))
	    (other-window 1)
	    (funcall function))
	(switch-to-buffer-other-window buffer-name)))

    (defun my-visit-term-buffer ()
      "Create or visit a terminal buffer."
      (interactive)
      (start-or-switch-to (lambda ()
			    (ansi-term (getenv "SHELL")))
			  "*ansi-term*"))

    (defun my-visit-ielm ()
      "Switch to default `ielm' buffer.
	Start `ielm' if it's not already running."
      (interactive)
      (prelude-start-or-switch-to 'ielm "*ielm*"))


    ;; (define-key emacs-lisp-mode-map (kbd "C-c C-z") 'visit-ielm)

    (defun my-switch-to-previous-buffer ()
      "Switch to previously open buffer.
	Repeated invocations toggle between the two most recently open buffers."
      (interactive)
      (switch-to-buffer (other-buffer (current-buffer) 1)))

    (defun my-move-text-up ()
      "Move up the current line."
      (interactive)
      (transpose-lines 1)
      (forward-line -2)
      (indent-according-to-mode))

    (defun my-move-text-down ()
      "Move down the current line."
      (interactive)
      (forward-line 1)
      (transpose-lines 1)
      (forward-line -1)
      (indent-according-to-mode))

    (defun my-visit-term-buffer ()
      "Create or visit a terminal buffer."
      (interactive)
      (if (not (get-buffer "*ansi-term*"))
	  (progn
	    (split-window-sensibly (selected-window))
	    (other-window 1)
	    (ansi-term (getenv "SHELL")))
	(switch-to-buffer-other-window "*ansi-term*")))

    (defun my-indent-buffer ()
      "Indent the currently visited buffer."
      (interactive)
      (indent-region (point-min) (point-max)))

    (defun my-indent-region-or-buffer ()
      "Indent a region if selected, otherwise the whole buffer."
      (interactive)
      (save-excursion
	(if (region-active-p)
	    (progn
	      (indent-region (region-beginning) (region-end))
	      (message "Indented selected region."))
	  (progn
	    (my-indent-buffer)
	    (message "Indented buffer.")))))

    (defun my-toggle-window-split ()
      (interactive)
      (if (= (count-windows) 2)
	  (let* ((this-win-buffer (window-buffer))
		 (next-win-buffer (window-buffer (next-window)))
		 (this-win-edges (window-edges (selected-window)))
		 (next-win-edges (window-edges (next-window)))
		 (this-win-2nd (not (and (<= (car this-win-edges)
					     (car next-win-edges))
					 (<= (cadr this-win-edges)
					     (cadr next-win-edges)))))
		 (splitter
		  (if (= (car this-win-edges)
			 (car (window-edges (next-window))))
		      'split-window-horizontally
		    'split-window-vertically)))
	    (delete-other-windows)
	    (let ((first-win (selected-window)))
	      (funcall splitter)
	      (if this-win-2nd (other-window 1))
	      (set-window-buffer (selected-window) this-win-buffer)
	      (set-window-buffer (next-window) next-win-buffer)
	      (select-window first-win)
	      (if this-win-2nd (other-window 1))))))



    (defun my-rotate-windows ()
      "Rotate your windows"
      (interactive)
      (cond ((not (> (count-windows)1))
	     (message "You can't rotate a single window!"))
	    (t
	     (setq i 1)
	     (setq numWindows (count-windows))
	     (while  (< i numWindows)
	       (let* (
		      (w1 (elt (window-list) i))
		      (w2 (elt (window-list) (+ (% i numWindows) 1)))

		      (b1 (window-buffer w1))
		      (b2 (window-buffer w2))

		      (s1 (window-start w1))
		      (s2 (window-start w2))
		      )
		 (set-window-buffer w1  b2)
		 (set-window-buffer w2 b1)
		 (set-window-start w1 s2)
		 (set-window-start w2 s1)
		 (setq i (1+ i)))))))




    (defun my-delete-current-buffer-file ()
      "Removes file connected to current buffer and kills buffer."
      (interactive)
      (let ((filename (buffer-file-name))
	    (buffer (current-buffer))
	    (name (buffer-name)))
	(if (not (and filename (file-exists-p filename)))
	    (ido-kill-buffer)
	  (when (yes-or-no-p "Are you sure you want to remove this file? ")
	    (delete-file filename)
	    (kill-buffer buffer)
	    (message "File '%s' successfully removed" filename)))))



    (defun my-rename-current-buffer-file ()
      "Renames current buffer and file it is visiting."
      (interactive)
      (let ((name (buffer-name))
	    (filename (buffer-file-name)))
	(if (not (and filename (file-exists-p filename)))
	    (error "Buffer '%s' is not visiting a file!" name)
	  (let ((new-name (read-file-name "New name: " filename)))
	    (if (get-buffer new-name)
		(error "A buffer named '%s' already exists!" new-name)
	      (rename-file filename new-name 1)
	      (rename-buffer new-name)
	      (set-visited-file-name new-name)
	      (set-buffer-modified-p nil)
	      (message "File '%s' successfully renamed to '%s'"
		       name (file-name-nondirectory new-name)))))))

    ;; --------------------------------------------------
    (provide 'prelude)

    #+END_SRC

    #+RESULTS:
    : prelude

*** XahLee - Functions
    #+BEGIN_SRC emacs-lisp :mkdirp yes
    ;; ==================================================
    (defvar xah-run-current-file-before-hook nil "Hook for `xah-run-current-file'. Before the file is run.")

    (defvar xah-run-current-file-after-hook nil "Hook for `xah-run-current-file'. After the file is run.")

    (defun xah-run-current-file ()
      "Execute the current file.
    For example, if the current buffer is x.py, then it'll call 「python x.py」 in a shell.
    Output is printed to buffer “*xah-run output*”.

    The file can be Emacs Lisp, PHP, Perl, Python, Ruby, JavaScript, TypeScript, golang, Bash, Ocaml, Visual Basic, TeX, Java, Clojure.
    File suffix is used to determine what program to run.

    If the file is modified or not saved, save it automatically before run.

    URL `http://ergoemacs.org/emacs/elisp_run_current_file.html'
    Version 2018-08-30"
      (interactive)
      (let (
	    ($outputb "*xah-run output*")
	    (resize-mini-windows nil)
	    ($suffix-map
	     ;; (‹extension› . ‹shell program name›)
	     `(
	       ("php" . "php")
	       ("pl" . "perl")
	       ("py" . "python")
	       ("py3" . ,(if (string-equal system-type "windows-nt") "c:/Python32/python.exe" "python3"))
	       ("rb" . "ruby")
	       ("go" . "go run")
	       ("hs" . "runhaskell")
	       ("js" . "node")
	       ("mjs" . "node --experimental-modules ")
	       ("ts" . "tsc") ; TypeScript
	       ("tsx" . "tsc")
	       ("sh" . "bash")
	       ("clj" . "java -cp ~/apps/clojure-1.6.0/clojure-1.6.0.jar clojure.main")
	       ("rkt" . "racket")
	       ("ml" . "ocaml")
	       ("vbs" . "cscript")
	       ("tex" . "pdflatex")
	       ("latex" . "pdflatex")
	       ("java" . "javac")
	       ;; ("pov" . "/usr/local/bin/povray +R2 +A0.1 +J1.2 +Am2 +Q9 +H480 +W640")
	       ))
	    $fname
	    $fSuffix
	    $prog-name
	    $cmd-str)
	(when (not (buffer-file-name)) (save-buffer))
	(when (buffer-modified-p) (save-buffer))
	(setq $fname (buffer-file-name))
	(setq $fSuffix (file-name-extension $fname))
	(setq $prog-name (cdr (assoc $fSuffix $suffix-map)))
	(setq $cmd-str (concat $prog-name " \""   $fname "\" &"))
	(run-hooks 'xah-run-current-file-before-hook)
	(cond
	 ((string-equal $fSuffix "el")
	  (load $fname))
	 ((or (string-equal $fSuffix "ts") (string-equal $fSuffix "tsx"))
	  (if (fboundp 'xah-ts-compile-file)
	      (progn
		(xah-ts-compile-file current-prefix-arg))
	    (if $prog-name
		(progn
		  (message "Running")
		  (shell-command $cmd-str $outputb ))
	      (error "No recognized program file suffix for this file."))))
	 ;; ((string-equal $fSuffix "go")
	 ;;  (when (fboundp 'gofmt) (gofmt) )
	 ;;  (shell-command $cmd-str $outputb ))
	 ((string-equal $fSuffix "java")
	  (progn
	    (shell-command (format "java %s" (file-name-sans-extension (file-name-nondirectory $fname))) $outputb )))
	 (t (if $prog-name
		(progn
		  (message "Running")
		  (shell-command $cmd-str $outputb ))
	      (error "No recognized program file suffix for this file."))))
	(run-hooks 'xah-run-current-file-after-hook)))

    ;; ==================================================

    (defun xah-html-url-linkify ()
      "Make the URL at cursor point into a HTML link.
      Work on current non-whitespace char sequence or text selection.
      URL `http://ergoemacs.org/emacs/wrap-url.html'
      Version 2018-03-22"
      (interactive)
      (let ( $p1 $p2 $new-str )
	(if (region-active-p)
	    (progn (setq $p1 (region-beginning) $p2 (region-end)))
	  (save-excursion
	    (skip-chars-backward "^ \n\t")
	    (setq $p1 (point))
	    (skip-chars-forward "^ \n\t" )
	    (setq $p2 (point))))
	(setq $new-str (file-relative-name
			(replace-regexp-in-string "^file:///" "/" (buffer-substring-no-properties $p1 $p2) t t)))
	(delete-region $p1 $p2)
	(insert (concat "<a href=\"" (url-encode-url $new-str) "\">" $new-str "</a>" ))))

    ;; ==================================================

    (defun xah-dired-sort ()
      "Sort dired dir listing in different ways.
    Prompt for a choice.
    URL `http://ergoemacs.org/emacs/dired_sort.html'
    Version 2015-07-30"
      (interactive)
      (let ($sort-by $arg)
	(setq $sort-by (ido-completing-read "Sort by:" '( "date" "size" "name" "dir")))
	(cond
	 ((equal $sort-by "name") (setq $arg "-Al --si --time-style long-iso "))
	 ((equal $sort-by "date") (setq $arg "-Al --si --time-style long-iso -t"))
	 ((equal $sort-by "size") (setq $arg "-Al --si --time-style long-iso -S"))
	 ((equal $sort-by "dir") (setq $arg "-Al --si --time-style long-iso --group-directories-first"))
	 (t (error "logic error 09535" )))
	(dired-sort-other $arg )))

    ;; (define-key dired-mode-map (kbd "s") 'xah-dired-sort)

    ;; ==================================================

    (defun xah-delete-current-file-make-backup (&optional @no-backup-p)
      "Delete current file, makes a backup~, closes the buffer.
     Backup filename is “‹name›~‹date time stamp›~”. Existing file of the same name is overwritten. If the file is not associated with buffer, the backup file name starts with “xx_”.
    When `universal-argument' is called first, don't create backup.
    URL `http://ergoemacs.org/emacs/elisp_delete-current-file.html'
    Version 2016-07-20"
      (interactive "P")
      (let* (
	     ($fname (buffer-file-name))
	     ($buffer-is-file-p $fname)
	     ($backup-suffix (concat "~" (format-time-string "%Y%m%dT%H%M%S") "~")))
	(if $buffer-is-file-p
	    (progn
	      (save-buffer $fname)
	      (when (not @no-backup-p)
		(copy-file
		 $fname
		 (concat $fname $backup-suffix)
		 t))
	      (delete-file $fname)
	      (message "Deleted. Backup created at 「%s」." (concat $fname $backup-suffix)))
	  (when (not @no-backup-p)
	    (widen)
	    (write-region (point-min) (point-max) (concat "xx" $backup-suffix))
	    (message "Backup created at 「%s」." (concat "xx" $backup-suffix))))
	(kill-buffer (current-buffer))))

    ;; ==================================================

    (defun xah-dired-rename-space-to-underscore ()
      "In dired, rename current or marked files by replacing space to underscore _.
    If not in `dired', do nothing.
    URL `http://ergoemacs.org/emacs/elisp_dired_rename_space_to_underscore.html'
    Version 2017-01-02"
      (interactive)
      (require 'dired-aux)
      (if (equal major-mode 'dired-mode)
	  (progn
	    (mapc (lambda (x)
		    (when (string-match " " x )
		      (dired-rename-file x (replace-regexp-in-string " " "_" x) nil)))
		  (dired-get-marked-files ))
	    (revert-buffer))
	(user-error "Not in dired.")))

    ;; ==================================================

    (defun xah-open-in-gimp ()
      "Open the current file or `dired' marked files in gimp.
    Works in linux and Mac. Not tested on Microsoft Windows.

    URL `http://ergoemacs.org/emacs/emacs_dired_convert_images.html'
    Version 2015-07-30"
      (interactive)
      (let* (
	     ($file-list
	      (if (string-equal major-mode "dired-mode")
		  (dired-get-marked-files)
		(list (buffer-file-name))))
	     ($do-it-p (if (<= (length $file-list) 5)
			   t
			 (y-or-n-p "Open more than 5 files? "))))
	(when $do-it-p
	  (cond
	   ((string-equal system-type "windows-nt")
	    (mapc
	     (lambda ($fpath)
	       (w32-shell-execute "gimp" (replace-regexp-in-string "/" "\\" $fpath t t))) $file-list))
	   ((string-equal system-type "darwin")
	    (mapc
	     (lambda ($fpath)
	       (shell-command
		(format "open -a /Applications/GIMP.app \"%s\"" $fpath))) $file-list))
	   ((string-equal system-type "gnu/linux")
	    (mapc
	     (lambda ($fpath) (let ((process-connection-type nil)) (start-process "" nil "gimp" $fpath))) $file-list))))))


    ;; ==================================================

    (defun xah-dired-to-zip ()
      "Zip the current file in `dired'.
    If multiple files are marked, only zip the first one.
    Require unix zip command line tool.

    URL `http://ergoemacs.org/emacs/emacs_dired_convert_images.html'
    Version 2015-07-30"
      (interactive)
      (require 'dired)
      (let ( ($fName (elt (dired-get-marked-files) 0)))
	(shell-command
	 (format
	  "zip -r '%s.zip' '%s'"
	  (file-relative-name $fName)
	  (file-relative-name $fName)))))

    ;; ==================================================

    (defun xah-dired-show-metadata (@file-list)
      "Display metatata of buffer image file or marked files in dired.
     (typically image files)
    URL `http://xahlee.info/img/metadata_in_image_files.html'
    Requires exiftool shell command.
    URL `http://ergoemacs.org/emacs/emacs_dired_convert_images.html'
    Version 2016-07-19"
      (interactive
       (list
	(cond
	 ((string-equal major-mode "dired-mode") (dired-get-marked-files))
	 ((string-equal major-mode "image-mode") (list (buffer-file-name)))
	 (t (list (read-from-minibuffer "file name:"))))))
      (mapc
       (lambda ($f)
	 (shell-command
	  (format "exiftool '%s'" (file-relative-name $f))
	  ;; relative paths used to get around Windows/Cygwin path remapping problem
	  ))
       @file-list ))

    ;; ==================================================

    (defun xah-dired-remove-all-metadata (@file-list)
      "Remove all metatata of buffer image file or marked files in dired.
     (typically image files)
    URL `http://xahlee.info/img/metadata_in_image_files.html'
    Requires exiftool shell command.

    URL `http://ergoemacs.org/emacs/emacs_dired_convert_images.html'
    Version 2016-07-19"
      (interactive
       (list
	(cond
	 ((string-equal major-mode "dired-mode") (dired-get-marked-files))
	 ((string-equal major-mode "image-mode") (list (buffer-file-name)))
	 (t (list (read-from-minibuffer "file name:"))))))
      (if (y-or-n-p "Sure to remove all metadata?")
	  (mapc
	   (lambda ($f)
	     (let ($cmdStr)
	       (setq $cmdStr
		     (format "exiftool -all= -overwrite_original '%s'" (file-relative-name $f))) ; relative paths used to get around Windows/Cygwin path remapping problem
	       (shell-command $cmdStr)))
	   @file-list )
	nil
	))

    ;; ==================================================

    (defun xah-dired-2jpg (@file-list)
      "Create a JPG version of images of marked files in dired.
    Requires ImageMagick shell command.
    URL `http://ergoemacs.org/emacs/emacs_dired_convert_images.html'
    Version 2016-07-19"
      (interactive
       (let (
	     ($fileList
	      (cond
	       ((string-equal major-mode "dired-mode") (dired-get-marked-files))
	       ((string-equal major-mode "image-mode") (list (buffer-file-name)))
	       (t (list (read-from-minibuffer "file name:"))))))
	 (list $fileList)))
      (xah-process-image @file-list "-quality 90%" "-2" ".jpg" ))

    ;; ==================================================

    (defun xah-dired-2png (@file-list)
      "Create a png version of images of marked files in dired.
    Requires ImageMagick shell command.
    URL `http://ergoemacs.org/emacs/emacs_dired_convert_images.html'
    Version 2016-07-19"
      (interactive
       (let (
	     ($fileList
	      (cond
	       ((string-equal major-mode "dired-mode") (dired-get-marked-files))
	       ((string-equal major-mode "image-mode") (list (buffer-file-name)))
	       (t (list (read-from-minibuffer "file name:"))))))
	 (list $fileList)))
      (xah-process-image @file-list "" "-2" ".png" ))

    ;; ==================================================

    (defun xah-image-autocrop ()
      "Create a new auto-cropped version of image.
    If current buffer is jpg or png file, crop it.
    If current buffer is dired, do the file under cursor or marked files.

    The created file has “_crop.” in the name, in the same dir.
    It's in png or jpg, same as the original.

    Requires ImageMagick shell command “convert”

    If `universal-argument' is called first, output is PNG format. Else, JPG.
    URL `http://ergoemacs.org/emacs/emacs_dired_convert_images.html'
    Version 2017-10-08"
      (interactive)
      (let (
	    ($bfName (buffer-file-name))
	    $newName
	    $cmdStr
	    )
	(if (string-equal major-mode "dired-mode")
	    (progn
	      (let (($flist (dired-get-marked-files)))
		(mapc
		 (lambda ($f)
		   (setq $newName (concat (file-name-sans-extension $f) "_crop." (file-name-extension $f)))
		   (setq $cmdStr (format "convert -trim '%s' '%s'" (file-relative-name $f) (file-relative-name $newName)))
		   (shell-command $cmdStr))
		 $flist ))
	      (revert-buffer))
	  (progn
	    (if $bfName
		(let (($ext (file-name-extension $bfName)))
		  (if (and (not (string-equal $ext "jpg"))
			   (not (string-equal $ext "png")))
		      (user-error "not png or jpg at %s" $bfName)
		    (progn
		      (setq $cmdStr
			    (format
			     "convert -trim '%s' '%s'"
			     $bfName
			     (concat (file-name-sans-extension $bfName) "_crop." $ext)))
		      (shell-command  $cmdStr )
		      (message  $cmdStr))))
	      (user-error "not img file or dired at %s" $bfName))))))

    ;; ==================================================

    (defun xah-new-empty-buffer ()
      "Create a new empty buffer.
    New buffer will be named “untitled” or “untitled<2>”, “untitled<3>”, etc.

    It returns the buffer (for elisp programing).

    URL `http://ergoemacs.org/emacs/emacs_new_empty_buffer.html'
    Version 2017-11-01"
      (interactive)
      (let (($buf (generate-new-buffer "untitled")))
	(switch-to-buffer $buf)
	(funcall initial-major-mode)
	(setq buffer-offer-save t)
	$buf))

    ;; ==================================================

    (defun xah-new-empty-buffer ()
      "Create a new empty buffer.
    New buffer will be named “untitled” or “untitled<2>”, “untitled<3>”, etc.

    It returns the buffer (for elisp programing).

    URL `http://ergoemacs.org/emacs/emacs_new_empty_buffer.html'
    Version 2017-11-01"
      (interactive)
      (let (($buf (generate-new-buffer "untitled")))
	(switch-to-buffer $buf)
	(funcall initial-major-mode)
	(setq buffer-offer-save t)
	$buf))

    ;; ==================================================

    (defun xah-next-emacs-buffer ()
      "Switch to the next emacs buffer.
    “emacs buffer” here is buffer whose name starts with *.
    URL `http://ergoemacs.org/emacs/elisp_next_prev_user_buffer.html'
    Version 2016-06-19"
      (interactive)
      (next-buffer)
      (let ((i 0))
	(while (and (not (string-equal "*" (substring (buffer-name) 0 1))) (< i 20))
	  (setq i (1+ i)) (next-buffer))))

    (defun xah-previous-emacs-buffer ()
      "Switch to the previous emacs buffer.
    “emacs buffer” here is buffer whose name starts with *.
    URL `http://ergoemacs.org/emacs/elisp_next_prev_user_buffer.html'
    Version 2016-06-19"
      (interactive)
      (previous-buffer)
      (let ((i 0))
	(while (and (not (string-equal "*" (substring (buffer-name) 0 1))) (< i 20))
	  (setq i (1+ i)) (previous-buffer))))

    ;; ==================================================

    (defvar xah-recently-closed-buffers nil "alist of recently closed buffers. Each element is (buffer name, file path). The max number to track is controlled by the variable `xah-recently-closed-buffers-max'.")

    (defvar xah-recently-closed-buffers-max 40 "The maximum length for `xah-recently-closed-buffers'.")

    (defun xah-close-current-buffer ()
      "Close the current buffer.

    Similar to `kill-buffer', with the following addition:

    • Prompt user to save if the buffer has been modified even if the buffer is not associated with a file.
    • If the buffer is editing a source file in an org-mode file, prompt the user to save before closing.
    • If the buffer is a file, add the path to the list `xah-recently-closed-buffers'.
    • If it is the minibuffer, exit the minibuffer

    URL `http://ergoemacs.org/emacs/elisp_close_buffer_open_last_closed.html'
    Version 2016-06-19"
      (interactive)
      (let ($emacs-buff-p
	    ($org-p (string-match "^*Org Src" (buffer-name))))

	(setq $emacs-buff-p (if (string-match "^*" (buffer-name)) t nil))

	(if (string= major-mode "minibuffer-inactive-mode")
	    (minibuffer-keyboard-quit) ; if the buffer is minibuffer
	  (progn
	    ;; offer to save buffers that are non-empty and modified, even for non-file visiting buffer. (because kill-buffer does not offer to save buffers that are not associated with files)
	    (when (and (buffer-modified-p)
		       (not $emacs-buff-p)
		       (not (string-equal major-mode "dired-mode"))
		       (if (equal (buffer-file-name) nil)
			   (if (string-equal "" (save-restriction (widen) (buffer-string))) nil t)
			 t))
	      (if (y-or-n-p (format "Buffer %s modified; Do you want to save? " (buffer-name)))
		  (save-buffer)
		(set-buffer-modified-p nil)))
	    (when (and (buffer-modified-p)
		       $org-p)
	      (if (y-or-n-p (format "Buffer %s modified; Do you want to save? " (buffer-name)))
		  (org-edit-src-save)
		(set-buffer-modified-p nil)))

	    ;; save to a list of closed buffer
	    (when (buffer-file-name)
	      (setq xah-recently-closed-buffers
		    (cons (cons (buffer-name) (buffer-file-name)) xah-recently-closed-buffers))
	      (when (> (length xah-recently-closed-buffers) xah-recently-closed-buffers-max)
		(setq xah-recently-closed-buffers (butlast xah-recently-closed-buffers 1))))

	    ;; close
	    (kill-buffer (current-buffer))))))

    (defun xah-open-last-closed ()
      "Open the last closed file.
    URL `http://ergoemacs.org/emacs/elisp_close_buffer_open_last_closed.html'
    Version 2016-06-19"
      (interactive)
      (if (> (length xah-recently-closed-buffers) 0)
	  (find-file (cdr (pop xah-recently-closed-buffers)))
	(progn (message "No recently close buffer in this session."))))

    (defun xah-open-recently-closed ()
      "Open recently closed file.
    Prompt for a choice.
    URL `http://ergoemacs.org/emacs/elisp_close_buffer_open_last_closed.html'
    Version 2016-06-19"
      (interactive)
      (find-file (ido-completing-read "open:" (mapcar (lambda (f) (cdr f)) xah-recently-closed-buffers))))

    (defun xah-list-recently-closed ()
      "List recently closed file.
    URL `http://ergoemacs.org/emacs/elisp_close_buffer_open_last_closed.html'
    Version 2016-06-19"
      (interactive)
      (let (($buf (generate-new-buffer "*recently closed*")))
	(switch-to-buffer $buf)
	(mapc (lambda ($f) (insert (cdr $f) "\n"))
	      xah-recently-closed-buffers)))

    ;; ==================================================

    (defun xah-open-file-at-cursor ()
      "Open the file path under cursor.
    If there is text selection, uses the text selection for path.
    If the path starts with “http://”, open the URL in browser.
    Input path can be {relative, full path, URL}.
    Path may have a trailing “:‹n›” that indicates line number. If so, jump to that line number.
    If path does not have a file extension, automatically try with “.el” for elisp files.
    This command is similar to `find-file-at-point' but without prompting for confirmation.

    URL `http://ergoemacs.org/emacs/emacs_open_file_path_fast.html'
    Version 2018-02-21"
      (interactive)
      (let* (($inputStr (if (use-region-p)
			    (buffer-substring-no-properties (region-beginning) (region-end))
			  (let ($p0 $p1 $p2
				    ;; chars that are likely to be delimiters of file path or url, e.g. space, tabs, brakets. The colon is a problem. cuz it's in url, but not in file name. Don't want to use just space as delimiter because path or url are often in brackets or quotes as in markdown or html
				    ($pathStops "^  \t\n\"`'‘’“”|()[]{}「」<>〔〕〈〉《》【】〖〗«»‹›❮❯❬❭·。\\"))
			    (setq $p0 (point))
			    (skip-chars-backward $pathStops)
			    (setq $p1 (point))
			    (goto-char $p0)
			    (skip-chars-forward $pathStops)
			    (setq $p2 (point))
			    (goto-char $p0)
			    (buffer-substring-no-properties $p1 $p2))))
	     ($path
	      (replace-regexp-in-string
	       "^file:///" "/"
	       (replace-regexp-in-string
		":\\'" "" $inputStr))))
	(if (string-match-p "\\`https?://" $path)
	    (if (fboundp 'xahsite-url-to-filepath)
		(let (($x (xahsite-url-to-filepath $path)))
		  (if (string-match "^http" $x )
		      (browse-url $x)
		    (find-file $x)))
	      (progn (browse-url $path)))
	  (if ; not starting “http://”
	      (string-match "^\\`\\(.+?\\):\\([0-9]+\\)\\'" $path)
	      (let (
		    ($fpath (match-string 1 $path))
		    ($line-num (string-to-number (match-string 2 $path))))
		(if (file-exists-p $fpath)
		    (progn
		      (find-file $fpath)
		      (goto-char 1)
		      (forward-line (1- $line-num)))
		  (when (y-or-n-p (format "file no exist: 「%s」. Create?" $fpath))
		    (find-file $fpath))))
	    (if (file-exists-p $path)
		(progn ; open f.ts instead of f.js
		  (let (($ext (file-name-extension $path))
			($fnamecore (file-name-sans-extension $path)))
		    (if (and (string-equal $ext "js")
			     (file-exists-p (concat $fnamecore ".ts")))
			(find-file (concat $fnamecore ".ts"))
		      (find-file $path))))
	      (if (file-exists-p (concat $path ".el"))
		  (find-file (concat $path ".el"))
		(when (y-or-n-p (format "file no exist: 「%s」. Create?" $path))
		  (find-file $path ))))))))

    ;; ==================================================

    (defun xah-search-current-word ()
      "Call `isearch' on current word or text selection.
    “word” here is A to Z, a to z, and hyphen 「-」 and underline 「_」, independent of syntax table.
    URL `http://ergoemacs.org/emacs/modernization_isearch.html'
    Version 2015-04-09"
      (interactive)
      (let ( $p1 $p2 )
	(if (use-region-p)
	    (progn
	      (setq $p1 (region-beginning))
	      (setq $p2 (region-end)))
	  (save-excursion
	    (skip-chars-backward "-_A-Za-z0-9")
	    (setq $p1 (point))
	    (right-char)
	    (skip-chars-forward "-_A-Za-z0-9")
	    (setq $p2 (point))))
	(setq mark-active nil)
	(when (< $p1 (point))
	  (goto-char $p1))
	(isearch-mode t)
	(isearch-yank-string (buffer-substring-no-properties $p1 $p2))))

    ;; ==================================================

    (defun xah-select-text-in-quote ()
      "Select text between the nearest left and right delimiters.
    Delimiters here includes the following chars: \"<>(){}[]“”‘’‹›«»「」『』【】〖〗《》〈〉〔〕（）
    This command select between any bracket chars, not the inner text of a bracket. For example, if text is

     (a(b)c▮)

     the selected char is “c”, not “a(b)c”.

    URL `http://ergoemacs.org/emacs/modernization_mark-word.html'
    Version 2016-12-18"
      (interactive)
      (let (
	    ($skipChars
	     (if (boundp 'xah-brackets)
		 (concat "^\"" xah-brackets)
	       "^\"<>(){}[]“”‘’‹›«»「」『』【】〖〗《》〈〉〔〕（）"))
	    $pos
	    )
	(skip-chars-backward $skipChars)
	(setq $pos (point))
	(skip-chars-forward $skipChars)
	(set-mark $pos)))

    (defun xah-select-line ()
      "Select current line. If region is active, extend selection downward by line.
    URL `http://ergoemacs.org/emacs/modernization_mark-word.html'
    Version 2017-11-01"
      (interactive)
      (if (region-active-p)
	  (progn
	    (forward-line 1)
	    (end-of-line))
	(progn
	  (end-of-line)
	  (set-mark (line-beginning-position)))))

    (defun xah-select-current-line ()
      "Select current line.
    URL `http://ergoemacs.org/emacs/modernization_mark-word.html'
    Version 2016-07-22"
      (interactive)
      (end-of-line)
      (set-mark (line-beginning-position)))

    (defun xah-select-block ()
      "Select the current/next block of text between blank lines.
    If region is active, extend selection downward by block.

    URL `http://ergoemacs.org/emacs/modernization_mark-word.html'
    Version 2017-11-01"
      (interactive)
      (if (region-active-p)
	  (re-search-forward "\n[ \t]*\n" nil "move")
	(progn
	  (skip-chars-forward " \n\t")
	  (when (re-search-backward "\n[ \t]*\n" nil "move")
	    (re-search-forward "\n[ \t]*\n"))
	  (push-mark (point) t t)
	  (re-search-forward "\n[ \t]*\n" nil "move"))))




    (defun xah-select-current-block ()
      "Select the current block of text between blank lines.

    URL `http://ergoemacs.org/emacs/modernization_mark-word.html'
    Version 2017-07-02"
      (interactive)
      (progn
	(skip-chars-forward " \n\t")
	(when (re-search-backward "\n[ \t]*\n" nil "move")
	  (re-search-forward "\n[ \t]*\n"))
	(push-mark (point) t t)
	(re-search-forward "\n[ \t]*\n" nil "move")))

    (defun xah-extend-selection ()
      "Select the current word, bracket/quote expression, or expand selection.
    Subsequent calls expands the selection.

    when no selection,
    • if cursor is on a bracket, select whole bracketed thing including bracket
    • if cursor is on a quote, select whole quoted thing including quoted
    • if cursor is on the beginning of line, select the line.
    • else, select current word.

    when there's a selection, the selection extension behavior is still experimental.
    Roughly:
    • if 1 line is selected, extend to next line.
    • if multiple lines is selected, extend to next line.
    • if a bracketed text is selected, extend to include the outer bracket. If there's no outer, select current line.

     to line, or bracket/quoted text,
    or text block, whichever is the smallest.

    URL `http://ergoemacs.org/emacs/modernization_mark-word.html'
    Version 2017-01-15"
      (interactive)
      (if (region-active-p)
	  (progn
	    (let (($rb (region-beginning)) ($re (region-end)))
	      (goto-char $rb)
	      (cond
	       ((looking-at "\\s(")
		(if (eq (nth 0 (syntax-ppss)) 0)
		    (progn
		      (message "left bracket, depth 0.")
		      (end-of-line) ; select current line
		      (set-mark (line-beginning-position)))
		  (progn
		    (message "left bracket, depth not 0")
		    (up-list -1 t t)
		    (mark-sexp))))
	       ((eq $rb (line-beginning-position))
		(progn
		  (goto-char $rb)
		  (let (($firstLineEndPos (line-end-position)))
		    (cond
		     ((eq $re $firstLineEndPos)
		      (progn
			(message "exactly 1 line. extend to next whole line." )
			(forward-line 1)
			(end-of-line)))
		     ((< $re $firstLineEndPos)
		      (progn
			(message "less than 1 line. complete the line." )
			(end-of-line)))
		     ((> $re $firstLineEndPos)
		      (progn
			(message "beginning of line, but end is greater than 1st end of line" )
			(goto-char $re)
			(if (eq (point) (line-end-position))
			    (progn
			      (message "exactly multiple lines" )
			      (forward-line 1)
			      (end-of-line))
			  (progn
			    (message "multiple lines but end is not eol. make it so" )
			    (goto-char $re)
			    (end-of-line)))))
		     (t (error "logic error 42946" ))))))
	       ((and (> (point) (line-beginning-position)) (<= (point) (line-end-position)))
		(progn
		  (message "less than 1 line" )
		  (end-of-line) ; select current line
		  (set-mark (line-beginning-position))))
	       (t (message "last resort" ) nil))))
	(progn
	  (cond
	   ((looking-at "\\s(")
	    (message "left bracket")
	    (mark-sexp)) ; left bracket
	   ((looking-at "\\s)")
	    (message "right bracket")
	    (backward-up-list) (mark-sexp))
	   ((looking-at "\\s\"")
	    (message "string quote")
	    (mark-sexp)) ; string quote
	   ((and (eq (point) (line-beginning-position)) (not (looking-at "\n")))
	    (message "beginning of line and not empty")
	    (end-of-line)
	    (set-mark (line-beginning-position)))
	   ((or (looking-back "\\s_" 1) (looking-back "\\sw" 1))
	    (message "left is word or symbol")
	    (skip-syntax-backward "_w" )
	    ;; (re-search-backward "^\\(\\sw\\|\\s_\\)" nil t)
	    (mark-sexp))
	   ((and (looking-at "\\s ") (looking-back "\\s " 1))
	    (message "left and right both space" )
	    (skip-chars-backward "\\s " ) (set-mark (point))
	    (skip-chars-forward "\\s "))
	   ((and (looking-at "\n") (looking-back "\n" 1))
	    (message "left and right both newline")
	    (skip-chars-forward "\n")
	    (set-mark (point))
	    (re-search-forward "\n[ \t]*\n")) ; between blank lines, select next text block
	   (t (message "just mark sexp" )
	      (mark-sexp))
	   ;;
	   ))))

    ;; ==================================================

    (defun xah-forward-block (&optional n)
      "Move cursor beginning of next text block.
    A text block is separated by blank lines.
    This command similar to `forward-paragraph', but this command's behavior is the same regardless of syntax table.
    URL `http://ergoemacs.org/emacs/emacs_move_by_paragraph.html'
    Version 2016-06-15"
      (interactive "p")
      (let ((n (if (null n) 1 n)))
	(re-search-forward "\n[\t\n ]*\n+" nil "NOERROR" n)))

    (defun xah-backward-block (&optional n)
      "Move cursor to previous text block.
    See: `xah-forward-block'
    URL `http://ergoemacs.org/emacs/emacs_move_by_paragraph.html'
    Version 2016-06-15"
      (interactive "p")
      (let ((n (if (null n) 1 n))
	    ($i 1))
	(while (<= $i n)
	  (if (re-search-backward "\n[\t\n ]*\n+" nil "NOERROR")
	      (progn (skip-chars-backward "\n\t "))
	    (progn (goto-char (point-min))
		   (setq $i n)))
	  (setq $i (1+ $i)))))

    (defun xah-open-in-external-app ()
      "Open the current file or dired marked files in external app.
    The app is chosen from your OS's preference.
    URL `http://ergoemacs.org/emacs/emacs_dired_open_file_in_ext_apps.html'
    Version 2016-10-15"
      (interactive)
      (let* (
	     ($file-list
	      (if (string-equal major-mode "dired-mode")
		  (dired-get-marked-files)
		(list (buffer-file-name))))
	     ($do-it-p (if (<= (length $file-list) 5)
			   t
			 (y-or-n-p "Open more than 5 files? "))))
	(when $do-it-p
	  (cond
	   ((string-equal system-type "windows-nt")
	    (mapc
	     (lambda ($fpath)
	       (w32-shell-execute "open" (replace-regexp-in-string "/" "\\" $fpath t t))) $file-list))
	   ((string-equal system-type "darwin")
	    (mapc
	     (lambda ($fpath)
	       (shell-command
		(concat "open " (shell-quote-argument $fpath))))  $file-list))
	   ((string-equal system-type "gnu/linux")
	    (mapc
	     (lambda ($fpath) (let ((process-connection-type nil))
				(start-process "" nil "xdg-open" $fpath))) $file-list))))))

    ;; ==================================================
    (defun xah-space-to-newline ()
      "Replace space sequence to a newline char.
    Works on current block or selection.

    URL `http://ergoemacs.org/emacs/emacs_space_to_newline.html'
    Version 2017-08-19"
      (interactive)
      (let* ( $p1 $p2 )
	(if (use-region-p)
	    (progn
	      (setq $p1 (region-beginning))
	      (setq $p2 (region-end)))
	  (save-excursion
	    (if (re-search-backward "\n[ \t]*\n" nil "move")
		(progn (re-search-forward "\n[ \t]*\n")
		       (setq $p1 (point)))
	      (setq $p1 (point)))
	    (re-search-forward "\n[ \t]*\n" nil "move")
	    (skip-chars-backward " \t\n" )
	    (setq $p2 (point))))
	(save-excursion
	  (save-restriction
	    (narrow-to-region $p1 $p2)
	    (goto-char (point-min))
	    (while (re-search-forward " +" nil t)
	      (replace-match "\n" ))))))



    ;; --------------------------------------------------
    (provide 'xahlee)

    #+END_SRC
*** C bult-in
    #+BEGIN_SRC emacs-lisp :results code

    ;; =============== CC-MODE
    (with-eval-after-load "cc-mode"
      ;; ==================================================
      ;; SEMANTIC
      ;; ==================================================

      (progn
	(require 'semantic)
	(require 'semantic/ia)
	(require 'semantic/bovine/gcc)
	(semantic-mode 1)
	;; (semantic-enable)
	(setq dtrt-indent-verbosity 0)           ;; turn off dtrt-indent messages
	(setq-mode-local c-mode semanticdb-find-default-throttle
			 '(project unloaded system recursive))
	(add-to-list 'semantic-default-submodes 'global-semantic-stickyfunc-mode)
	(global-semanticdb-minor-mode 1)
	(global-semantic-idle-scheduler-mode 1)
	(global-semantic-idle-summary-mode 1)

	;; ;; if you want to enable support for gnu global
	;; (when (cedet-gnu-global-version-check t)
	;;   (semanticdb-enable-gnu-global-databases 'c-mode)
	;;   (semanticdb-enable-gnu-global-databases 'c++-mode))

	;; enable ctags for some languages:
	;;  Unix Shell, Perl, Pascal, Tcl, Fortran, Asm
	;; (when (cedet-ectag-version-check t)
	;;   (semantic-load-enable-primary-exuberent-ctags-support))

	(defun my-cedet-hook ()
	  (local-set-key [(control return)] 'semantic-ia-complete-symbol)
	  (local-set-key "\C-c?" 'semantic-ia-complete-symbol-menu)
	  (local-set-key "\C-c>" 'semantic-complete-analyze-inline)
	  (local-set-key "\C-cp" 'semantic-analyze-proto-impl-toggle))
	;; (add-hook 'c-mode-common-hook 'my-cedet-hook)

	(defun my-semantic-hook ()
	  (imenu-add-to-menubar "TAGS"))
	(add-hook 'semantic-init-hooks 'my-semantic-hook))

      ;; ==================================================
      ;; EDE
      ;; ==================================================

      (progn
	(global-ede-mode t))

      ;; ==================================================
      ;; GDB
      ;; ==================================================

      (setq gdb-many-windows t        ; use gdb-many-windows by default
	    gdb-show-main t)          ; Non-nil means display source file containing the main routine at startup

      ;; ==================================================
      ;; C-MODE
      ;; ==================================================

      (defun my/c-mode-hook ()
	"add to cc-mode"
	;; C-IDE based on https://github.com/tuhdo/emacs-c-ide-demo
	;; Available C style:
	;; "gnu": The default style for GNU projects
	;; "k&r": What Kernighan and Ritchie, the authors of C used in their book
	;; "bsd": What BSD developers use, aka "Allman style" after Eric Allman.
	;; "whitesmith": Popularized by the examples that came with Whitesmiths C, an early commercial C compiler.
	;; "stroustrup": What Stroustrup, the author of C++ used in his book
	;; "ellemtel": Popular C++ coding standards as defined by "Programming in C++, Rules and Recommendations," Erik Nyquist and Mats Henricson, Ellemtel
	;; "linux": What the Linux developers use for kernel development
	;; "python": What Python developers use for extension modules
	;; "java": The default style for java-mode (see below)
	;; "user": When you want to define your own style
	;; (setq c-default-style "gnu")
	;; (setq gdb-many-windows t ;; use gdb-many-windows by default
	;;		gdb-show-main t
	;;		c-basic-offset 4
	;;		tab-width 4
	;;		indent-tabs-mode t)
	(progn
	  (setq c-default-style "gnu")        ;; flycheck-gcc-language-standard "gnu99"
	  (flymake-mode)
	  ;; Folding
	  (add-hook 'c-mode-common-hook 'hs-minor-mode)))
      (add-hook 'c-mode-common-hook'my/c-mode-hook)

      ;; Compilation from Emacs
      (defun prelude-colorize-compilation-buffer ()
	"Colorize a compilation mode buffer."
	(interactive)
	;; we don't want to mess with child modes such as grep-mode, ack, ag, etc
	(when (eq amjor-mode 'compilation-mode)
	  (let ((inhibit-read-only t))
	    (ansi-color-apply-on-region (point-min) (point-max)))))

      ;; setup compilation-mode used by `compile' command
      (require 'compile)
      (setq compilation-ask-about-save nil          ; Just save before compiling
	    compilation-always-kill t               ; Just kill old compile processes before starting the new one
	    compilation-scroll-output 'first-error) ; Automatically scroll to first


      ;; GROUP: Programming -> Tools -> Makefile
      ;; takenn from prelude-c.el:48: https://github.com/bbatsov/prelude/blob/master/modules/prelude-c.el
      (defun prelude-makefile-mode-defaults ()
	(whitespace-toggle-options '(tabs))
	(setq indent-tabs-mode t))

      (setq prelude-makefile-mode-hook 'prelude-makefile-mode-defaults)

      ;;(add-hook 'makefile-mode-hook (lambda ()
	;;                              (run-hooks 'prelude-makefile-mode-hook)))) ;; End of eval after load

    #+END_SRC

    #+RESULTS:
** Nixos
*** Config
    #+begin_src nix
    #efiInstallAsRemovable = true; # in case canTouchEfiVariables doesn't work for your system

    #boot.loader.systemd-boot.enable = true;

	  # services.xserver.xkbOptions = "eurosign:e";

	  # Some programs need SUID wrappers, can be configured further or are
	  # started in user sessions.
	  # programs.mtr.enable = true;
	  # programs.gnupg.agent = {
	  #   enable = true;
	  #   enableSSHSupport = true;
	  #   pinentryFlavor = "gnome3";
	  # };

	  # * Firewall
	  # networking.firewall.allowedTCPPorts = [ ... ];
	  # networking.firewall.allowedUDPPorts = [ ... ];
	  # Or disable the firewall altogether.
	  # networking.firewall.enable = false;

	  # Enable CUPS to print documents.
	  # services.printing.enable = true;

    # Configure network proxy if necessary
    # networking.proxy.default = "http://user:password@proxy:port/";
    # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

    # Select internationalisation properties.
    # i18n.defaultLocale = "en_US.UTF-8";
    # console = {
    #   font = "Lat2-Terminus16";
    #   keyMap = "us";
    # };

    #+end_src
** bin
   #+begin_src shell-script
   #!/usr/bin/env bash

   STEP=5

   [[ -x $(command -v brightnessctl) ]] && brightnessctl set "$STEP"%-

   #!/usr/bin/env bash

   STEP=5
   brightnessctl set "$STEP"%+


   #!/usr/bin/env bash

   [[ -x $(command -v systemctl) ]] && systemctl poweroff

   #!/usr/bin/env bash

   [[ -x $(command -v slock) ]] && slock
   [[ -x $(command -v i3lock) ]] && i3lock
   [[ -x $(command -v xlock) ]] && xlock


   #!/usr/bin/env bash

   [[ -x $(command -v systemctl) ]] && systemctl hibernate


   #!/usr/bin/env bash

   STATUS=$(nmcli networking)

   [[ ${STATUS} == "disabled" ]] && nmcli networking on &
   [[ ${STATUS} == "enabled" ]] && nmcli networking off &


   #!/usr/bin/env bash

   [[ -x $(command -v systemctl) ]] && systemctl reboot


   #!/usr/bin/env bash

   [[ -x $(command -v loginctl) ]] && loginctl terminate-user ${USER}


   #!/usr/bin/env bash

   [[ -x $(command -v systemctl) ]] && systemctl suspend

   #!/usr/bin/env bash

   # Descricao: Tira momento da tela
   now=$(date +"%Y-%m-%d-%T")
   pic="$HOME/Fotografis/$now-tirtela.png"

   [[ $(command -v scrot) ]] && scrot $pic
   [[ $(command -v maim) ]] && maim $pic


   #!/usr/bin/env bash

   # Descricao: Tira momento da tela
   now=$(date +"%Y-%m-%d-%T")
   pic="$HOME/Fotografis/$now-tirtela.png"

   [[ $(command -v scrot) ]] && scrot $pic
   [[ $(command -v maim) ]] && maim $pic

   #!/usr/bin/env bash

   [[ -x $(command -v mpc) ]] && mpc toggle


   #!/usr/bin/env bash

   [[ -x $(command -v mpc) ]] && mpc next


   #!/usr/bin/env bash

   [[ -x $(command -v pactl) ]] && pactl set-sink-mute 0 toggle


   #!/usr/bin/env bash

   STEP=5
   [[ -x $(command -v pactl) ]] && pactl set-sink-volume 0 -"$STEP"%


   #!/usr/bin/env bash

   STEP=5
   [[ -x $(command -v pactl) ]] && pactl set-sink-volume 0 +"$STEP"%


   #+end_src
** autostart
   #+begin_src shell-script

   #+end_src
** .xsessionrc
   #+begin_src shell-script
   luarocks()
   {
       local dir="$HOME/.asdf/installs/lua/5.*/luarocks/bin"
       export PATH="$dir"${PATH:+:}$PATH
   }

   lisp()
   {
       export SBCL_HOME="$HOME_LOCAL_LIB/sbcl"
   }

   golang()
   {
       export GOPATH="$HOME/.local/"
       export GO111MODULE=on

       export PATH="$GOPATH"${PATH:+:}${PATH}
   }

   ruby()
   {
       local gem_bin="$HOME/.gem/ruby/2.7.0/bin"
       export PATH="$gem_bin"${PATH:+:}$PATH
   }


   # ** GEM
   if [ -x "$(command -v gem)" ]; then
       export GEM_HOME="${XDG_CONFIG_HOME}/gem/"
       export GEM_PATH="${XDG_CONFIG_HOME}/gem/"
       export GEM_BIN="${XDG_CONFIG_HOME}/gem/bin"
       PATH="$GEM_BIN"${PATH:+:}$PATH
   fi

   ## ** RVM
   if [[ -d "$HOME/.rvm/scripts" ]]; then
       export RVM_DIR="$HOME/.rvm"
       [ -s "$RVM_DIR/scripts/rvm" ] && source "$RVM_DIR/scripts/rvm"  # This loads nvm

       export RVM_CURRENT_BIN="$RVM_DIR/rubies/ruby-2.7.0/bin/ruby"
       PATH="$RVM_CURRENT_BIN"${PATH:+:}$PATH
   fi

   # * NPM
   if [ -x "$(command -v npm)" ]; then
       export NPM_CONFIG_PREFIX="$XDG_CONFIG_HOME/npm"
       export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/config"
       export NPM_CONFIG_CACHE="$XDG_CACHE_HOME/npm"
       export NPM_CONFIG_TMP="$XDG_RUNTIME_DIR/npm"
       export NPM_HOME="$XDG_CONFIG_HOME/npm"
       export NPM_BIN="$NPM_HOME/bin"
       PATH="$NPM_BIN":$PATH
   fi

   # ** DOTNET
   [ -x "$(command -v dotnet)" ] && export PATH="${HOME}/.dotnet/tools":${PATH}

   # ** SBCL
   [ -e "$HOME_LOCAL_BIN/sbcl" ] &&  export SBCL_HOME="$HOME_LOCAL/lib/sbcl"

   # ** NIM
   export PATH="${HOME}/.nimble/bin":${PATH}

   # ** Keyboard Layout
   export XMODIFIERS="@im=ibus"
   export QT_IM_MODULE=ibus
   export GTK_IM_MODULE=ibus

   # * PYTHON
   if [ -x "$(command -v pip3)" ]; then
       export PIP=pip3
       export PIP_REQUIRE_VIRTUALVENV=true
       export PIP_DOWNLOAD_CACHE=$HOME/.cache/pip/cache
   fi

   # * JAVA
   if [ -x "$(command -v javac)" ]; then
       # export CLASSPATH="$XDG_CONFIG_HOME/emacs/eclipse.jdt.ls/server/plugins/org.eclipse.equinox.launcher_1.5.600.v20191014-2022.jar${CLASSPATH:+:}$CLASSPATH"
       # export JAVA_HOME=
   fi

   # ** Python
   VIRTUALENVWRAPPER_PYTHON=$HOME_LOCAL_BIN/python3
   export WORKON_HOME=$HOME/.virtualenvs   # Optional
   export PROJECT_HOME=$HOME/projects      # Optional


   # ** GUIX
   if [ -x "$(command -v guix)" ]; then
       export PATH="/root/.config/guix/current/bin${PATH:+:}$PATH"
       export PATH="/home/lxbarbosa/.config/guix/current/bin"
       export GUIX_PROFILE="/home/lxbarbosa/.config/guix/current"
   fi

   [ '/usr/bin/tty' = '/dev/ttyv0' ] && startx & # FreeBSD

   # =============== APPLICATIONS
   # WGET/CURL
   if [ -x "$(command -v wget)" ]; then
       export DOWNLOADER="wget"
   else
       export DOWNLOADER="curl"
   fi

   # GOLANG
   if [ -x "$(command -v go)" ]; then
       export GOPATH="$HOME/.local/"
       export GO_BIN="$HOME/go/bin/"
       export PATH="$GO_BIN"${PATH:+:}$PATH
   fi

   # FLATPAK
   XDG_DATA_DIRS="/var/lib/flatpak/exports/share:$XDG_DATA_DIRS"

   # ----------------------- # NIX
   if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then
       . $HOME/.nix-profile/etc/profile.d/nix.sh;
   fi # added by Nix installer

   # source .bashrc
   if [ -n "$BASH_VERSION" ]; then
       if [ -f "$HOME/.bashrc" ]; then
	   . "$HOME/.bashrc"
       fi
   fi

   if [ -z "$DISPLAY" ] && [ "$(tty)" = /dev/tty1 ]; then exec startx; fi

   if [-z "${DISPLAY}"] && ["${XDG_VTNR}" -eq 1]; then
       exec startx
   fi


   if [ -x "$(command -v guix)" ]; then
       # GUIX VARS
       export GUILE_WARN_DEPRECATED="detailed"

       # GUIX BIN FOLDERS
       export GUIX_PROFILE="$HOME/.guix-profile"
       export PATH="$GUIX_PROFILE/bin:$GUIX_PROFILE/sbin"
       export PATH="$XDG_CONFIG_HOME/guix/current/bin${PATH:+:}$PATH"
       # export PATH="$GUIX_PROFILE/bin${PATH:+:}$PATH"
       # export PATH="/root/.config/guix/current/bin${PATH:+:}$PATH"
       # export GUIX_LOCPATH="$GUIX_PROFILE/lib/locale"
       # export INFOPATH="$GUIX_PROFILE/share/info${INFOPATH:+:}$INFOPATH"
       # export GIT_EXEC_PATH="$GUIX_PROFILE/libexec/git-core${GIT_EXEC_PATH}$GIT_EXEC_PATH"
   fi

   # ---------------- # Emacs - INFOPATH
   if [ -x "$(command -v emacs)" ]; then
       # export INFOPATH="/usr/share/info${INFOPATH:+:}$INFOPATH"
       # export INFOPATH="/usr/share/info/emacs${INFOPATH:+:}$INFOPATH"
       # export INFOPATH="/usr/local/share/info${INFOPATH:+:}$INFOPATH"
       # export INFOPATH="$HOME/lisp/emacs/info${INFOPATH:+:}$INFOPATH" # local build info
   fi

   # Compilers
   # [[ -x "$(command -v gcc)" ]] && export CC=gcc

   # ---------------- # GUIXSD
   if [ -x "$(command -v guix)" ]; then
       export GUILE_WARN_DEPRECATED="detailed"

       export GUIX_PROFILE="$HOME/.guix-profile"
       export PATH="${PATH:+:}$PATH$GUIX_PROFILE/bin:$GUIX_PROFILE/sbin"
       # export GUIX_GTK3_PATH="$GUIX_PROFILE/lib/gtk-3.0"
       # export XDG_DATA_DIRS="$GUIX_PROFILE/share"
       # export GIO_EXTRA_MODULES="$GUIX_PROFILE/lib/gio/modules"
       # export TERMINFO_DIRS="$GUIX_PROFILE/share/terminfo"
       # export INFOPATH="$GUIX_PROFILE/share/info${INFOPATH:+:}$INFOPATH"
       # export GST_PLUGIN_SYSTEM_PATH="$GUIX_PROFILE/lib/gstreamer-1.0"
       # export CPATH="$GUIX_PROFILE/include"
       # export ASPELL_DICT_DIR="$GUIX_PROFILE/lib/aspell"
       # export GIT_EXEC_PATH="$GUIX_PROFILE/libexec/git-core"
       # # export GIT_EXEC_PATH="$GUIX_PROFILE/libexec/git-core${GIT_EXEC_PATH}$GIT_EXEC_PATH"
       # export PKG_CONFIG_PATH="$GUIX_PROFILE/lib/pkgconfig:$GUIX_PROFILE/share/pkgconfig"
       # export CMAKE_PREFIX_PATH="$GUIX_PROFILE/"
       # export LIBRARY_PATH="$GUIX_PROFILE/lib:$GUIX_PROFILE/lib64${LIBRARY_PATH:+:}$LIBRARY_PATH"
       # export LD_LIBRARY_PATH="$GUIX_PROFILE/lib:$GUIX_PROFILE/lib64${LD_LIBRARY_PATH:+:}$LD_LIBRARY_PATH"
       # export PYTHONPATH="$GUIX_PROFILE/lib/python3.7/site-packages"
       # export ACLOCAL_PATH="$GUIX_PROFILE/share/aclocal"
       # export BASH_LOADABLES_PATH="$GUIX_PROFILE/lib/bash"
   fi



   # # ANACONDA
   # if [ -d "$HOME/anaconda3/" ]; then
   #     ANACONDA="$HOME/anaconda3/bin/"
   #     export PATH="$ANACONDA":"$PATH"
   # fi

   # # >>> conda initialize >>>
   # # !! Contents within this block are managed by 'conda init' !!
   # __conda_setup="$('/home/lxbarbosa/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
   # if [ $? -eq 0 ]; then
   #     eval "$__conda_setup"
   # else
   #     if [ -f "/home/lxbarbosa/anaconda3/etc/profile.d/conda.sh" ]; then
   #         . "/home/lxbarbosa/anaconda3/etc/profile.d/conda.sh"
   #     else
   #         export PATH="/home/lxbarbosa/anaconda3/bin:$PATH"
   #     fi
   # fi
   # unset __conda_setup
   # # <<< conda initialize <<<
   #+end_src
** .xinitrc
   #+begin_src shell-script

      function dwm {
	  if [ $1 == "dwm" ]; then
	      local autostart=autoinicia-aps
	      [ -f "$(command -v $autostart)" ] && $autostart

	      while true
	      do
		  xsetroot -name "$(wmbar-info)"
		  sleep 5s
	      done &
	  fi
      }

      TODO
      run_list(){
	  for var in $1
	  do
	      var[0] var[1]
	  done
      }

      run_tools() {
	  TOOLINGS=(xhost xset xsetroot ssh-agent)
	  TOOLINGS_CMD=(xhost\ +SI:localuser:"$USER"
			xset\ r\ rate\ 200\ 50
			xsetroot\ -cursor_name\ left_ptr
			eval\ "$(ssh-agent)")
	  CHECKLIST=$TOOLINGS
      }
   #+end_src
** sysinfo
   #+begin_src shell-script
   #!/usr/bin/env bash

   volume ()
   {
       local onoff
       onoff=$(amixer get Master | tail -1)

       local state
       if pgrep -x "pulseaudio" > /dev/null; then
	   state=$(pactl list sinks | grep '^[[:space:]]Volume:' | head -n $(( "$SINK" + 1 )) \
		       | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,')%
       else
	   state="$(amixer get Master | tail -n1 | sed -r 's/.*\[(.*)%\].*/\1/')"
       fi

       if [[ $onoff == *\[off\]* ]]; then
	   echo -e "Vol: MUTE"
       elif [[ $onoff == *\[on\]* ]]; then
	   echo -e "Vol: ${state}"
       else
	   echo -e "???"
       fi
   }

   cpu-frequency ()
   {
       read -r cpu a b c previdle rest < /proc/stat

       local prevtotal
       prevtotal=$((a+b+c+previdle))

       sleep 0.5

       read -r cpu a b c idle rest < /proc/stat
       total=$((a+b+c+idle))

       local cpu
       cpu="$((100*( (total-prevtotal) - (idle-previdle) ) / (total-prevtotal) ))"

       echo -ne "CPU: ${cpu}%"
   }

   cpu-temperature ()
   {
       local now
       now="$(sensors | grep Core | awk '{print substr($3, 2, length($1)-2)}' | tr '\n' ' ' | sed 's/ /°c /g' | sed 's/ $//')"

       echo -ne "Temp: ${now}"
   }

   memory ()
   {
       local now
       now="$(free -m | awk 'NR==2{printf "%dMB\n", $3,$2,$3*100/$2 }')"

       echo -ne "Mem: ${now}"
   }

   _date ()
   {
       local now
       now="$(date "+%H:%M - %a, %b %d")"

       echo -ne "${now}"
   }

   battery ()
   {
       local state
       state=$(acpi -b | sed 's/.*[charging|unknown|full], \([0-9]*\)%.*/\1/gi')

       local status
       status=$(acpi -b | sed 's/.*: \([a-zA-Z]*\),.*/\1/gi')

       echo -ne "Bat: ${state}%"

       # (${status})
       # if ([ "$BATT" -le 5 ] && [ "$STATUS" == 'Discharging' ]); then
       #     # Beep
       #     echo -ne "\007" >/dev/tty10 && sleep 0.2
       #     echo -ne "\007" >/dev/tty10 && sleep 0.2
       #     echo -ne "\007" >/dev/tty10 && sleep 0.2
       #     # Blink
       #     echo -ne 'on' > /proc/acpi/ibm/light && sleep 1
       #     echo -ne 'off' > /proc/acpi/ibm/light
       # fi
   }

   connection ()
   {
       ping -c 3 cnn.com &> /dev/null &&
	   echo -ne "CON: ON" || echo -ne "CON: OFF"
   }

   gputil ()
   {
       gputil="$( nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader )"
       echo -ne "GPUF: ${gputil}"
       # utilization.memory
       # utilization.gpu
   }

   gputemp ()
   {
       gputemp="$( nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader )"
       echo -ne "GPUT: ${gputemp}°c"
       n# utilization.memory
       # utilization.gpu
   }

   update ()
   {
       pac=$(checkupdates | wc -l)
       aur=$(cower -u | wc -l)

       check=$((pac + aur))
       if [[ "$check" != "0" ]]
       then
	   echo -e " $pac  $aur / "
       fi
   }

   con ()
   {
       if pgrep -x "nm-applet" > /dev/null; then # if is running
	   echo ""
       else
	   ping -c 3 gnu.org &> /dev/null &&
	       echo -ne "WIFI: ON" || echo -ne "CON: OFF"
       fi
   }

   host ()
   {
       echo -e "$HOSTNAME"
   }

   # apt list --upgradable

   sep=" :: "
   echo " $(host)${sep}$(volume)${sep}$(memory)${sep}$(cpu-frequency)${sep}$(cpu-temperature)${sep}$(battery)${sep}$(_date)"

   exit 0

   #+end_src
** Guix Config
   #+begin_src scheme

   (locale "pt_BR.utf8")

   (locale-definitions
    (list (locale-definition (source "en_US") (name "en_US.utf8"))
	  (locale-definition (source "pt_BR") (name "pt_BR.utf8"))))

   ("/usr/bin/sh"
    ,(file-append (canonical-package coreutils)
		  "/bin/sh"))
   ("/usr/bin/bash"
    ,(file-append (canonical-package coreutils)
		  "/bin/bash"))

   ("/bin/pwd"
    ,(file-append (canonical-package coreutils)
		  "/bin/pwd"))


   ("/bin/startx" ,(xorg-start-command))

   #+end_src
** e_packs
   #+begin_src shell-script

   #+end_src
** e_distro
   #+begin_src shell-script




	    #!/usr/bin/env bash

	    # set -e

	    # * NIXOS
	    # Descricao: Distro Pacotes

	    nixos-packages ()
	    {
		echo "-- NixOS Packages"

		languages=(ruby lua luarocks python3 postgresql sqlite3 zenity bash-completion)
		languages_nixos=(nixos.shellcheck nixos.lua53Packages.luacheck)

		wm_packages=(network-manager-applet aria2 dunst maim udiskie unclutter lxqt-openssh-askpass mpv libnotify
			     dmenu imagemagick pandoc xdg-utils lm-sensors aspell mpd mpc ncmpc ncmpcpp wofi rofi ffmpeg
			     vorbis-tools)
		wm_packages_nixos=(nixos.xfce.xfce4-clipman-plugin nixos.perl530Packages.FileMimeInfo nixos.screenfetch nixos.aspellDicts.en nixos.aspellDicts.br)

		user_packages=(emacs firefox libreoffice kdeconnect calibre inkscape screenkey kdenlive cheese gimp obs-studio
			       vlc kate syncthing steam)
		user_packages_nixos=(nixos.deluge nixos.gnome3.gnome-keyring)

		virtualization=(qemu aqemu qemu-utils virt-manager OVMF)
		virtualization=(nixos.qemu_kvm)

		wine=(wine winetricks)

		gnu=(gnutls gnused gdb texinfo autoconf parallel findutils stow screen automake)
		gnu_nixos=(nixos.xsel)

		system_tools=(lshw at usbutils lsof time net-tools iproute2 curl entr tree git xclip ctags fontconfig
			      subversion bc htop strace ltrace openssh cpio lhasa lzop atool wmctrl
			      perf-tools mercurial sysstat jq dialog ncdu nnn fzf fzy rsync bat rclone xonsh pv
			      neovim zsh unrar ripgrep socat fish)
		system_tools=(nixos.poppler)

		ruby_tools=(ruby)

		laptop=(brightnessctl tlp iw libinput-gestures acpi acpid)
		laptop_nixos=(nixos.wirelesstools)

		local command='nix-env -i'
		local command_nixos='nix-env --installi -A'

		e_dolist "$command" "${essentials[@]}"
		e_dolist "$command" "${wm[@]}"
		e_dolist "$command" "${languages[@]}"
		e_dolist "$command" "${devops[@]}"
		e_dolist "$command" "${wm_packges[@]}"
		e_dolist "$command" "${user_packages[@]}"
		e_dolist "$command" "${media[@]}"
		e_dolist "$command" "${virtualization[@]}"
		e_dolist "$command" "${wine[@]}"
		e_dolist "$command" "${fonts[@]}"; sudo fc-cache -fv
		e_dolist "$command" "${ruby_tools[@]}"
		e_dolist "$command" "${emacs_deps[@]}"
		# e_dolist "$command" "${misc_deps[@]}"
		e_dolist "$command" "${laptop[@]}"

		echo "-- Preparacoes finais: limpando e arrumando o sistema"
		sudo apt -y autoremove

		echo "Done"
	    }

	    nixos-services()
	    {
		echo "systemctl"
		sudo systemctl disable mpd.service
		sudo systemctl disable mpd.socket
	    }

	    nixos-foreign()
	    {
		if [ ! $(command -v google-chrome) ]; then
		    cd ${HOME}
		    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

		    sudo apt install -y ${HOME}/google-chrome-stable_current_amd64.deb
		    sudo apt update
		fi

		if [ ! $(command -v code) ]; then
		    cd ${HOME}
		    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
		    sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
		    sudo sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'

		    sudo apt-get install apt-transport-https
		    sudo apt-get update
		    sudo apt install -y code
		fi

		if [ -x "$(command -v pgadmin)" ]; then
		    # Install the public key for the repository (if not done previously):
		    curl https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo apt-key add

		    # Create the repository configuration file:
		    sudo sh -c 'echo "deb https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/buster pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'

		    # Install for both desktop and web modes:
		    sudo apt install pgadmin4 pgadmin4-desktop pgadmin4-web

		    # Configure the webserver, if you installed pgadmin4-web:
		    python -m pip install --user flask
		    sudo /usr/pgadmin4/bin/setup-web.sh
		fi
	    }

	    nixos-upgrade()
	    {
		echo "-- Atualizando Sistema"
		nix-env --upgrade
	    }

	    run()
	    {

	    }


	    # * RUN

	    nixos-packages
	    nixos-services
	    nixos-foreign
	    nixos-upgrade



	 #!/usr/bin/env bash

	 # set -e

	 # * ARCH LINUX

	 arch-upgrade()
	 {
	     echo "-- Atualizando Sistema" sudo pacman -Syy && sudo pacman -Syu
	 }

	 arch-packages ()
	 {
	     echo "-- Debian Packages"

	     essentials=(base-devel coreutils wget git p7zip zip unzip util-linux bash tmux zile)

	     languages=(gcc clang postgresql sqlite3 postgresql-libs shellcheck zenity bash-completion python-pip)

	     user_packages=(emacs firefox libreoffice kdeconnect calibre inkscape screenkey kdenlive cheese deluge gimp obs-studio gnome-keyring vlc kate syncthing steam imagemagick pandoc xdg-utils screenfetch lm_sensors aspell aspell-en  mpv)

	     media=(ffmpeg vorbis-tools gst-libav gst-plugins-bad gst-plugins-base gst-plugins-good  gst-plugins-ugly)

	     virtualization=(qemu qemu-system-gui qemu-utils qemu-efi qemu-kvm virt-manager ovmf) # qemu-system-x86

	     wine=(wine winetricks)

	     fonts=(ttf-fira-code gnu-free-fonts ttf-dejavu) # ttf-ancient-fonts fonts-nanum

	     system_tools=(lshw at usbutils lsof time net-tools iproute2 curl entr tree git xsel xclip ctags fontconfig
			   freetype2 subversion bc htop strace ltrace openssh cpio lhasa lzop atool wmctrl poppler
			   perf mercurial sysstat jq dialog ncdu nnn fzf fzy rsync bat rclone xonsh pv
			   parallel findutils wget stow screen neovim zsh parted texinfo gcc gdb make autoconf
			   automake gnutls gdb nftables firewalld unrar ripgrep socat fish)  # console-data

	     emacs_deps=(libjansson-dev libbrotli-dev libwebkit2gtk-4.0-dev libpng-dev zlib1g-dev libpoppler-glib-dev
			 libpoppler-private-dev ghostscript mupdf-tools
			 poppler-utils texlive-binaries unoconv djvulibre-bin ncurses-dev
			 texlive-latex-base texlive-fonts-recommended  texlive-latex-extra
			 uuid-dev libicu-dev icu-devtools libedit-dev libxml2-dev
			 libsqlite3-dev swig libpython-dev libncurses5-dev pkg-config
			 libcurl4-openssl-dev systemtap-sdt-dev tzdata rsync)

	     laptop=(iw wireless_tools libinput-gestures acpi acpid) # apmd pbbuttonsd pmud libiw-dev laptop-mode-tools

	     local command='sudo pacman -S --noconfirm'

	     e_dolist "$command" "${essentials[@]}"
	     e_dolist "$command" "${languages[@]}"
	     e_dolist "$command" "${devops[@]}"
	     e_dolist "$command" "${wm_packges[@]}"
	     e_dolist "$command" "${user_packages[@]}"
	     e_dolist "$command" "${media[@]}"
	     e_dolist "$command" "${virtualization[@]}"
	     e_dolist "$command" "${wine[@]}"
	     e_dolist "$command" "${fonts[@]}"; sudo fc-cache -fv
	     e_dolist "$command" "${ruby_tools[@]}"
	     # e_dolist "$command" "${emacs_deps[@]}"
	     # e_dolist "$command" "${misc_deps[@]}"
	     e_dolist "$command" "${laptop[@]}"
	 }

	 arch-services()
	 {
	     echo "systemctl"
	     sudo systemctl disable mpd.service
	     sudo systemctl disable mpd.socket
	 }

	 arch-foreign()
	 {
	     if [ ! $(command -v google-chrome) ]; then
		 cd ${HOME}
		 wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

		 sudo apt install -y ${HOME}/google-chrome-stable_current_amd64.deb
		 sudo apt update
	     fi

	     if [ ! $(command -v code) ]; then
		 cd ${HOME}
		 wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
		 sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
		 sudo sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'

		 sudo apt-get install apt-transport-https
		 sudo apt-get update
		 sudo apt install -y code
	     fi

	     if [ -x "$(command -v pgadmin)" ]; then
		 # Install the public key for the repository (if not done previously):
		 curl https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo apt-key add

		 # Create the repository configuration file:
		 sudo sh -c 'echo "deb https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/buster pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'

		 # Install for both desktop and web modes:
		 sudo apt install pgadmin4 pgadmin4-desktop pgadmin4-web

		 # Configure the webserver, if you installed pgadmin4-web:
		 python -m pip install --user flask
		 sudo /usr/pgadmin4/bin/setup-web.sh
	     fi
	 }

	 # * RUN

	 arch-upgrade
	 arch-packages
	 arch-services
	 # arch-foreign


      #!/usr/bin/env bash

      # set -e

      fedora-packages ()
      {
	  essentials=(zip unzip git tmux wget bash zile emacs)

	  system=(p7zip p7zip-plugins openssh acpi lshw at usbutils lsof time net-tools iproute entr ntfs-3g tree xsel xclip ctags fontconfig freetype subversion bc htop strace ltrace cpio lzop atool wmctrl poppler-utils perf sysstat jq dialog ncdu ripgrep nnn fzf rsync bat rclone xonsh pv info stow screen autoconf texinfo firewall-config automake m4 libtool bzip2)

	  programming=(ShellCheck zenity bash-completion cmake zsh fish gcc neovim gcc-c++ gdb clang clang-tools-extra lldb mercurial ncurses-devel)

	  ruby=(openssl-devel python2 libyaml-devel libffi-devel readline-devel zlib-devel gdbm-devel)

	  infra=(vagrant vagrant-libvirt VirtualBox qemu qemu-system-x86 qemu-kvm virt-manager wine) # podman edk2-ovmf

	  user=(firefox kde-connect ImageMagick gimp pandoc libreoffice calibre inkscape krita atril liveusb-creator perl-File-MimeInfo aspell aspell-en syncthing lm_sensors xdg-utils dmenu xprop screenfetch numix-gtk-theme numix-icon-theme)

	  fonts=(mozilla-fira-mono-fonts powerline-fonts google-noto-emoji-fonts google-noto-sans-fonts google-droid-sans-mono-fonts)

	  media=(vorbis-tools gstreamer1-devel gstreamer1-plugins-base-tools gstreamer1-plugins-base-devel gstreamer1-plugins-good gstreamer1-plugins-good-extras gstreamer1-plugins-bad-free-devel gstreamer1-plugins-bad-free-extras)

	  echo "Instalando pacotes."

	  local command='sudo dnf install -y'

	  e_dolist "$command ${essentials[@]}"
	  e_dolist "$command ${ruby[@]}"
	  e_dolist "$command ${programming[@]}"
	  e_dolist "$command ${system[@]}"
	  e_dolist "$command ${infra[@]}"
	  e_dolist "$command ${user[@]}"
	  e_dolist "$command ${fonts[@]}"; sudo fc-cache -fv
	  e_dolist "$command ${media[@]}"
      }

      fedora-upgrade()
      {
	  sudo dnf upgrade -y
	  sudo dnf autoremove -y
      }

      fedora-services()
      {
	  sudo hostnamectl set-hostname 'fedora'
      }

      fedora-foreign()
      {
	  rpmfusion()
	  {
	      # RPM FUSION
	      if [ ! -x "$(command -v mpv)" ]; then
		  sudo dnf install -y https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
		  sudo dnf install -y https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm

		  sudo dnf install -y ffmpeg mpv steam unrar
	      fi
	  }

	  vscode()
	  {
	      if [ ! -x "$(command -v code)" ]; then
		  sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
		  sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'

		  sudo dnf check-update -y
		  sudo dnf install -y code
	      fi
	  }

	  docker()
	  {
	      echo 'docker'
	  }

	  podman()
	  {
	      echo 'podman'
	  }

	  rpmfusion
	  podman
	  vscode
	  docker
      }

      # * RUN

      fedora-upgrade
      fedora-packages
      # fedora-services
      # fedora-foreign


   #!/usr/bin/env bash

   # set -e

   # * UBUNTU

   ubuntu-packages()
   {
       essentials=(ssh make build-essential git p7zip p7zip-full zip unzip zile neovim tmux curl wget bash emacs gcc)

       ruby=(python2 autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm6 libgdbm-dev)

       programming=(shellcheck zenity bash-completion m4 libtool libtool-bin default-jdk clang clangd lldb cmake)

       virtualization=(wine wine32 winetricks qemu qemu-system-x86 qemu-system-gui qemu-utils qemu-efi qemu-kvm virt-manager ovmf virt-manager) # libvirt-clients libvirt-daemon-system libvirt-dev libvirt0

       toolings=(htop zsh screen gdb ripgrep lshw at usbutils lsof time entr tree git xsel xclip exuberant-ctags fontconfig libfreetype6 subversion bc gdebi strace ltrace cpio lhasa lzop atool wmctrl poppler-utils brz mercurial sysstat jq dialog ncdu nnn fzf fzy rsync bat rclone xonsh pv vrms info stow parted texinfo autoconf automake gnutls-bin bash-doc gcc-doc gdb-doc gdbserver wget2 parallel nftables libiw-dev)

       fonts=(fonts-firacode fonts-dejavu ttf-ancient-fonts fonts-nanum)

       de=(firefox syncthing libreoffice calibre inkscape kdenlive deluge obs-studio vlc mpv steam inxi fish imagemagick pandoc screenfetch lm-sensors aspell gimp numix-icon-theme numix-gtk-theme)

       media=(ffmpeg vorbis-tools gstreamer1.0-plugins-bad gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly)

       echo "Instalando pacotes."

       local command='sudo apt install -y'
       e_dolist "$command" "${essentials[@]}"
       e_dolist "$command" "${ruby[@]}"
       e_dolist "$command" "${fonts[@]}"; sudo fc-cache -fv
       e_dolist "$command" "${programming[@]}"
       e_dolist "$command" "${virtualization[@]}"
       e_dolist "$command" "${toolings[@]}"
       e_dolist "$command" "${de[@]}"
       e_dolist "$command" "${media[@]}"
   }

   ubuntu-upgrade()
   {
       echo "-- Updating System"

       sudo apt -y update && sudo apt -y upgrade
       sudo apt -y autoremove
   }

   ubuntu-services()
   {
       enable-all-repos()
       {
	   echo ""
       }

       enable-all-repos
   }

   # * RUN

   ubuntu-upgrade
   ubuntu-packages
   #ubuntu-services

   #+end_src
** Nyxt
   #+begin_src conf ~/.config/nyxt/init.lisp :mkdirp yes
   (in-package :next-user)

   ;; Search Engines
   (defvar a/search-engines
     '(("bi" . "https://bing.com/?q=~a")
       ("dg" . "https://duckduckgo.com/?q=~a")
       ("g" . "https://www.google.com/search?ion=1&q=~a")
       ("gh" . "https://github.com/search?ref=simplesearch&q=~a")
       ("q" .  "http://quickdocs.org/search?q=~a")
       ("s" .  "http://stackoverflow.com/search?q=~a")
       ("wp" . "http://www.wikipedia.org/search-redirect.php?language=en&go=Go&search=~a")
       ("yt" . "https://www.youtube.com/results?search_query=~a")))

   (defclass my-browser (gtk-browser)
     ((search-engines :initform
		      (append
		       a/search-engines
		       (get-default 'browser 'search-engines)))))

   (setf *browser-class* 'my-browser)
   #+end_src
*** Config
    #+begin_src lisp
    (defvar *my-keymap* (make-keymap)  "My keymap.")

    (define-command play-page-video (&optional (buffer (current-buffer)))
      "Play video in the currently open buffer."
      (uiop:run-program (list "mpv" (url buffer))))
    (define-key :keymap *my-keymap*  "C-M-c v" #'play-page-video)

    (define-command play-video-in-current-page (&optional (buffer (current-buffer)))
      "Play video in the currently open buffer."
      (uiop:run-program (list "mpv" (url buffer))))

    (defvar *my-keymap* (make-keymap)
      "My keymap.")

    (define-mode my-mode ()
      "Dummy mode for the custom key bindings in `*my-keymap*'."
      ((keymap-schemes :initform (list :emacs *my-keymap*
				       :vi-normal *my-keymap*))))

    Debugging
    (setf *swank-port* 4006)


    Use development platform port.
    (setf +platform-port-command+
	  "~/.local/bin/next-gtk-webkit")

    open-file
    (defun my-open-videos (filename)
      "Open videos with mpv."
      (handler-case (let ((extension (pathname-type filename)))
		      (match extension
			     ((or "webm" "mkv" "mp4")
			      (uiop:launch-program (list "mpv" filename)))
			     (_
			      (next/file-manager-mode:open-file-function filename))))
	(error (c) (log:error "Error opening ~a: ~a" filename c))))

    (setf next/file-manager-mode:*open-file-function* #'my-open-videos)


    (define-key :keymap *my-keymap* "C-M-c v" #'play-video-in-current-page)


    -- a-FUNCTIONS (m-x)
    (defun a-play-video ()
      "Play current page's video"
      (with-result (url (buffer-get-url))
	(uiop:launch-program (list "mpv" url))))

    (define-command a-get-video ()
      "Download current page's video"
      (with-result (url (buffer-get-url))
	(uiop:launch-program (list "youtube-dl" url "&"))))

    (define-command a-bookmark-url ()
      "Allow the user to bookmark a URL via minibuffer input."
      (with-result (url (read-from-minibuffer (minibuffer *interface*)))
	(%bookmark-url url)))

    ;; Zoom
    ;; (setf *zoom-ratio-default* 1.6)

    HOME PAGE
    (setf (get-default 'remote-interface 'start-page-url) "https://cnn.com")

    ;; Minibuffer
    (setf (get-default 'minibuffer 'minibuffer-style)
	  (cl-css:inline-css
	   '((body :border-top "14px solid red"))))

    #+end_src
** bashrc
   #+begin_src shell-script
   e-startx()
   {
       if [ -z "${DISPLAY}" ] && [ -n "${XDG_VTNR}" ] && [ "${XDG_VTNR}" -eq 1 ]; then
	   exec startx
       fi
   }

   #+end_src
** .xserverrc
   #+begin_src shell-script ~/.xserverrc -mode (identity #o755)
   #!/usr/bin/env bash

   # Descricao: Global variaveis de ambiente

   exec /usr/bin/Xorg -novtswitch -nolisten tcp "$@" vt$XDG_VTNR
   #+end_src

** Sbcl
   #+begin_src lisp ~/.sbclrc
    (declaim (optimize (debug 3) (speed 0)))
   #+end_src
** Xmobar
   #+begin_src haskell  ~/.xmobarrc
   -- -*- haskell -*-

   Config {

      -- appearance
	font             = "xft:JetBrains Mono:size=9:bold:antialias=true"
      , bgColor          = "#172030"
      , fgColor          = "#c6797e"
      , position         =  Bottom

      -- layout
      , sepChar          = "%"   -- delineator between plugin names and straight text
      , alignSep         = "}{"  -- separator between left-right alignment

      -- general behavior
      , lowerOnStart     = True    -- send to bottom of window stack on start
      , hideOnStart      = False   -- start with window unmapped (hidden)
      , allDesktops      = True    -- show on all desktops
      , overrideRedirect = True    -- set the Override Redirect flag (Xlib)
      , pickBroadest     = False   -- choose widest display (multi-monitor)
      , persistent       = True    -- enable/disable hiding (True = disabled)
      , template         = " O sol seja louvado! } {  %wifi% %multicpu%  %coretemp%  %battery%  %memory%  %date% "

      -- http://projects.haskell.org/xmobar/#system-monitor-plugins.
      , commands         =
	   -- network activity monitor (dynamic interface resolution)
	   [ Run DynNetwork     [ "--template" , "<dev>: <tx>kB/s|<rx>kB/s"
				, "--Low"      , "1000"       -- units: B/s
				, "--High"     , "5000"       -- units: B/s
				, "--low"      , "darkgray"
				, "--normal"   , "orange"
				, "--high"     , "red"
				] 10


	   , Run Brightness ["-t", ""] 60

	   , Run Com "wmbar-info" [] "wifi" 30

	   -- cpu activity monitor
	   , Run MultiCpu       [ "--template" , "CPU: <total0>% <total1>%"
				, "--Low"      , "50"         -- units: %
				, "--High"     , "85"         -- units: %
				, "--low"      , "darkgray"
				, "--normal"   , "orange"
				, "--high"     , "red"
				] 10

	   -- cpu core temperature monitor
	   , Run CoreTemp       [ "--template" , "TEMP: <core0>°C <core1>°C"
				, "--Low"      , "70"        -- units: °C
				, "--High"     , "80"        -- units: °C
				, "--low"      , "darkgray"
				, "--normal"   , "orange"
				, "--high"     , "red"
				] 50

	   -- memory usage monitor
	   , Run Memory         [ "--template" ,"MEM: <usedratio>%"
				, "--Low"      , "20"        -- units: %
				, "--High"     , "90"        -- units: %
				, "--low"      , "darkgray"
				, "--normal"   , "orange"
				, "--high"     , "red"
				] 10

	   -- battery monitor
	   , Run Battery        [ "--template" , "BAT: <acstatus>"
				, "--Low"      , "10"        -- units: %
				, "--High"     , "80"        -- units: %
				, "--low"      , "red"
				, "--normal"   , "orange"
				, "--high"     , "red"

				, "--" -- battery specific options
					  -- discharging status
					  , "-o"	, "<left>% (<tceimeleft>)"
					  -- AC "on" status
					  , "-O"	, "<fc=#eabe9a>Charging</fc>"
					  -- charged status
					  , "-i"	, "<fc=#1E6378>Charged</fc>"
				] 50

	   -- time and date indicator
	   , Run Date           "<fc=#ABABAB>%F (%a) %T</fc>" "date" 10
	   ]
      }
   #+end_src
** .pypirc
   #+begin_src conf
   [distutils]
   index-servers =
       pypi

   [pypi]
   repository: https://pypi.python.org/pypi
   username: elxbarbosa
   #+end_src
** gtk-3.0
   #+begin_src conf
   [Settings]
   gtk-fallback-icon-theme=Numix
   gtk-icon-theme-name=Canta
   gtk-key-theme-name=Emacs
   gtk-theme-name=Canta
   #+end_src
** fontconfig
   #+begin_src conf
   <?xml version="1.0" encoding="UTF-8"?>
   <!DOCTYPE fontconfig SYSTEM "fonts.dtd">
   <fontconfig>
     <alias>
       <family>serif</family>
       <prefer>
	 <family>Noto Color Emoji</family>
       </prefer>
     </alias>
     <alias>
       <family>sans-serif</family>
       <prefer>
	 <family>Noto Color Emoji</family>
       </prefer>
     </alias>
     <alias>
       <family>monospace</family>
       <prefer>
	 <family>Noto Color Emoji</family>
       </prefer>
     </alias>
   </fontconfig>
   #+end_src

** StaloneTray
   #+begin_src conf
   decorations none
   transparent false
   dockapp_mode none
   geometry 1x1-0+750
   background "#172030"
   kludges force_icons_size
   grow_gravity NW
   icon_gravity NW
   icon_size 18
   sticky true
   #window_strut none
   window_type dock
   window_layer bottom
   no_shrink false
   skip_taskbar true
   #+End_src
** pycodestyle
   #+begin_src conf
   [pycodestyle]
   max-line-length = 90
   #+end_src
** Flake
   #+begin_src conf
   [flake8]
   max-line-length = 88
   exclude = tests/*
   max-complexity = 10
   #+end_src
** StumpWM
   #+BEGIN_SRC lisp

   ;; ------------
   ;; SWANK / SLYNK
   ;; ------------

   ;; (require 'swank)
   ;; (swank:create-server)


   (ql:quickload "clx-truetype")
   (load-module "ttf-fonts")
   (set-font (make-instance 'xft:font :family "Hack Mono" :subfamily "Book" :size 11))


   ;; (define-key *top-map* (kbd "s-R") "kill-and-remove")
   ;; (define-key *top-map* (kbd "s-v") "split-and-switch")
   ;; (define-key *top-map* (kbd "s-h") "hsplit-and-switch")


   ;;*time-modeline-string* "%a %b %e %k:%M"
   ;; (ql:quickload :clx)
   ;; (ql:quickload :cl-ppcre)
   ;; (ql:quickload :swank)
   ;; (ql:quickload :stumpwm)
   ;; (stumpwm:stumpwm)
   ;; (quit)

   ;; ---------------
   ;; Fixed window numbers for certain programs

   ;; (defparameter *window-class-renumber*
   ;;   '(("Emacs" . 0)
   ;;     ("Next" . 1)
   ;;     ("mpv" . 2)
   ;;     ("firefox" . 3)
   ;;     ("st" . 4))
   ;;   "Alist of window classes to be renumbered, and their target numbers.")

   ;; (defun renumber-window-by-class (win)
   ;;   "Renumber window if its class matches *window-class-renumber*."

   ;;   (let* ((class (window-class win))
   ;;          (target-number (cdr (assoc class *window-class-renumber*
   ;;                                     :test #'string=))))

   ;;     (when target-number
   ;;       (let ((other-win (find-if #'(lambda (win)
   ;;                                     (= (window-number win) target-number))
   ;;                                 (group-windows (window-group win)))))
   ;;         (if other-win
   ;;             (when (string-not-equal class (window-class other-win))
   ;;               ;; other window, different class; switch numbers
   ;;               (setf (window-number other-win) (window-number win))
   ;;               (setf (window-number win) target-number))
   ;;             ;; if there's already a window of this class, do nothing.
   ;;             ;; just keep the new number for this window.

   ;;             ;; else: no other window; target number is free.
   ;;             (setf (window-number win) target-number))

   ;;         ;; finally
   ;;         (update-all-mode-lines)))))

   ;; (add-hook *new-window-hook* 'renumber-window-by-class)
   ;; wifi: %I
   ;; (^B%n^b)

   ;; (progn
   ;;   (load-module "kbd-layouts")
   ;;   (keyboard-layout-list "us" "pt-br"))

   ;; -- STUMPWM CONTRIB MODULES
   ;; (add-to-load-path "~/.local/share/quicklisp/setup.lisp")

   ;; (load-module "ttf-fonts")
   ;; (xft:cache-fonts)
   ;; (set-font (make-instance 'xft:font :family "Hack" :subfamily "Regular" :size 10))



   ;;*time-modeline-string* "%a %b %e %k:%M"


   (define-frame-preference "code"
       (0 t t :class "Emacs"))
   (define-frame-preference "browse"
       (0 t t :class "Chromium"))
   (define-frame-preference "browse"
       (0 t t :class "Firefox"))
   (define-frame-preference "browse"
       (0 t t :class "Next"))
   (define-frame-preference "system"
       (0 t t :class "Xfce4-terminal"))
   (define-frame-preference "media"
       (0 t t :class "mpv"))


   (run-commands
    "grename code"
    "gnewbg browse"
    "gnewbg system"
    "gnewbg media"
    "gnewbg misc"
    "gnewbg 6"
    "gnewbg 7")

   ;; (setf (group-name (car (screen-groups (current-screen)))) "code")
   ;; (gnewbg "system")
   ;; (gnewbg "media")
   ;; (gnewbg "misc")


   (define-key *root-map* (kbd "s-c") "colon1 exec firefox http://www.")

   (run-shell-command "dunst &")
   (run-shell-command "stalonetray -t -p --window-type normal")
   (run-shell-command "gnome-settings-daemon")
   (run-shell-command "gnome-power-manager")
   (run-shell-command "bluetooth-applet &")
   (run-shell-command "pactl load-module module-x11-xsmp &")

   ;; COLORS
   (set-focus-color "#3B4252")
   (set-unfocus-color "#232731")
   (set-win-bg-color "#22272F")

   (defcommand vsplit-and-switch () ()
	       "Splits vertically and switches to next window"
	       (vsplit)
	       (fnext))

   (defcommand hsplit-and-switch () ()
	       "Splits horizontally and switches to next window"
	       (hsplit)
	       (fnext))

   (defcommand toogle-mode-line () ()
	       "Hide/Show Modeline"
	       (stumpwm:toggle-mode-line (stumpwm:current-screen)
					 (stumpwm:current-head)))

   (mapc (lambda (head)
	   (toggle-mode-line (current-screen) head))
	 (screen-heads (current-screen)))


   (defcommand kill-and-remove () ()
	       "Kills the window and removes the frame"
	       (kill)
	       (remove))


   ;; prompt the user for an interactive command. The first arg is an
   ;; optional initial contents.
   ;; (defcommand colon1 (&optional (initial "")) (:rest)
   ;;             (let ((cmd (read-one-line (current-screen) ": " :initial-input initial)))
   ;;               (when cmd
   ;;                 (eval-command cmd t))))


   ;; ;; Read some doc
   ;; (define-key *root-map* (kbd "d") "exec gv")

   ;; ;; Ssh somewhere
   ;; (define-key *root-map* (kbd "C-s") "colon1 exec xterm -e ssh ")

   ;; ;; Web jump (works for Google and Imdb)
   ;; (defmacro make-web-jump (name prefix)
   ;;   `(defcommand ,(intern name) (search) ((:rest ,(concatenate 'string name " search: ")))
   ;;      (substitute #\+ #\Space search)
   ;;      (run-shell-command (concatenate 'string ,prefix search))))

   ;; (make-web-jump "google" "firefox http://www.google.fr/search?q=")
   ;; (make-web-jump "imdb" "firefox http://www.imdb.com/find?q=")

   ;; ;; C-t M-s is a terrble binding, but you get the idea.
   ;; (define-key *root-map* (kbd "M-s") "google")
   ;; (define-key *root-map* (kbd "i") "imdb")

   ;; Message window font
   ;; (set-font "-xos4-terminus-medium-r-normal--14-140-72-72-c-80-iso8859-15")

   ;; ;;; Define window placement policy...

   ;; Last rule to match takes precedence!
   ;; TIP: if the argument to :title or :role begins with an ellipsis, a substring
   ;; match is performed.
   ;; TIP: if the :create flag is set then a missing group will be created and
   ;; restored from *data-dir*/create file.
   ;; TIP: if the :restore flag is set then group dump is restored even for an
   ;; existing group using *data-dir*/restore file.
   ;; (define-frame-preference "Default"
   ;;     ;; frame raise lock (lock AND raise == jumpto)
   ;;     (0 t nil :class "Konqueror" :role "...konqueror-mainwindow")
   ;;   (1 t nil :class "XTerm"))

   ;; (define-frame-preference "Ardour"
   ;;     (0 t   t   :instance "ardour_editor" :type :normal)
   ;;   (0 t   t   :title "Ardour - Session Control")
   ;;   (0 nil nil :class "XTerm")
   ;;   (1 t   nil :type :normal)
   ;;   (1 t   t   :instance "ardour_mixer")
   ;;   (2 t   t   :instance "jvmetro")
   ;;   (1 t   t   :instance "qjackctl")
   ;;   (3 t   t   :instance "qjackctl" :role "qjackctlMainForm"))

   ;; (define-frame-preference "Shareland"
   ;;     (0 t   nil :class "XTerm")
   ;;   (1 nil t   :class "aMule"))

   ;; (define-frame-preference "Emacs"
   ;;     (1 t t :restore "emacs-editing-dump" :title "...xdvi")
   ;;   (0 t t :create "emacs-dump" :class "Emacs"))
   #+END_SRC
** Xmonad
   #+begin_src haskell
   import Graphics.X11.ExtraTypes.XF86

   , ( (0, xF86XK_AudioRaiseVolume), spawn  "pactl set-sink-volume @DEFAULT_SINK@ +5%")
   , ( (0, xF86XK_AudioLowerVolume), spawn  "pactl set-sink-volume @DEFAULT_SINK@ -5%")
   , ( (0, xF86XK_AudioMute)       , spawn  "pactl set-sink-mute @DEFAULT_SINK@ toggle")

	 -- Toggle the status bar gap
       -- Use this binding with avoidStruts from Hooks.ManageDocks.
       -- See also the statusBar function from Hooks.DynamicLog.
       --
       -- , ((modm .|. altMask, xK_b     ), sendMessage ToggleStruts)


       -- ++

       -- --
       -- -- mod-{w,e,r}, Switch to physical/Xinerama screens 1, 2, or 3
       -- -- mod-shift-{w,e,r}, Move client to screen 1, 2, or 3
       -- --
       -- [((m .|. modm, key), screenWorkspace sc >>= flip whenJust (windows . f))
       --     | (key, sc) <- zip [xK_w, xK_e, xK_r] [0..]
       --     , (f, m) <- [(W.view, 0), (W.shift, shiftMask)]]

   #+end_src
** Xmobar
   #+begin_src haskell
	   -- -- weather monitor
	   -- , Run Weather "SBBR" [ "--template", "<skyCondition> | <fc=#4682B4><tempC></fc>°C | <fc=#4682B4><rh></fc>% | <fc=#4682B4><pressure></fc>hPa"
	   --                      ] 13000
   -- %StdinReader% }{
	   -- -- screen brightness
	   -- , Run Brightness ["-t", "Brightness: [<bar>]"] 10

   position = Static { xpos = 0, ypos = 750, width = 1346, height = 20 }
   #+end_src
** Qtile
   #+begin_src python
		    widget.Sep(padding=10),
		    widget.KeyboardLayout(
			configured_keyboards=["us", "br"], foreground=COLORS.pink,
		    ),
		    widget.Wallpaper(random_selection=True, label=False),

    widget.CheckUpdates(
			colour_no_updates=COLORS.black,
			colour_have_updates=COLORS.red,
			custom_command="checkupdates",
		    ),
		    widget.Sep(padding=10),
		    widget.CapsNumLockIndicator(foreground=COLORS.white),
		    widget.Sep(padding=10),
		    widget.KeyboardLayout(
			configured_keyboards=["us", "pt"], foreground=COLORS.white
		    ),
		    widget.Sep(padding=10),
		    widget.Sep(padding=10),
		    widget.Battery(
			format="{percent:2.0%} {hour:d}:{min:02d}",
			update_delay=5,
			foreground=COLORS.white,
			low_foreground=COLORS.red,
		    ),


   keys_external = []
   keys = keys + keys_external

    Bucks
   COLORS = {
       "black": "000000",
       "white": "eee1c6",
       "red": "e81e17",
       "blue": "0077c0",
       "yellow": "9A7500",
       "orange": "e3a32d",
       "gray": "7a6e53",
       "green": "00471b",
   }

    Nord Light
   COLORS = {
       "black": "2E3440",
       "white": "E5E9F0",
       "red": "ff6655",
       "blue": "60728C",
       "yellow": "9A7500",
       "orange": "AC4426",
       "gray": "dfdfdf",
       "green": "4F894C",
   }

   screens = [
       Screen(
	   top=bar.Bar(
	       [
		   widget.GroupBox(
		       highlight_method="block",
		       rounded=False,
		       this_current_screen_border=COLORS["red"],
		       inactive=COLORS["white"],
		       active=COLORS["white"],
		       urgent_text=COLORS["green"],
		       background=COLORS["blue"],
		       foreground=COLORS["gray"],
		       hide_unused=True,
		   ),
		   widget.WindowName(
		       fontsize=12,
		       foreground=COLORS["black"],
		       padding=10,
		       show_state=False,
		   ),
		   widget.Prompt(foreground=COLORS["black"], ignore_dups_history=True),
		   widget.Systray(padding=10, foreground=COLORS["black"]),
		   widget.Sep(padding=10),
		   widget.Volume(
		       update_interval=5,
		       foreground=COLORS["black"],
			emoji=True,
		       padding=10,
		   ),
		   widget.Sep(padding=10),
		   widget.ThermalSensor(foreground=COLORS["black"]),
		   widget.Sep(padding=10),
		    widget.CheckUpdates(
			colour_no_updates=COLORS["black"],
			colour_have_updates=COLORS["red"],
			custom_command="checkupdates",
		    ),
		    widget.Sep(padding=10),
		    widget.CapsNumLockIndicator(foreground=COLORS["black"]),
		    widget.Sep(padding=10),
		    widget.KeyboardLayout(
			configured_keyboards=["us", "pt"], foreground=COLORS["black"]
		    ),
		    widget.Sep(padding=10),
		   widget.Memory(foreground=COLORS["black"]),
		    widget.Sep(padding=10),
		    widget.Battery(
			format="{percent:2.0%} {hour:d}:{min:02d}",
			update_delay=5,
			foreground=COLORS["black"],
			low_foreground=COLORS["red"],
		    ),
		   widget.Sep(padding=10),
		   widget.Clock(format=" %a %d %b %I:%M %p ", foreground=COLORS["black"]),
		   widget.Wallpaper(
		       random_selection=True, foreground=COLORS["black"], label=False
		   ),
	       ],
	       size=25,
	       background=COLORS["white"],
	   ),
       ),
   ]


	for x in {
	    "emacs",
	    "st",
	    "nm-applet",
	    "dunst",
	    "unclutter",
	    f"feh --recursive --randomize --bg-fill {PICTURES}/wallpapers".split(),
	    "udiskie --use-udisks2".split(),
	}:
	    subprocess.run([x], check=False)
	subprocess.Popen(["nm-applet"])

   #+end_src
** Bashrc
   #+BEGIN_SRC shell-script

   # ------------------------------
   # SHELL - CLI SOFTWARE
   # ------------------------------

   a-projects-update ()
   {
       a-welcome " -- Git Projects Puller"

       # Update git projects in granchild folders
       # set arguments as default dir
       # DIR should parent folder:
       # - Parent
       #   + Child
       #     + GrandChild
       #     + GrandChild
       #   + Child
       #     + GrandChild
       #     + GrandChild
       #   + Child

       if [[ $# = 0 ]]; then
	   DIR="$HOME/Projects"
       else
	   DIR="$1"
       fi

       a-notify " -- DIR is now $DIR"
       a-cd "$DIR"

       a-notify " -- Enter Sub Folders"
       for directory in *; do
	   if [ -d "${directory}" ]; then
	       # Ignore personal projects (require git pass)
	       if [ "${directory}" == "personal"  ]; then
		   continue
	       else
		   cd "${directory}"
	       fi

	       a-notify " -- Updating Git Projects"
	       for directory in *; do
		   if [ -d "${directory}" ]; then
		       cd "${directory}"
		       git clean -fdx
		       git pull origin master

		       cd ..
		       # pwd
		   fi
	       done

	       cd ..
	       # pwd
	   fi
       done

       a-sucess "Done"
   }

   a-projects-send ()
   {
       a-welcome "Zipping Projects"

       a-notify " -- Remove zipped folder"
       a-folder-exist-do "$HOME/Downloads/zipped" "rm -rf"

       a-notify " -- Enter zipped folder"
       a-folder-not-exist-do "$HOME/Downloads/zipped" "mkdir" "yes"

       a-notify " -- Downloading Projects"
       zip=(https://github.com/python/cpython
	    https://github.com/pypa/pip
	    https://github.com/pypa/wheel
	    https://github.com/pypa/setuptools
	    https://github.com/django/django
	    https://github.com/palantir/python-language-server
	    https://github.com/PyCQA/pylint
	    https://github.com/sbcl/sbcl
	    https://github.com/quicklisp/quicklisp-bootstrap
	    https://gitlab.common-lisp.net/alexandria/alexandria/-/archive/master/alexandria-master.zip
	    httpsn://gitlab.common-lisp.net/asdf/asdf/-/archive/master/asdf-master.zip
	    https://github.com/atlas-engineer/next
	    https://github.com/stumpwm/stumpwm
	    https://github.com/stumpwm/stumpwm-contrib
	    https://github.com/emacs-lsp/lsp-mode
	    https://github.com/lxbarbosa/emacs-lisp-style-guide
	    https://github.com/joaotavora/eglot
	    https://github.com/emacs-mirror/emacs)

       for i in "${zip[@]}"; do wget "$i/archive/master.zip"; done

       # a-notify " -- Add suffix .zip to non .zip suffixed files"
       # for i in $(ls -r *.zip.*); do
       #     mv "$i" "$i.zip"
       # done

       echo " -- Zip files to Projects Titles (master.zip)"

       a-notify " -- Extracting zipped Projects"
       if [ -x "$(command -v unzip)" ]; then
	   # ignore folders
	   for file in $(ls -r); do
	       if [ -d "${file}" ]; then
		   continue
	       fi

	       unzip "$file"
	   done
       fi

       a-notify " -- Remove Projects Zipped files"
       for file in $(ls -r *.zip); do
	   if [ -d "${file}" ]; then
	       continue
	   fi

	   rm "${file}"
       done

       a-notify " -- Zip Projects folders"
       if [ -x "$(command -v zip)" ]; then
	   for file in $(ls -r); do
	       if [ -d "${file}" ]; then

		   zip -r "${file}.zip" "${file}"
	       fi
	   done
       fi

       a-notify " -- Remove Projects Folders"
       for file in $(ls -r); do
	   if [ -d "${file}" ]; then
	       rm -rf "${file}"
	   fi
       done

       a-notify " -- Send zipped projects to Mobile Phone"
       kdeconnect-cli -d $(kdeconnect-cli -l --id-only) --share \
		      "$HOME"/Downloads/zipped/*.zip
   }


   if [ ! -f "$XDG_CONFIG_HOME/dwm/dwm-systray-20190208-cb3f58a.diff" ]; then
       echo -e " -- Patching dwm."
       wget -c https://dwm.suckless.org/patches/systray/dwm-systray-20190208-cb3f58a.diff
       git apply dwm-systray-20190208-cb3f58a.diff
   fi

   # -- install
   ((echo -e " -- Make HOME Default Directories"
     mkdir -pv "$HOME"/{Documents,Pictures,.config/screen,.local/{bin,share/fonts}})

    DATA_FOLDER="/data"

    (echo -e " -- symbolic linking DATA_FOLDER directories to HOME"

     folders=(Books
	      Music
	      Videos)

     for i in "${folders[@]}"; do
	 ln -sfv "$DATA_FOLDER/$i" "$HOME/$i"
     done)

    (if [ ! -x "$(command -v emacs)" ]; then
	 echo -e "-- NULL -- GNU Emacs IS NOT INSTALLED. jeez."
     else
	 cd "$DATA_FOLDER/dots" || echo "There is no $_ folder"

	 echo -e " -- Tangling HOME files"
	 emacs --batch -l org dotfiles.org -f org-babel-tangle
     fi)
   )
   #+END_SRC

** Tmux
   #+begin_src conf
   set-option -g default-shell "/usr/bin/bash"

   24-bit color
   set -ga terminal-overrides ",xterm-termite:Tc"

   24 Colors
   set -g default-terminal "screen-256color-italic"
   set-option -ga terminal-overrides ",xterm-256color*:Tc:smso"

   mouse
   bind-key m set-option -g mouse on \; display 'Mouse: ON'
   bind-key M set-option -g mouse off \; display 'Mouse: OFF'

   #+end_src
** .xprofile
   #+begin_src shell-script ~/.xprofile :tangle-mode (identity #o755)
   #!/usr/bin/env bash

   source "$HOME/.profile"
   #+end_src
** autostart
   #+begin_src shell
   [ -x "$(command -v feh)" ] && feh --recursive --randomize --bg-max "$HOME/Pictures/wallpapers" &
   #+end_src
** Make
*** Template - Base
**** C
      #+BEGIN_SRC makefile
      CC = gcc
      CFLAGS = -Wall -Werror -std=c99
      LDFLAGS =
      SRC = src/main.c
      DIST = dist
      SHELL = sh
      RM = rm -rf

      default:
	      @echo "make install	-- fresh install of package"
	      @echo "make all		-- clean previous install, build and run program"
	      @echo "make clean		-- clean non-essential files"
	      @echo "make build		-- compile and prepare program to run"

      .PHONY: all
      all: clean build run

      .PHONY: clean
      clean:
	      $(RM) $(DIST)

      .PHONY: build
      build:
	      mkdir $(DIST)
	      $(CC) -o $(DIST)/transpose $(CFLAGS) $(SRC)

      .PHONY: run
      run:
	      ./dist/transpose
      #+END_SRC
**** C++
    #+BEGIN_SRC makefile
    CXX = g++
    CPPFLAGS =						# put pre-processor settings (-I, -D, etc) here
    CXXFLAGS = -Wall -std=c++14				# put compiler settings here
    LDFLAGS =					# put linker settings here

    build:
	    $(CXX) -o output $(CXXFLAGS) hello.cpp

    run:
	    ./output

    clean:
	    rm -rf output

    .PHONY: all
    all: clean build run
	    rm output
    #+END_SRC
**** Dotfiles make
     #+BEGIN_SRC shell-script
     # Global Variables
     SHELL = bash
     DATA_FOLDER= /data
     ALL= $(DATA_FOLDER)/all
     EMACS= emacs

     .PHONY: folders
     folders:
	     mkdir -pv ~/{Documents,Downloads,Pictures,.config/screen,.local/bin}

     .PHONY: symlink
     symlink:
	     ln -sfv $(DATA_FOLDER)/Books ~/Books
	     ln -sfv $(DATA_FOLDER)/Music ~/Music
	     ln -sfv $(DATA_FOLDER)/Videos ~/Videos

     .PHONY: tangle
     tangle:
	     $(EMACS) --batch -l org $(ALL)/dotfiles.org -f org-babel-tangle

     .PHONY: all
     all: folders symlink tangle

     #+END_SRC

** Suckless
*** st
    #+begin_src c
    /* See LICENSE file for copyright and license details. */

    /*
     ,* appearance
     ,*
     ,* font: see http://freedesktop.org/software/fontconfig/fontconfig-user.html
     ,*/
    static char *font = "JetBrains Mono:pixelsize=15:antialias=true:autohint=true";
    static int borderpx = 2;

    /*
     ,* What program is execed by st depends of these precedence rules:
     ,* 1: program passed with -e
     ,* 2: scroll and/or utmp
     ,* 3: SHELL environment variable
     ,* 4: value of shell in /etc/passwd
     ,* 5: value of shell in config.h
     ,*/
    static char *shell = "/bin/sh";
    char *utmp = NULL;
    /* scroll program: to enable use a string like "scroll" */
    char *scroll = NULL;
    char *stty_args = "stty raw pass8 nl -echo -iexten -cstopb 38400";

    /* identification sequence returned in DA and DECID */
    char *vtiden = "\033[?6c";

    /* Kerning / character bounding-box multipliers */
    static float cwscale = 1.0;
    static float chscale = 1.0;

    /*
     ,* word delimiter string
     ,*
     ,* More advanced example: L" `'\"()[]{}"
     ,*/
    wchar_t *worddelimiters = L" ";

    /* selection timeouts (in milliseconds) */
    static unsigned int doubleclicktimeout = 300;
    static unsigned int tripleclicktimeout = 600;

    /* alt screens */
    int allowaltscreen = 1;

    /* allow certain non-interactive (insecure) window operations such as:
       setting the clipboard text */
    int allowwindowops = 0;

    /*
     ,* draw latency range in ms - from new content/keypress/etc until drawing.
     ,* within this range, st draws when content stops arriving (idle). mostly it's
     ,* near minlatency, but it waits longer for slow updates to avoid partial draw.
     ,* low minlatency will tear/flicker more, as it can "detect" idle too early.
     ,*/
    static double minlatency = 8;
    static double maxlatency = 33;

    /*
     ,* blinking timeout (set to 0 to disable blinking) for the terminal blinking
     ,* attribute.
     ,*/
    static unsigned int blinktimeout = 800;

    /*
     ,* thickness of underline and bar cursors
     ,*/
    static unsigned int cursorthickness = 2;

    /*
     ,* bell volume. It must be a value between -100 and 100. Use 0 for disabling
     ,* it
     ,*/
    static int bellvolume = 0;

    /* default TERM value */
    char *termname = "st";

    /*
     ,* spaces per tab
     ,*
     ,* When you are changing this value, don't forget to adapt the »it« value in
     ,* the st.info and appropriately install the st.info in the environment where
     ,* you use this st version.
     ,*
     ,*	it#$tabspaces,
     ,*
     ,* Secondly make sure your kernel is not expanding tabs. When running `stty
     ,* -a` »tab0« should appear. You can tell the terminal to not expand tabs by
     ,*  running following command:
     ,*
     ,*	stty tabs
     ,*/
    unsigned int tabspaces = 8;

    /* Terminal colors (16 first used in escape sequence) */
    static const char *colorname[] = {
	    /* 8 normal colors */
	    "black",
	    "red3",
	    "green3",
	    "yellow3",
	    "blue2",
	    "magenta3",
	    "cyan3",
	    "gray90",

	    /* 8 bright colors */
	    "gray50",
	    "red",
	    "green",
	    "yellow",
	    "#5c5cff",
	    "magenta",
	    "cyan",
	    "white",

	    [255] = 0,

	    /* more colors can be added after 255 to use with DefaultXX */
	    "#cccccc",
	    "#555555",
    };


    /*
     ,* Default colors (colorname index)
     ,* foreground, background, cursor, reverse cursor
     ,*/
    unsigned int defaultfg = 7;
    unsigned int defaultbg = 0;
    static unsigned int defaultcs = 256;
    static unsigned int defaultrcs = 257;

    /*
     ,* Default shape of cursor
     ,* 2: Block ("█")
     ,* 4: Underline ("_")
     ,* 6: Bar ("|")
     ,* 7: Snowman ("☃")
     ,*/
    static unsigned int cursorshape = 7;

    /*
     ,* Default columns and rows numbers
     ,*/

    static unsigned int cols = 80;
    static unsigned int rows = 24;

    /*
     ,* Default colour and shape of the mouse cursor
     ,*/
    static unsigned int mouseshape = XC_xterm;
    static unsigned int mousefg = 7;
    static unsigned int mousebg = 0;

    /*
     ,* Color used to display font attributes when fontconfig selected a font which
     ,* doesn't match the ones requested.
     ,*/
    static unsigned int defaultattr = 11;

    /*
     ,* Force mouse select/shortcuts while mask is active (when MODE_MOUSE is set).
     ,* Note that if you want to use ShiftMask with selmasks, set this to an other
     ,* modifier, set to 0 to not use it.
     ,*/
    static uint forcemousemod = ShiftMask;

    /*
     ,* Internal mouse shortcuts.
     ,* Beware that overloading Button1 will disable the selection.
     ,*/
    static MouseShortcut mshortcuts[] = {
	    /* mask                 button   function        argument       release */
	    { XK_ANY_MOD,           Button2, selpaste,       {.i = 0},      1 },
	    { ShiftMask,            Button4, ttysend,        {.s = "\033[5;2~"} },
	    { XK_ANY_MOD,           Button4, ttysend,        {.s = "\031"} },
	    { ShiftMask,            Button5, ttysend,        {.s = "\033[6;2~"} },
	    { XK_ANY_MOD,           Button5, ttysend,        {.s = "\005"} },
    };

    /* Internal keyboard shortcuts. */
    #define MODKEY Mod1Mask
    #define TERMMOD (ControlMask|ShiftMask)

    static Shortcut shortcuts[] = {
	    /* mask                 keysym          function        argument */
	    { XK_ANY_MOD,           XK_Break,       sendbreak,      {.i =  0} },
	    { ControlMask,          XK_Print,       toggleprinter,  {.i =  0} },
	    { ShiftMask,            XK_Print,       printscreen,    {.i =  0} },
	    { XK_ANY_MOD,           XK_Print,       printsel,       {.i =  0} },
	    { TERMMOD,              XK_Prior,       zoom,           {.f = +1} },
	    { TERMMOD,              XK_Next,        zoom,           {.f = -1} },
	    { TERMMOD,              XK_Home,        zoomreset,      {.f =  0} },
	    { TERMMOD,              XK_C,           clipcopy,       {.i =  0} },
	    { TERMMOD,              XK_V,           clippaste,      {.i =  0} },
	    { TERMMOD,              XK_Y,           selpaste,       {.i =  0} },
	    { ShiftMask,            XK_Insert,      selpaste,       {.i =  0} },
	    { TERMMOD,              XK_Num_Lock,    numlock,        {.i =  0} },
    };

    /*
     ,* Special keys (change & recompile st.info accordingly)
     ,*
     ,* Mask value:
     ,* * Use XK_ANY_MOD to match the key no matter modifiers state
     ,* * Use XK_NO_MOD to match the key alone (no modifiers)
     ,* appkey value:
     ,* * 0: no value
     ,* * > 0: keypad application mode enabled
     ,* *   = 2: term.numlock = 1
     ,* * < 0: keypad application mode disabled
     ,* appcursor value:
     ,* * 0: no value
     ,* * > 0: cursor application mode enabled
     ,* * < 0: cursor application mode disabled
     ,*
     ,* Be careful with the order of the definitions because st searches in
     ,* this table sequentially, so any XK_ANY_MOD must be in the last
     ,* position for a key.
     ,*/

    /*
     ,* If you want keys other than the X11 function keys (0xFD00 - 0xFFFF)
     ,* to be mapped below, add them to this array.
     ,*/
    static KeySym mappedkeys[] = { -1 };

    /*
     ,* State bits to ignore when matching key or button events.  By default,
     ,* numlock (Mod2Mask) and keyboard layout (XK_SWITCH_MOD) are ignored.
     ,*/
    static uint ignoremod = Mod2Mask|XK_SWITCH_MOD;

    /*
     ,* This is the huge key array which defines all compatibility to the Linux
     ,* world. Please decide about changes wisely.
     ,*/
    static Key key[] = {
	    /* keysym           mask            string      appkey appcursor */
	    { XK_KP_Home,       ShiftMask,      "\033[2J",       0,   -1},
	    { XK_KP_Home,       ShiftMask,      "\033[1;2H",     0,   +1},
	    { XK_KP_Home,       XK_ANY_MOD,     "\033[H",        0,   -1},
	    { XK_KP_Home,       XK_ANY_MOD,     "\033[1~",       0,   +1},
	    { XK_KP_Up,         XK_ANY_MOD,     "\033Ox",       +1,    0},
	    { XK_KP_Up,         XK_ANY_MOD,     "\033[A",        0,   -1},
	    { XK_KP_Up,         XK_ANY_MOD,     "\033OA",        0,   +1},
	    { XK_KP_Down,       XK_ANY_MOD,     "\033Or",       +1,    0},
	    { XK_KP_Down,       XK_ANY_MOD,     "\033[B",        0,   -1},
	    { XK_KP_Down,       XK_ANY_MOD,     "\033OB",        0,   +1},
	    { XK_KP_Left,       XK_ANY_MOD,     "\033Ot",       +1,    0},
	    { XK_KP_Left,       XK_ANY_MOD,     "\033[D",        0,   -1},
	    { XK_KP_Left,       XK_ANY_MOD,     "\033OD",        0,   +1},
	    { XK_KP_Right,      XK_ANY_MOD,     "\033Ov",       +1,    0},
	    { XK_KP_Right,      XK_ANY_MOD,     "\033[C",        0,   -1},
	    { XK_KP_Right,      XK_ANY_MOD,     "\033OC",        0,   +1},
	    { XK_KP_Prior,      ShiftMask,      "\033[5;2~",     0,    0},
	    { XK_KP_Prior,      XK_ANY_MOD,     "\033[5~",       0,    0},
	    { XK_KP_Begin,      XK_ANY_MOD,     "\033[E",        0,    0},
	    { XK_KP_End,        ControlMask,    "\033[J",       -1,    0},
	    { XK_KP_End,        ControlMask,    "\033[1;5F",    +1,    0},
	    { XK_KP_End,        ShiftMask,      "\033[K",       -1,    0},
	    { XK_KP_End,        ShiftMask,      "\033[1;2F",    +1,    0},
	    { XK_KP_End,        XK_ANY_MOD,     "\033[4~",       0,    0},
	    { XK_KP_Next,       ShiftMask,      "\033[6;2~",     0,    0},
	    { XK_KP_Next,       XK_ANY_MOD,     "\033[6~",       0,    0},
	    { XK_KP_Insert,     ShiftMask,      "\033[2;2~",    +1,    0},
	    { XK_KP_Insert,     ShiftMask,      "\033[4l",      -1,    0},
	    { XK_KP_Insert,     ControlMask,    "\033[L",       -1,    0},
	    { XK_KP_Insert,     ControlMask,    "\033[2;5~",    +1,    0},
	    { XK_KP_Insert,     XK_ANY_MOD,     "\033[4h",      -1,    0},
	    { XK_KP_Insert,     XK_ANY_MOD,     "\033[2~",      +1,    0},
	    { XK_KP_Delete,     ControlMask,    "\033[M",       -1,    0},
	    { XK_KP_Delete,     ControlMask,    "\033[3;5~",    +1,    0},
	    { XK_KP_Delete,     ShiftMask,      "\033[2K",      -1,    0},
	    { XK_KP_Delete,     ShiftMask,      "\033[3;2~",    +1,    0},
	    { XK_KP_Delete,     XK_ANY_MOD,     "\033[P",       -1,    0},
	    { XK_KP_Delete,     XK_ANY_MOD,     "\033[3~",      +1,    0},
	    { XK_KP_Multiply,   XK_ANY_MOD,     "\033Oj",       +2,    0},
	    { XK_KP_Add,        XK_ANY_MOD,     "\033Ok",       +2,    0},
	    { XK_KP_Enter,      XK_ANY_MOD,     "\033OM",       +2,    0},
	    { XK_KP_Enter,      XK_ANY_MOD,     "\r",           -1,    0},
	    { XK_KP_Subtract,   XK_ANY_MOD,     "\033Om",       +2,    0},
	    { XK_KP_Decimal,    XK_ANY_MOD,     "\033On",       +2,    0},
	    { XK_KP_Divide,     XK_ANY_MOD,     "\033Oo",       +2,    0},
	    { XK_KP_0,          XK_ANY_MOD,     "\033Op",       +2,    0},
	    { XK_KP_1,          XK_ANY_MOD,     "\033Oq",       +2,    0},
	    { XK_KP_2,          XK_ANY_MOD,     "\033Or",       +2,    0},
	    { XK_KP_3,          XK_ANY_MOD,     "\033Os",       +2,    0},
	    { XK_KP_4,          XK_ANY_MOD,     "\033Ot",       +2,    0},
	    { XK_KP_5,          XK_ANY_MOD,     "\033Ou",       +2,    0},
	    { XK_KP_6,          XK_ANY_MOD,     "\033Ov",       +2,    0},
	    { XK_KP_7,          XK_ANY_MOD,     "\033Ow",       +2,    0},
	    { XK_KP_8,          XK_ANY_MOD,     "\033Ox",       +2,    0},
	    { XK_KP_9,          XK_ANY_MOD,     "\033Oy",       +2,    0},
	    { XK_Up,            ShiftMask,      "\033[1;2A",     0,    0},
	    { XK_Up,            Mod1Mask,       "\033[1;3A",     0,    0},
	    { XK_Up,         ShiftMask|Mod1Mask,"\033[1;4A",     0,    0},
	    { XK_Up,            ControlMask,    "\033[1;5A",     0,    0},
	    { XK_Up,      ShiftMask|ControlMask,"\033[1;6A",     0,    0},
	    { XK_Up,       ControlMask|Mod1Mask,"\033[1;7A",     0,    0},
	    { XK_Up,ShiftMask|ControlMask|Mod1Mask,"\033[1;8A",  0,    0},
	    { XK_Up,            XK_ANY_MOD,     "\033[A",        0,   -1},
	    { XK_Up,            XK_ANY_MOD,     "\033OA",        0,   +1},
	    { XK_Down,          ShiftMask,      "\033[1;2B",     0,    0},
	    { XK_Down,          Mod1Mask,       "\033[1;3B",     0,    0},
	    { XK_Down,       ShiftMask|Mod1Mask,"\033[1;4B",     0,    0},
	    { XK_Down,          ControlMask,    "\033[1;5B",     0,    0},
	    { XK_Down,    ShiftMask|ControlMask,"\033[1;6B",     0,    0},
	    { XK_Down,     ControlMask|Mod1Mask,"\033[1;7B",     0,    0},
	    { XK_Down,ShiftMask|ControlMask|Mod1Mask,"\033[1;8B",0,    0},
	    { XK_Down,          XK_ANY_MOD,     "\033[B",        0,   -1},
	    { XK_Down,          XK_ANY_MOD,     "\033OB",        0,   +1},
	    { XK_Left,          ShiftMask,      "\033[1;2D",     0,    0},
	    { XK_Left,          Mod1Mask,       "\033[1;3D",     0,    0},
	    { XK_Left,       ShiftMask|Mod1Mask,"\033[1;4D",     0,    0},
	    { XK_Left,          ControlMask,    "\033[1;5D",     0,    0},
	    { XK_Left,    ShiftMask|ControlMask,"\033[1;6D",     0,    0},
	    { XK_Left,     ControlMask|Mod1Mask,"\033[1;7D",     0,    0},
	    { XK_Left,ShiftMask|ControlMask|Mod1Mask,"\033[1;8D",0,    0},
	    { XK_Left,          XK_ANY_MOD,     "\033[D",        0,   -1},
	    { XK_Left,          XK_ANY_MOD,     "\033OD",        0,   +1},
	    { XK_Right,         ShiftMask,      "\033[1;2C",     0,    0},
	    { XK_Right,         Mod1Mask,       "\033[1;3C",     0,    0},
	    { XK_Right,      ShiftMask|Mod1Mask,"\033[1;4C",     0,    0},
	    { XK_Right,         ControlMask,    "\033[1;5C",     0,    0},
	    { XK_Right,   ShiftMask|ControlMask,"\033[1;6C",     0,    0},
	    { XK_Right,    ControlMask|Mod1Mask,"\033[1;7C",     0,    0},
	    { XK_Right,ShiftMask|ControlMask|Mod1Mask,"\033[1;8C",0,   0},
	    { XK_Right,         XK_ANY_MOD,     "\033[C",        0,   -1},
	    { XK_Right,         XK_ANY_MOD,     "\033OC",        0,   +1},
	    { XK_ISO_Left_Tab,  ShiftMask,      "\033[Z",        0,    0},
	    { XK_Return,        Mod1Mask,       "\033\r",        0,    0},
	    { XK_Return,        XK_ANY_MOD,     "\r",            0,    0},
	    { XK_Insert,        ShiftMask,      "\033[4l",      -1,    0},
	    { XK_Insert,        ShiftMask,      "\033[2;2~",    +1,    0},
	    { XK_Insert,        ControlMask,    "\033[L",       -1,    0},
	    { XK_Insert,        ControlMask,    "\033[2;5~",    +1,    0},
	    { XK_Insert,        XK_ANY_MOD,     "\033[4h",      -1,    0},
	    { XK_Insert,        XK_ANY_MOD,     "\033[2~",      +1,    0},
	    { XK_Delete,        ControlMask,    "\033[M",       -1,    0},
	    { XK_Delete,        ControlMask,    "\033[3;5~",    +1,    0},
	    { XK_Delete,        ShiftMask,      "\033[2K",      -1,    0},
	    { XK_Delete,        ShiftMask,      "\033[3;2~",    +1,    0},
	    { XK_Delete,        XK_ANY_MOD,     "\033[P",       -1,    0},
	    { XK_Delete,        XK_ANY_MOD,     "\033[3~",      +1,    0},
	    { XK_BackSpace,     XK_NO_MOD,      "\177",          0,    0},
	    { XK_BackSpace,     Mod1Mask,       "\033\177",      0,    0},
	    { XK_Home,          ShiftMask,      "\033[2J",       0,   -1},
	    { XK_Home,          ShiftMask,      "\033[1;2H",     0,   +1},
	    { XK_Home,          XK_ANY_MOD,     "\033[H",        0,   -1},
	    { XK_Home,          XK_ANY_MOD,     "\033[1~",       0,   +1},
	    { XK_End,           ControlMask,    "\033[J",       -1,    0},
	    { XK_End,           ControlMask,    "\033[1;5F",    +1,    0},
	    { XK_End,           ShiftMask,      "\033[K",       -1,    0},
	    { XK_End,           ShiftMask,      "\033[1;2F",    +1,    0},
	    { XK_End,           XK_ANY_MOD,     "\033[4~",       0,    0},
	    { XK_Prior,         ControlMask,    "\033[5;5~",     0,    0},
	    { XK_Prior,         ShiftMask,      "\033[5;2~",     0,    0},
	    { XK_Prior,         XK_ANY_MOD,     "\033[5~",       0,    0},
	    { XK_Next,          ControlMask,    "\033[6;5~",     0,    0},
	    { XK_Next,          ShiftMask,      "\033[6;2~",     0,    0},
	    { XK_Next,          XK_ANY_MOD,     "\033[6~",       0,    0},
	    { XK_F1,            XK_NO_MOD,      "\033OP" ,       0,    0},
	    { XK_F1, /* F13 */  ShiftMask,      "\033[1;2P",     0,    0},
	    { XK_F1, /* F25 */  ControlMask,    "\033[1;5P",     0,    0},
	    { XK_F1, /* F37 */  Mod4Mask,       "\033[1;6P",     0,    0},
	    { XK_F1, /* F49 */  Mod1Mask,       "\033[1;3P",     0,    0},
	    { XK_F1, /* F61 */  Mod3Mask,       "\033[1;4P",     0,    0},
	    { XK_F2,            XK_NO_MOD,      "\033OQ" ,       0,    0},
	    { XK_F2, /* F14 */  ShiftMask,      "\033[1;2Q",     0,    0},
	    { XK_F2, /* F26 */  ControlMask,    "\033[1;5Q",     0,    0},
	    { XK_F2, /* F38 */  Mod4Mask,       "\033[1;6Q",     0,    0},
	    { XK_F2, /* F50 */  Mod1Mask,       "\033[1;3Q",     0,    0},
	    { XK_F2, /* F62 */  Mod3Mask,       "\033[1;4Q",     0,    0},
	    { XK_F3,            XK_NO_MOD,      "\033OR" ,       0,    0},
	    { XK_F3, /* F15 */  ShiftMask,      "\033[1;2R",     0,    0},
	    { XK_F3, /* F27 */  ControlMask,    "\033[1;5R",     0,    0},
	    { XK_F3, /* F39 */  Mod4Mask,       "\033[1;6R",     0,    0},
	    { XK_F3, /* F51 */  Mod1Mask,       "\033[1;3R",     0,    0},
	    { XK_F3, /* F63 */  Mod3Mask,       "\033[1;4R",     0,    0},
	    { XK_F4,            XK_NO_MOD,      "\033OS" ,       0,    0},
	    { XK_F4, /* F16 */  ShiftMask,      "\033[1;2S",     0,    0},
	    { XK_F4, /* F28 */  ControlMask,    "\033[1;5S",     0,    0},
	    { XK_F4, /* F40 */  Mod4Mask,       "\033[1;6S",     0,    0},
	    { XK_F4, /* F52 */  Mod1Mask,       "\033[1;3S",     0,    0},
	    { XK_F5,            XK_NO_MOD,      "\033[15~",      0,    0},
	    { XK_F5, /* F17 */  ShiftMask,      "\033[15;2~",    0,    0},
	    { XK_F5, /* F29 */  ControlMask,    "\033[15;5~",    0,    0},
	    { XK_F5, /* F41 */  Mod4Mask,       "\033[15;6~",    0,    0},
	    { XK_F5, /* F53 */  Mod1Mask,       "\033[15;3~",    0,    0},
	    { XK_F6,            XK_NO_MOD,      "\033[17~",      0,    0},
	    { XK_F6, /* F18 */  ShiftMask,      "\033[17;2~",    0,    0},
	    { XK_F6, /* F30 */  ControlMask,    "\033[17;5~",    0,    0},
	    { XK_F6, /* F42 */  Mod4Mask,       "\033[17;6~",    0,    0},
	    { XK_F6, /* F54 */  Mod1Mask,       "\033[17;3~",    0,    0},
	    { XK_F7,            XK_NO_MOD,      "\033[18~",      0,    0},
	    { XK_F7, /* F19 */  ShiftMask,      "\033[18;2~",    0,    0},
	    { XK_F7, /* F31 */  ControlMask,    "\033[18;5~",    0,    0},
	    { XK_F7, /* F43 */  Mod4Mask,       "\033[18;6~",    0,    0},
	    { XK_F7, /* F55 */  Mod1Mask,       "\033[18;3~",    0,    0},
	    { XK_F8,            XK_NO_MOD,      "\033[19~",      0,    0},
	    { XK_F8, /* F20 */  ShiftMask,      "\033[19;2~",    0,    0},
	    { XK_F8, /* F32 */  ControlMask,    "\033[19;5~",    0,    0},
	    { XK_F8, /* F44 */  Mod4Mask,       "\033[19;6~",    0,    0},
	    { XK_F8, /* F56 */  Mod1Mask,       "\033[19;3~",    0,    0},
	    { XK_F9,            XK_NO_MOD,      "\033[20~",      0,    0},
	    { XK_F9, /* F21 */  ShiftMask,      "\033[20;2~",    0,    0},
	    { XK_F9, /* F33 */  ControlMask,    "\033[20;5~",    0,    0},
	    { XK_F9, /* F45 */  Mod4Mask,       "\033[20;6~",    0,    0},
	    { XK_F9, /* F57 */  Mod1Mask,       "\033[20;3~",    0,    0},
	    { XK_F10,           XK_NO_MOD,      "\033[21~",      0,    0},
	    { XK_F10, /* F22 */ ShiftMask,      "\033[21;2~",    0,    0},
	    { XK_F10, /* F34 */ ControlMask,    "\033[21;5~",    0,    0},
	    { XK_F10, /* F46 */ Mod4Mask,       "\033[21;6~",    0,    0},
	    { XK_F10, /* F58 */ Mod1Mask,       "\033[21;3~",    0,    0},
	    { XK_F11,           XK_NO_MOD,      "\033[23~",      0,    0},
	    { XK_F11, /* F23 */ ShiftMask,      "\033[23;2~",    0,    0},
	    { XK_F11, /* F35 */ ControlMask,    "\033[23;5~",    0,    0},
	    { XK_F11, /* F47 */ Mod4Mask,       "\033[23;6~",    0,    0},
	    { XK_F11, /* F59 */ Mod1Mask,       "\033[23;3~",    0,    0},
	    { XK_F12,           XK_NO_MOD,      "\033[24~",      0,    0},
	    { XK_F12, /* F24 */ ShiftMask,      "\033[24;2~",    0,    0},
	    { XK_F12, /* F36 */ ControlMask,    "\033[24;5~",    0,    0},
	    { XK_F12, /* F48 */ Mod4Mask,       "\033[24;6~",    0,    0},
	    { XK_F12, /* F60 */ Mod1Mask,       "\033[24;3~",    0,    0},
	    { XK_F13,           XK_NO_MOD,      "\033[1;2P",     0,    0},
	    { XK_F14,           XK_NO_MOD,      "\033[1;2Q",     0,    0},
	    { XK_F15,           XK_NO_MOD,      "\033[1;2R",     0,    0},
	    { XK_F16,           XK_NO_MOD,      "\033[1;2S",     0,    0},
	    { XK_F17,           XK_NO_MOD,      "\033[15;2~",    0,    0},
	    { XK_F18,           XK_NO_MOD,      "\033[17;2~",    0,    0},
	    { XK_F19,           XK_NO_MOD,      "\033[18;2~",    0,    0},
	    { XK_F20,           XK_NO_MOD,      "\033[19;2~",    0,    0},
	    { XK_F21,           XK_NO_MOD,      "\033[20;2~",    0,    0},
	    { XK_F22,           XK_NO_MOD,      "\033[21;2~",    0,    0},
	    { XK_F23,           XK_NO_MOD,      "\033[23;2~",    0,    0},
	    { XK_F24,           XK_NO_MOD,      "\033[24;2~",    0,    0},
	    { XK_F25,           XK_NO_MOD,      "\033[1;5P",     0,    0},
	    { XK_F26,           XK_NO_MOD,      "\033[1;5Q",     0,    0},
	    { XK_F27,           XK_NO_MOD,      "\033[1;5R",     0,    0},
	    { XK_F28,           XK_NO_MOD,      "\033[1;5S",     0,    0},
	    { XK_F29,           XK_NO_MOD,      "\033[15;5~",    0,    0},
	    { XK_F30,           XK_NO_MOD,      "\033[17;5~",    0,    0},
	    { XK_F31,           XK_NO_MOD,      "\033[18;5~",    0,    0},
	    { XK_F32,           XK_NO_MOD,      "\033[19;5~",    0,    0},
	    { XK_F33,           XK_NO_MOD,      "\033[20;5~",    0,    0},
	    { XK_F34,           XK_NO_MOD,      "\033[21;5~",    0,    0},
	    { XK_F35,           XK_NO_MOD,      "\033[23;5~",    0,    0},
    };

    /*
     ,* Selection types' masks.
     ,* Use the same masks as usual.
     ,* Button1Mask is always unset, to make masks match between ButtonPress.
     ,* ButtonRelease and MotionNotify.
     ,* If no match is found, regular selection is used.
     ,*/
    static uint selmasks[] = {
	    [SEL_RECTANGULAR] = Mod1Mask,
    };

    /*
     ,* Printable characters in ASCII, used to estimate the advance width
     ,* of single wide characters.
     ,*/
    static char ascii_printable[] =
	    " !\"#$%&'()*+,-./0123456789:;<=>?"
	    "@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_"
	    "`abcdefghijklmnopqrstuvwxyz{|}~";
    #+end_src
*** dwm
    #+begin_src c
    /* See LICENSE file for copyright and license details. */

    /* appearance */
    static const unsigned int borderpx  = 0;        /* border pixel of windows */
    static const unsigned int snap      = 32;       /* snap pixel */
    static const unsigned int systraypinning = 0;   /* 0: sloppy systray follows selected monitor, >0: pin systray to monitor X */
    static const unsigned int systrayspacing = 2;   /* systray spacing */
    static const int systraypinningfailfirst = 1;   /* 1: if pinning fails, display systray on the first monitor, False: display systray on the last monitor*/
    static const int showsystray        = 1;     /* 0 means no systray */
    static const int showbar            = 1;        /* 0 means no bar */
    static const int topbar             = 0;        /* 0 means bottom bar */
    static const char *fonts[]          = { "JetBrains Mono:size=8" };
    static const char dmenufont[]       = "JetBrains Mono:size=8";
    static const char col_gray1[]       = "#172030";
    static const char col_gray2[]       = "#eabe9a";
    static const char col_gray3[]       = "#c6797e";
    static const char col_gray4[]       = "#E8E9EB";
    static const char col_cyan[]        = "#151D2B";
    static const char *colors[][3]      = {
      /*               fg         bg         border   */
      [SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
      [SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
    };


    /* tagging */
    static const char *tags[] = { "mx", "eija", "sistema", "midia", "www" };

    static const Rule rules[] = {
      /* xprop(1):
       ,*	WM_CLASS(STRING) = instance, class
       ,*	WM_NAME(STRING) = title
       ,*/
      /* class      instance    title       tags mask     isfloating   monitor */
      { "Emacs",                NULL,       NULL,       1 <<  0,      0,           -1 },
      { "Code",                 NULL,       NULL,       1 <<  1,      0,           -1 },
      { "st",                   NULL,       NULL,       1 <<  2,      0,           -1 },
      { "mpv",                  NULL,       NULL,       1 <<  3,      0,           -1 },
      { "vlc",                  NULL,       NULL,       1 <<  3,      0,           -1 },
      { "QEMU",                 NULL,       NULL,       1 <<  3,      0,           -1 },
      { "OpenGl",               NULL,       NULL,       1 <<  3,      0,           -1 },
      { "Wine",                 NULL,       NULL,       1 <<  3,      0,           -1 },
      { "Steam",                NULL,       NULL,       1 <<  3,      0,           -1 },
      { "Firefox",              NULL,       NULL,       1 <<  4,      0,           -1 },
      { "Chromium",             NULL,       NULL,       1 <<  4,      0,           -1 },
    };

    /* layout(s) */
    static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
    static const int nmaster     = 1;    /* number of clients in master area */
    static const int resizehints = 0;    /* 1 means respect size hints in tiled resizals */

    static const Layout layouts[] = {
      /* symbol     arrange function */
      { "[]=",      tile },    /* first entry is default */
      { "><>",      NULL },    /* no layout function means floating behavior */
      { "[M]",      monocle },
    };

    /* key definitions */
    #define XF86MonBrightnessDown  0x1008ff03
    #define XF86MonBrightnessUp    0x1008ff02
    #define XF86AudioMute	       0x1008ff12
    #define XF86AudioLowerVolume   0x1008ff11
    #define XF86AudioRaiseVolume   0x1008ff13
    #define XF86AudioMicMute       0x1008FFB2
    #define MODKEY Mod4Mask
    #define AltMask Mod1Mask
    #define TAGKEYS(KEY,TAG)                                                \
      { MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
      { MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
      { MODKEY|ShiftMask,             KEY,      tag,            {.ui = 1 << TAG} }, \
      { MODKEY|ControlMask|ShiftMask, KEY,      toggletag,      {.ui = 1 << TAG} },

    /* helper for spawning shell commands in the pre dwm-5.0 fashion */
    #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }

    /* commands */
    static char dmenumon              [2] = "0"; /* component of dmenucmd, manipulated in spawn() */
    static const char *dmenucmd       [] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
    static const char *termcmd        [] = { "st", NULL };
    static const char *lockercmd      [] = { "slock", NULL };
    static const char *editorcmd      [] = { "emacs", NULL };
    static const char *volupcmd       [] = { "volume-cima", NULL };
    static const char *voldowncmd     [] = { "volume-baixo", NULL };
    static const char *volmutecmd     [] = { "volume-alternar", NULL };
    static const char *pausecmd       [] = { "mpc", "toggle", NULL };
    static const char *videocmd       [] = { "cero", "media", "getmedia", NULL };
    static const char *audiocmd       [] = { "cero", "media", "getmedia", "vorbis",  NULL };
    static const char *playcmd        [] = { "tocar", NULL };
    static const char *shotcmd        [] = { "tirador", NULL };

    static Key keys[] = {
      /* modifier             key                        function        argument */
      { MODKEY|AltMask,       XK_p,                      spawn,          {.v = dmenucmd } },
      { MODKEY,               XK_Return,                 spawn,          {.v = termcmd } },
      { MODKEY|AltMask,       XK_b,                      togglebar,      {0} },
      { MODKEY,               XK_s,                      focusstack,     {.i = +1 } },
      { MODKEY,               XK_w,                      focusstack,     {.i = -1 } },
      { MODKEY|AltMask,       XK_i,                      incnmaster,     {.i = +1 } },
      { MODKEY|AltMask,       XK_d,                      incnmaster,     {.i = -1 } },
      { MODKEY|AltMask,       XK_h,                      setmfact,       {.f = -0.05} },
      { MODKEY|AltMask,       XK_l,                      setmfact,       {.f = +0.05} },
      { MODKEY|AltMask,       XK_Return,                 zoom,           {0} },
      { MODKEY,               XK_Tab,                    view,           {0} },
      { MODKEY|AltMask,       XK_c,                      killclient,     {0} },
      { MODKEY|AltMask,       XK_t,                      setlayout,      {.v = &layouts[0]} },
      { MODKEY|AltMask,       XK_f,                      setlayout,      {.v = &layouts[1]} },
      { MODKEY|AltMask,       XK_m,                      setlayout,      {.v = &layouts[2]} },
      { MODKEY|AltMask,       XK_space,                  setlayout,      {0} },
      { MODKEY|ShiftMask,     XK_space,                  togglefloating, {0} },
      { MODKEY|AltMask,       XK_0,                      view,           {.ui = ~0 } },
      { MODKEY|ShiftMask,     XK_0,                      tag,            {.ui = ~0 } },
      { MODKEY|AltMask,       XK_comma,                  focusmon,       {.i = -1 } },
      { MODKEY|AltMask,       XK_period,                 focusmon,       {.i = +1 } },
      { MODKEY|ShiftMask,     XK_comma,                  tagmon,         {.i = -1 } },
      { MODKEY|ShiftMask,     XK_period,                 tagmon,         {.i = +1 } },
      { MODKEY|AltMask,       XK_q,                      quit,          {0} },
      TAGKEYS(                XK_1,                                      0)
      TAGKEYS(                XK_2,                                      1)
      TAGKEYS(                XK_3,                                      2)
      TAGKEYS(                XK_4,                                      3)
      TAGKEYS(                XK_5,                                      4)
      TAGKEYS(                XK_6,                                      5)
      { 0,                    XF86AudioMute,             spawn,         {.v = volmutecmd} }, // CUSTOM KEYS
      { 0,                    XF86AudioRaiseVolume,      spawn,         {.v = volupcmd}   },
      { 0,                    XF86AudioLowerVolume,      spawn,         {.v = voldowncmd} },
      { MODKEY|ShiftMask,     XK_e,                      spawn,         {.v = volmutecmd} },
      { MODKEY|ShiftMask,     XK_w,                      spawn,         {.v = volupcmd}   },
      { MODKEY|ShiftMask,     XK_s,                      spawn,         {.v = voldowncmd} },
      { 0,                    XK_Print,                  spawn,         {.v = shotcmd}    },
      { MODKEY,               XK_l,                      spawn,         {.v = lockercmd}  },
      { MODKEY,               XK_e,                      spawn,         {.v = editorcmd}  },
      { MODKEY,               XK_x,                      spawn,         {.v = dmenucmd}  },
      { MODKEY|ShiftMask,     XK_p,                      spawn,         {.v = playcmd}    },
      { MODKEY|ShiftMask,     XK_a,                      spawn,         {.v = audiocmd}   },
      { MODKEY|ShiftMask,     XK_v,                      spawn,         {.v = videocmd}   },
      { MODKEY,               XK_space,                  spawn,         {.v = pausecmd}   },
    };

    /* button definitions */ /* click can be ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle, ClkClientWin, or ClkRootWin */
    static Button buttons[] = {
      /* click                event mask      button          function        argument */
      { ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
      { ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
      { ClkWinTitle,          0,              Button2,        zoom,           {0} },
      { ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
      { ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
      { ClkClientWin,         MODKEY,         Button2,        togglefloating, {0} },
      { ClkClientWin,         MODKEY,         Button3,        resizemouse,    {0} },
      { ClkTagBar,            0,              Button1,        view,           {0} },
      { ClkTagBar,            0,              Button3,        toggleview,     {0} },
      { ClkTagBar,            MODKEY,         Button1,        tag,            {0} },
      { ClkTagBar,            MODKEY,         Button3,        toggletag,      {0} },
    };
    #+end_src
*** dwm-bar
***
    #+begin_src shell-script




    #+end_src
*** Dmenu
**** dmenu - record it
     #+BEGIN_SRC shell-script
     #!/bin/sh

     # Usage:
     # `record`: Ask for recording type via dmenu
     # `record screencast`: Record both audio and screen
     # `record video`: Record only screen
     # `record audio`: Record only audio
     # `record kill`: Kill existing recording
     #
     # If there is already a running instance, user will be prompted to end it.

     updateicon() { \
		    echo "$1" > ~/.recordingicon
		    pkill -RTMIN+9 i3blocks
     }

     killrecording() {
	 recpid="$(cat ~/.recordingpid)"
	 # kill with SIGTERM, allowing finishing touches.
	 kill -15 "$recpid"
	 rm -f ~/.recordingpid
	 updateicon ""
	 pkill -RTMIN+9 i3blocks
	 # even after SIGTERM, ffmpeg may still run, so SIGKILL it.
	 sleep 3
	 kill -9 "$recpid"
	 exit
     }

     screencast() { \
		    ffmpeg -y \
			   -f x11grab \
			   -framerate 60 \
			   -s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
			   -i :0.0 \
			   -f alsa -i default \
			   -r 30 \
			   -c:v libx264rgb -crf 0 -preset ultrafast -c:a flac \
			   "$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mkv" &
		    echo $! > ~/.recordingpid
		    updateicon "⏺️🎙️"
     }

     video() { ffmpeg \
		   -f x11grab \
		   -s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
		   -i :0.0 \
		   -c:v libx264 -qp 0 -r 30 \
		   "$HOME/video-$(date '+%y%m%d-%H%M-%S').mkv" &
	       echo $! > ~/.recordingpid
	       updateicon "⏺️"
	     }

     webcamhidef() { ffmpeg \
			 -f v412 \
			 -i /dev/video0 \
			 -video_size 1920x1080 \
			 "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
		     echo $! > ~/.recordingpid
		     updateicon "🎥"
		   }

     webcam() { ffmpeg \
		    -f v412 \
		    -i /dev/video0 \
		    -video_size 640x480 \
		    "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
		echo $! > ~/.recordingpid
		updateicon "🎥"
	      }


     audio() { \
	       ffmpeg \
		   -f alsa -i default \
		   -c:a flac \
		   "$HOME/audio-$(date '+%y%m%d-%H%M-%S').flac" &
	       echo $! > ~/.recordingpid
	       updateicon "🎙️"
     }

     askrecording() { \
		      choice=$(printf "screencast\\nvideo\\naudio\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select recording style:")
		      case "$choice" in
			  screencast) screencast;;
			  audio) audio;;
			  video) video;;
			  webcam) webcamrecord;;
			  "webcam (hi-def)") webcamrecord;;
		      esac
     }

     asktoend() { \
		  response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?") &&
		      [ "$response" = "Yes" ] &&  killrecording
     }


     case "$1" in
	 screencast) screencast;;
	 audio) audio;;
	 video) video;;
	 kill) killrecording;;
	 ,*) ([ -f ~/.recordingpid ] && asktoend && exit) || askrecording;;
     esac


     #+END_SRC
**** dmenu - mount/unmount drives
     #+BEGIN_SRC shell-script

     #!/bin/sh
     # Gives a dmenu prompt to mount unmounted drives.
     # If they're in /etc/fstab, they'll be mounted automatically.
     # Otherwise, you'll be prompted to give a mountpoint from already existsing directories.
     # If you input a novel directory, it will prompt you to create that directory.
     pgrep -x dmenu && exit

     getmount() { \
		  [ -z "$chosen" ] && exit 1
		  mp="$(find $1 | dmenu -i -p "Type in mount point.")"
		  [ "$mp" = "" ] && exit 1
		  if [ ! -d "$mp" ]; then
		      mkdiryn=$(printf "No\\nYes" | dmenu -i -p "$mp does not exist. Create it?")
		      [ "$mkdiryn" = "Yes" ] && (mkdir -p "$mp" || sudo -A mkdir -p "$mp")
		  fi
     }

     mountusb() { \
		  chosen="$(echo "$usbdrives" | dmenu -i -p "Mount which drive?" | awk '{print $1}')"
		  sudo -A mount "$chosen" && notify-send "$chosen mounted." && exit 0
		  getmount "/mnt /media /mount /home -maxdepth 5 -type d"
		  partitiontype="$(lsblk -no "fstype" "$chosen")"
		  case "$partitiontype" in
		      "vfat") sudo -A mount -t vfat "$chosen" "$mp" -o rw,umask=0000;;
		      ,*) sudo -A mount "$chosen" "$mp";;
		  esac
		  notify-send "$chosen mounted to $mp."
     }

     mountandroid() { \
		      chosen=$(echo "$anddrives" | dmenu -i -p "Which Android device?" | cut -d : -f 1)
		      getmount "$HOME -maxdepth 3 -type d"
		      simple-mtpfs --device "$chosen" "$mp"
		      notify-send "Android device mounted to $mp."
     }

     asktype() { \
		 case $(printf "USB\\nAndroid" | dmenu -i -p "Mount a USB drive or Android device?") in
		     USB) mountusb ;;
		     Android) mountandroid ;;
		 esac
     }

     anddrives=$(simple-mtpfs -l 2>/dev/null)
     usbdrives="$(lsblk -rpo "name,type,size,mountpoint" | awk '$2=="part"&&$4==""{printf "%s (%s)\n",$1,$3}')"

     if [ -z "$usbdrives" ]; then
	 [ -z "$anddrives" ] && echo "No USB drive or Android device detected" && exit
	 echo "Android device(s) detected."
	 mountandroid
     else
	 if [ -z "$anddrives" ]; then
	     echo "USB drive(s) detected."
	     mountusb
	 else
	     echo "Mountable USB drive(s) and Android device(s) detected."
	     asktype
	 fi
     fi

     #+END_SRC
* Languages
** Golang
*** Summary
    :PROPERTIES:
    :TOC:      :include all :depth 3 :ignore this
    :END:
    :CONTENTS:
    - [[#progress][Progress]]
      - [[#books][Books]]
      - [[#sloc][SLOC]]
    - [[#packages][Packages]]
      - [[#gem][gem]]
      - [[#bundle][bundle]]
	- [[#outdated][outdated]]
	- [[#gem][gem]]
	- [[#install][install]]
	- [[#update][update]]
      - [[#irb][irb]]
	- [[#cli][cli]]
	- [[#inside][inside]]
      - [[#rspec][rspec]]
      - [[#unit-test][unit test]]
      - [[#pry][pry]]
    - [[#features][Features]]
      - [[#project-structure][project structure]]
      - [[#system-errors][System Errors]]
	- [[#usage][usage]]
      - [[#exceptions][exceptions]]
	- [[#errors][Errors]]
	- [[#usage][usage]]
      - [[#writable-object-attribute][writable object attribute]]
      - [[#multithreading][Multithreading]]
	- [[#usage][usage]]
      - [[#modules][modules]]
      - [[#continuation][continuation]]
      - [[#fibers][Fibers]]
	- [[#errors][errors]]
	- [[#usage][usage]]
      - [[#delimited-input][delimited input]]
      - [[#rake][rake]]
	- [[#usage][usage]]
      - [[#gem][gem]]
      - [[#variables][Variables]]
	- [[#class-variables][class variables]]
	- [[#global-variables][global variables]]
      - [[#self][self]]
      - [[#commentary][commentary]]
      - [[#defined][defined?]]
      - [[#iterators][iterators]]
      - [[#block-local-variables][block-local variables]]
      - [[#loops][loops]]
      - [[#statement-modifiers][statement modifiers]]
      - [[#comparison][comparison]]
      - [[#conditional][conditional]]
      - [[#class][class]]
	- [[#class][class]]
      - [[#append-][append <<]]
      - [[#blocks][blocks]]
      - [[#lambda][lambda]]
	- [[#how][How]]
	- [[#usage][Usage]]
      - [[#methods][methods]]
      - [[#yield][yield]]
      - [[#procs][procs]]
      - [[#operators][operators]]
      - [[#enumerable][enumerable]]
      - [[#enumerator][enumerator]]
	- [[#lazy][lazy]]
	- [[#each_car][each_car]]
	- [[#each][each]]
	- [[#to_enumenum_for][to_enum/enum_for]]
      - [[#inject][inject]]
      - [[#select][select]]
      - [[#succ][succ]]
      - [[#collect][collect]]
      - [[#freeze][freeze]]
      - [[#dup][dup]]
      - [[#dig][dig]]
      - [[#fetch][fetch]]
      - [[#tap][tap]]
      - [[#map][map]]
      - [[#pluck][pluck]]
      - [[#quoting][Quoting]]
      - [[#here-documents][here documents]]
      - [[#proc][proc]]
      - [[#do-end-as-param][do end as param]]
      - [[#array][array]]
      - [[#datetime][date/time]]
      - [[#lambda][lambda]]
      - [[#begin-rescue][begin rescue]]
      - [[#hash][hash]]
      - [[#range][range]]
      - [[#sets][sets]]
      - [[#gsub][gsub]]
      - [[#find][find]]
      - [[#map][map]]
      - [[#each_slice][each_slice]]
      - [[#lazy][lazy]]
      - [[#with_index][with_index]]
      - [[#enum_for][enum_for]]
      - [[#more][more]]
      - [[#concepts][Concepts]]
	- [[#iterator][Iterator]]
	- [[#methods][Methods]]
	- [[#enumerator][Enumerator]]
      - [[#instructions][Instructions]]
	- [[#rbenv][Rbenv]]
	- [[#misc][misc]]
    - [[#toolings][Toolings]]
    - [[#videos][Videos]]
    - [[#tests][Tests]]
      - [[#rspec][RSpec]]
      - [[#unit][Unit]]
    :END:
*** Progress
**** Books
     | name                    | chapter | @                                    | late | revision |
     |-------------------------+---------+--------------------------------------+------+----------|
     | Learning go             |         | Using const                          |      |          |
     | Go Programming Language | Methods | 6.2. Methods with a Pointer Receiver |      |          |
     |                         |         |                                      |      |          |

**** LDC
     | Source Code | folder          | file            | @ |
     |-------------+-----------------+-----------------+---|
     | go          | src/archive/tar | example_test.go |   |

*** Features
**** operators
***** arithmetic
      |          |                           |
      |----------+---------------------------|
      | combined | += , -= , *= ,/= , and %= |
      |          |                           |

**** types
***** numeric
      |         |                 |
      |---------+-----------------|
      | byte    | uint8           |
      | int     | int64           |
      | uint    | unsigned  int64 |
      | complex |                 |
      | float   |                 |


****** byte
****** int
****** complext
****** float
***** strings
      |              |              |
      |--------------+--------------|
      | immutable    |              |
      | zero value   | empty string |
      | concatenate  | +            |
      | equality     | \==, !=      |
      | empty string | s == ""      |
      |              |              |

***** boolean
      - no other type can be converted to a bool, implicitly or explicitly
      - convert to boolean with: \== , != , > , < , <= , or >=

***** runes
      - chars
      - int32 type
      -

**** cli
***** vet
      Examines Go source code and reports suspicious constructs

      |   |   |
      |---+---|
      |   |   |

***** build
      - build project and create binary
      |                  |              |
      |------------------+--------------|
      | -o <name> <file> | set location |
      |                  |              |

***** get
      |   |   |
      |---+---|
      |   |   |

***** install
      |               |                            |
      |---------------+----------------------------|
      | <name>        |                            |
      | <name>@latest | latest version of the tool |

***** run
      |   |   |
      |---+---|
      |   |   |

***** env
      - list golang environment variables
      |   |   |
      |---+---|
      |   |   |

**** mutex
     #+begin_src go emacs-lisp
     sync.Mutex
     #+end_src
**** collective
     #+begin_src go
     strings.Map
     #+end_src
**** standary library
     #+begin_src go
     // end of line
     io.EOF

     #+end_src
**** functions
     - reference type
     - function values are not comparable.

     #+begin_src go
     // assign f to nil function
     var f func(int) int

     // assign var to a function
     func square(n int) int { return n * n }
     f =  square
     fmt.Println(f(3)) // "9"

     // can compare function to nil but not another function
     if f != nil { ... }

     // recursion in go is fast

     // lambda/anonymous function
     strings.Map(func(r rune) rune { return r + 1 }, "HAL-9000")


     // function that returns a lambda
     func squares() func() int {
	     var x int
	     return func() int {
		     x++
		     return x * x
	     }
     }
     func main() {
	     f := squares()
	     fmt.Println(f()) // "1"
	     fmt.Println(f()) // "4"
	     fmt.Println(f())
	     fmt.Println(f())
     }

     // Defer
     var mu sync.Mutex
     var m = make(map[string]int)

     func lookup(key string) int {
	     mu.Lock()
	     defer mu.Unlock()
	     return m[key]
     }
     #+end_src
**** print
     #+begin_src go
     Printf("%#v\n", w) // # display values in a form similar to Go synVtax.
     #+end_src
**** make
     #+begin_src go
     make([]T, len)
     make([]T, len, cap) // same as make([]T, cap)[:len]
     #+end_src
**** type
     #+begin_src go
     func (c Clear) String() string { // associates Clear to String
	     ...
     }

     #+end_src
**** variables
***** var
      #+begin_src go
      var x int

      var x int = 10
      var x = 10
      #+end_src
***** :=
      - allows assign values to existing variables, as long as there is one new variable on the lefthand side of the :=
      - uses type inference
      - inside function

     #+begin_src go
     func main() {
	     x := 10
	     x, y := 30, "hello"
     }


     #+end_src
**** const
**** doc comment
     Extensive doc comments are often place d in a file of their own, convent ion ally cal le d doc.go
**** pointers
     #+Begin_Src go

     func main() {
	     x = 1
	     ,*p = x
	     Printf(&p) // address of x
     }
     #+end_src
*** Terms
    - runes: single characthers
*** Packages
**** golint
     |       |                                  |
     |-------+----------------------------------|
     | ./... | runs golint over entire project. |
     |       |                                  |

**** goimports
     |    |                                                     |
     |----+-----------------------------------------------------|
     | -l | list files whose formatting differs from goimport's |
     | -w | write result to (source) file instead of stdout     |
     |    |                                                     |
     #+begin_src shell-script
     goimports -l -w .
     #+end_src
** Elixir
*** Summary
    :PROPERTIES:
    :TOC:      :include all :depth 3 :ignore this
    :END:
  :CONTENTS:
  - [[#progress][Progress]]
    - [[#books][Books]]
    - [[#sloc][SLOC]]
  - [[#packages][Packages]]
    - [[#iex][iex]]
  - [[#features][Features]]
  - [[#tests][Tests]]
    - [[#rspec][RSpec]]
    - [[#unit][Unit]]
  :END:
*** Progress
**** Books
     | Books                  | Chapter                  | @                                    | late | revision |
     |------------------------+--------------------------+--------------------------------------+------+----------|
     | Programming Elixir 1.6 | Conventional Programming | Ignoring a Value with _ (Underscore) |      |          |

**** SLOC
     | Project | folder | file | @ |
     |---------+--------+------+---|
     | elixir  |        |      |   |

*** Packages
**** iex
     |               |               |                     |
     |---------------+---------------+---------------------|
     | h [<feature>] | h IO.puts     | help                |
     | i             |               | interactive         |
     | c <filepath>  | c 'hello.exs' | compile and execute |

*** Features
*** Tests
**** RSpec
**** Unit
** [[https://schemers.org/][Scheme]]
*** Progress
**** Books
     | Books            | Cap | @ | late | revision |
     |------------------+-----+---+------+----------|
     | Emacs Lisp       |     |   |      |          |
     | Emacs Manual     |     |   |      |          |
     | ANSI Common Lisp |     |   |      |          |

**** SLOC
     | Source Code | folder      | file        | @ |
     |-------------+-------------+-------------+---|
     | emacs       | lisp/eshell | esh-util.el |   |
     | use-package |             |             |   |
     |             |             |             |   |
*** Scheme Books
**** SICP
***** Chapter 1
****** Examples
******* sqrt
	#+BEGIN_SRC scheme

	(define (average x y)
	  (/ (+ x y) 2))

	(define (improve guess x)
	  (average guess (/ x guess)))

	(define (square y)
	  (* y y))

	(define (good-enough? guess x)
	  (< (abs (- (square guess) x)) 0.001))

	(define (sqrt-iter guess x)
	  (if (good-enough? guess x)
	      guess
	      (sqrt-iter (improve guess x) x)))


	(sqrt 9)
	(sqrt (+ 100 37))
	(sqrt (+ (sqrt 2) (sqrt 3)))
	(square (sqrt 1000))

	#+END_SRC
******* sqrt (nested)
	#+BEGIN_SRC scheme

	(define (sqrt x)
	  (define (good-enough? guess x)
	    (< (abs (- (square guess) x)) 0.001))

	  (define (improve guess x) (average guess (/ x guess)))

	  (define (sqrt-iter guess x)
	    (if (good-enough? guess x)
		guess
		(sqrt-iter (improve guess x) x)))
	  (sqrt-iter 1.0 x))
	#+END_SRC

******* sqrt (nested/improved)
	#+BEGIN_SRC scheme

	(define (sqrt x)
	  (define (good-enough? guess)
	    (< (abs (- (square guess) x)) 0.001))

	  (define (improve guess)
	    (average guess (/ x guess)))

	  (define (sqrt-iter guess)
	    (if (good-enough? guess)
		guess
		(sqrt-iter (improve guess))))
	  (sqrt-iter 1.0))
	#+END_SRC

******* factorial
	#+BEGIN_SRC scheme

	(define (factorial n)
	  (if (= n 1)
	      1
	      (* n (factorial (- n 1)))))


	(define (fact-iter product counter max-count)
	  (if (> counter max-count)
	      product
	      (fact-iter (* counter product)
			 (* counter 1)
			 max-count)))

	(define (factorial n)
	  (fact-iter 1 1 n))

	(define (factorial n)
	  (define (iter product counter)
	    (if (> counter n)
		product
		(iter (* counter product)
		      (+ counter 1))))
	  (iter 1 1))

	(factorial 3)

	#+END_SRC

****** Exercises
******* Exercise 1.1:
	Below is a sequence of expressions. What is the result printed by the interpreter in response to each expression?
	Assume that the sequence is to be evaluated in the order in which it is presented.

	#+BEGIN_SRC scheme

	10 ;; 10
	(+ 5 3 4) ;; 12
	(- 9 1) ;; 8
	(/ 6 2) ;; 3
	(+ (* 2 4) (- 4 6)) ;; 6
	(define a 3) ;; a
	(define b (+ a 1)) ;; b
	(+ a b (* a b)) ;; 19
	(= a b) ;; #f
	(if (and (> b a) (< b (* a b)))
	    b
	    a) ;; 4 (#t)
	(cond ((= a 4) 6)
	      ((= b 4) (+ 6 7 a))
	      (else 25)) ;; 16 (2)
	(+ 2 (if (> b a) b a)) ;; 6
	(* (cond ((> a b) a)
		 ((< a b) b)
		 (else -1))
	   (+ a 1)) ;; 16

	#+END_SRC
******* Exercise 1.2:
	Translate the following expression into prefix form: 5+4+(2−(3−(6+45)))3(6−2)(2−7).

	#+BEGIN_SRC scheme

	(/ (+ 5 4
	      (- 2
		 (- 3 (+ 6 (/ 4 5)))))
	   (* 3 (- 6 2) (- 2 7)))

	#+END_SRC
******* Exercise 1.3:
	Define a procedure that takes three numbers as arguments and returns the sum of the squares of the two larger numbers.
	*QUESTION* *ERROR?*: If 2 number are equal but both are the smalest ones

	#+BEGIN_SRC scheme

	(define (square y)
	  (* y y))

	(define (sum-square-two-numbers x y)
	  (+ (square x) (square y)))

	(define (sum-square-the-two-largest-three-numbers x y n)
	  (if (and (>= x y) (>= y n))
	      (sum-square-two-numbers x y)

	      (if (<= y n)
		  (if (<= x y)
		      (sum-square-two-numbers n y)
		      (sum-square-two-numbers x n))
		  (sum-square-two-numbers y n))))

	(two-largest-of-three 4 4 4)
	(two-largest-of-three 4 3 2)
	(two-largest-of-three 4 1 2)
	(two-largest-of-three 1 4 3)

	(define (sum-square-two-largest-of-three-numbers x y n)
	  (if (and (>= x y) (>= y n))
	      (display "x & y are the larger ones")

	      (if (<= y n)
		  (if (<= x y)
		      (display "n & y are the larger ones")
		      (display "x & n are the larger ones"))
		  (display "y & n are the larger ones"))))

	#+END_SRC
******* Exercise 1.4:
	Observe that our model of evaluation allows for combinations whose operators are compound expressions.
	Use this observation to describe the behavior of the following procedure:

	#+BEGIN_SRC scheme

	(define (a-plus-abs-b a b)
	  ((if (> b 0)
	       + -)
	   a b))

	(a-plus-abs-b 3 2)
	(a-plus-abs-b -3 2)
	(a-plus-abs-b 3 -2)

	ANSWER: If B is bigger than 0, (+ a b), else (- a b)

	#+END_SRC
******* Exercise 1.5:
	Ben Bitdiddle has invented a test to determine whether the interpreter he is faced with is using
	applicative-order evaluation or normal-order evaluation. He defines the following two procedures:

	#+BEGIN_SRC scheme

	(define (p) (p))

	(define (test x y)
	  (if (= x 0)
	      0
	      y))

	#+END_SRC

	Then he evaluates the expression

	#+BEGIN_SRC scheme

	(test 0 (p))

	#+END_SRC

	What behavior will Ben observe with an interpreter that uses applicative-order evaluation? What behavior will he
	observe with an interpreter that uses normal-order evaluation? Explain your answer. (Assume that the evaluation rule
	for the special form if is the same whether the interpreter is using normal or applicative order: The predicate
	expression is evaluated first, and the result determines whether to evaluate the consequent or the alternative
	expression.)
******* Exercise 1.6
	the new-if evaluate all of its parameters resulting in an
	endless loop under sqrt-iter

	sqrt-iter
	new-if
	sqrt-iter
	new-if
	#+BEGIN_SRC scheme


	(define (average x y)
	  (/ (+ x y) 2))

	(define (improve guess x)
	  (average guess (/ x guess)))

	(define (square y) (* y y))

	(define (good-enough? guess x)
	  (< (abs (- (square guess) x)) 0.001))

	(define (new-if predicate then-clause else-clause)
	  (cond (predicate then-clause)
		(else else-clause)))

	(if (= 2 3) 0 5)
	(if (= 1 1) 0 5)
	(new-if (= 2 3) 0 5)
	(new-if (= 1 1) 0 5)


	(define (sqrt-iter guess x)
	  (new-if (good-enough? guess x)
		  guess
		  (sqrt-iter (improve guess x) x)))

	(sqrt 9)
	(sqrt (+ 100 37))
	(sqrt (+ (sqrt 2) (sqrt 3)))
	(square (sqrt 1000))

	#+END_SRC

**** Little Schemer
***** Chapter 3 - Cons the Magnificent
****** rember
****** insertR
       #+BEGIN_SRC scheme

       (define insertR
	 (lambda (new old lat)
	   (cond
	    ((null? lat) (quote ()))
	    (else (cond
		   ((eq? (car lat) old)
		    (cons old
			  (cons new (cdr lat))))
		   (else (cons (car lat)
			       (insertR new old (cdr lat)))))))))

       (insertR 'topping 'fudge
		(quote (ice cream with fudge for dessert)))
       #+END_SRC
****** insertL
       #+BEGIN_SRC scheme

       (define insertL
	 (lambda (new old lat)
	   (cond
	    ((null? lat) (quote ()))
	    (else (cond
		   ((eq? (car lat) old)
		    (cons new
			  (cons old (dr lat)
				(insertL)))))))))

       (subst 'topping 'fudge
	      (quote (ice cream with fudge for dessert)))
       #+END_SRC

****** subst
       #+BEGIN_SRC scheme

       (define subst
	 (lambda (new old lat)
	   (cond
	    ((null? lat) (quote ()))
	    (else (cond
		   ((eq? (car lat) old)
		    (cons new (cdr lat)))
		   (else (cons (car lat)
			       (subst new old (cdr lat)))))))))

       (subst 'topping 'fudge
	      (quote (ice cream with fudge for dessert)))




       #+END_SRC

****** subst2
       #+BEGIN_SRC scheme

       (define subst2
	 (lambda (new o1 o2 lat)
	   (cond
	    ((null? lat) (quote ()))
	    (else (cond
		   ((eq? (car lat) o1)
		    (cons new (cdr lat)))
		   ((eq? (car lat) o2)
		    (cons new (cdr lat)))
		   (else (cons (car lat)
			       (subst2 new o1 o2
				       (cdr lat)))))))))

       (define lat )

       (subst2 'vanilla 'chocolate 'banana '(banana ice cream
						    with chocolate topping))
       #+END_SRC

**** Online books
     https://htdp.org/2018-01-06/Book/

*** Scheme Terms (table)
    | Term                                         | Meaning |
    |----------------------------------------------+---------|
    | data directed programming (complex numbers)  |         |
    | messaging passing                            |         |
    | term list                                    |         |
    | big case analisys                            |         |
    | decentralized control                        |         |
    | stream processing                            |         |
    | state variables                              |         |
    | backtracking search                          |         |
    | memoization                                  |         |
    | Normal Order Evaluation vs Applicative Order |         |

*** Scheme Libraries
    http://synthcode.com/scheme/fmt/
*** TODO Scheme
**** TODO wayland guile scheme window manager -- with an emacs feels
*** Scheme Videos
    [[https:https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-001-structure-and-interpretation-of-computer-programs-spring-2005/video-lectures][SICP Videos]]

    https://vimeo.com/lispnyc

*** Scheme Articles
    http://www.troubleshooters.com/codecorn/scheme_guile/hello.htm

    https://schemers.org/Documents/

    https://schemers.org/

    https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-001-structure-and-interpretation-of-computer-programs-spring-2005/

    https://www.wikiwand.com/en/Homoiconicity#/Implementation_methods
*** Scheme - Blogs
    https://catonmat.net/

    http://www.lambdanative.org

    http://www.schemespheres.org

    https://schemers.org
** Common Lisp
*** Progress
**** Books
     | Books            | Capitulo      | em | tarde | revisao |
     |------------------+---------------+----+-------+---------|
     | ANSI Common Lisp | 4.4 Sequences |    |       |         |
     |                  |               |    |       |         |
**** SLOC
     | Source Code | folder | file | @ |
     |-------------+--------+------+---|
     | sbcl        |        |      |   |
     | asdf        |        |      |   |
     | alexandria  |        |      |   |
*** Features
**** char
     |           |   |
     |-----------+---|
     | char-code |   |

**** array
***** eg
      #+begin_src lisp
      (setf *print-array* t) ;; display form

      (setf arr (make-array '(2 3) : initial-element nil)) ;; make
      (aref arr 0 0) ;; retrieve
      (setf (aref arr 0 0) 'b) ;; replace
      #2a((b nil nil) (nil nil nil))
      (vector "a" 'b 3)
      #+end_src
***** annnotaion
      - multiple dimensions
      - zero indexed
      - one-dimensional array is also called a vector

**** lists
***** list
***** dotted (proper) list
      - is either nil, or a cons whose cdr is a proper list
      - dot notation
      - separated by a period
***** assoc lists (alist)
      - mapping
      - are slow
      - good for prototyping
      - assoc retrieves the pair associated with a given key else nil
      - assoc-if
**** conditionals
***** let
***** cond
***** when
***** unless
**** comparable
***** equal
***** eql
***** nth
***** sort
      - destructive
**** Misc
***** member
***** member-if
***** every
***** some
***** keywords (:test)
**** Short Notations
***** #'
***** '
***** `(,)
***** '()
**** Predicates
***** evenp
***** oddp
***** consp
***** atom
**** Sets
***** union
***** intersection
***** set-difference
***** adjoin
***** member
**** Sequences
***** length
***** subseq
***** reverse
** Haskell
*** TOC
    :PROPERTIES:
    :TOC:      :include all :depth 2 :ignore this
    :END:
  :CONTENTS:
  - [[#progress][Progress]]
    - [[#books][Books]]
    - [[#sloc][SLOC]]
  - [[#haskell-resources][Haskell Resources]]
  - [[#haskell-toolings][Haskell Toolings]]
  :END:
*** Progress
**** Books
     | Books                  | cap | @ | later | revision |
     |------------------------+-----+---+-------+----------|
     | Programming in Haskell |     |   |       |          |
**** SLOC
     | Source Code | folder | file | @ |
     |-------------+--------+------+---|
     | ghc         |        |      |   |
     | xmonad      |        |      |   |

*** Haskell Resources
    https://www.haskell.org/documentation/

    http://hackage.haskell.org/
*** Haskell Toolings
    https://www.haskell.org/cabal/

    https://www.haskellstack.org/
** Elixir
*** TOC
    :PROPERTIES:
    :TOC:      :include all :depth 2 :ignore this
    :END:
  :CONTENTS:
  - [[#progress][Progress]]
    - [[#books][Books]]
    - [[#sloc][SLOC]]
  - [[#features][Features]]
    - [[#mix][Mix]]
  - [[#annotations][Annotations]]
  :END:
*** Progress
**** Books
     | Livros                | Capitulo      | em | tarde | revisao |
     |-----------------------+---------------+----+-------+---------|
     | Programming in Elixir | Elixir Basics |    |       |         |
**** SLOC
     | Source Code | folder | file | @ |
     |-------------+--------+------+---|
     | elixir      |        |      |   |

*** Features
    | features     | example                              | desc   |
    |--------------+--------------------------------------+--------|
    | pin operator | ^                                    | forces |
    | ranges       | 1..100                               |        |
    | regex        | Regex.run ~r{[aeiou]}, "caterpillar" |        |
**** [[https://elixir-lang.org/getting-started/mix-otp/introduction-to-mix.html][Mix]]
     | features    | options                         | desc |
     |-------------+---------------------------------+------|
     | deps help   | mix help deps                   |      |
     | New package | new <name> --module <Namespace> |      |
*** Annotations
** C
*** Fortschritt
**** Buch
     | Buch              | Capitulo | em | tarde | revisao |
     |-------------------+----------+----+-------+---------|
     | C Modern Approach |          |    |       |         |

**** LDC
     | Source Code | folder    | file        | @ |
     |-------------+-----------+-------------+---|
     | curl        | lib/vauth | cleartext.c |   |
     | tmux        |           |             |   |

*** Features

**** pointers
     #+begin_src c


     int main(){
	 int i, *p, *b;
	 int i = 4;

	 ,*p = i; // p = 4
	 ,*p = &i; // get address of i, p is alias of i var.
	 ,*b = &p; // b get address of p, that is, i address.
	 ,*b = *p; // b gets value of p
	 ,*b = *&p; // get address first then back to its value
     }


     #+end_src
*** Books
**** CPAMA
***** Chapter 8
****** Exercises
******* 5. Array of Fibonacci numbers up to 40
	#+BEGIN_SRC c
	#include <stdio.h>

	#define N 40

	int main(void)
	{
	  printf("Enter up to %d numbers: ", N);

	  int fib_numbers[N] = {[0] = 0, [1] = 1, 0};
	  for(int i = 2; i < N; i++){
	    fib_numbers[i] = fib_numbers[i-1] + fib_numbers[i-2];
	  }

	  /* Sorted Array */
	  printf("Array: { ");
	  for(int i = 0; i < N; i++) {
	    printf("%d", fib_numbers[i]);
	    if(i < N-1)
	      printf(", ");
	  }
	  printf(" }\n");


	  return 0;
	}
	#+END_SRC
******* 11 8x8 even checker_board
	#+begin_src c
	#include <stdio.h>

	#define N 8

	int main(void)
	{
	  char checker_board[N][N] = {0};
	  for(int i = 0; i < N; i++){
	    for (int j = 0; j < N; j++) {
	      checker_board[i][j] = ((i+j) % 2 == 0) ? 'B' : 'R';
	    }
	  }

	  printf("\n");
	  /* Sorted Array */
	  printf("Multi Dimension Array: \n{");
	  for(int i = 0; i < N; i++) {
	    for (int j = 0; j < N; j++) {

	      if(i == 0 && j == 0)  printf("{ ");
	      else if (j == 0) printf(" { ");
	      printf("%c", checker_board[i][j]);

	      if(j < N-1)
		printf(", ");

	      if(j == N-1 && i < N-1) printf(" }\n");
	      else if (j == N-1) printf(" }");
	    }
	  }
	  printf("}\n");

	  return 0;
	}

	#+end_src
****** Projects
******* .1
	#+BEGIN_SRC c
	#include <stdio.h>
	#include <stdbool.h>

	int main(void)
	{
	  bool digit_seen[10] = {false};
	  int digit;
	  long n;

	  printf("Enter a number: ");
	  scanf("%ld", &n);

	  printf("Repeated digits: ");
	  while (n > 0) {
	    digit = n % 10;
	    if (digit_seen[digit])
	      printf("%d ", digit);
	    digit_seen[digit] = true;
	    n /= 10;
	  }

	  printf("\n");

	  return 0;
	}
	#+END_SRC
******* .7

***** Chapter 9
****** Exercises
****** Projects
******* Project 1

	 Write a program that asks the user to enter a series of integers (which it
	 stores in an array), then sorts the integers by calling the function
	 selection_sort. When given an array with n elements, selection_sort must do
	 the following:

	 1) Search the array to find the largest element, then move it
	    to the last position in the array.
	 2) Call itself recursively to sort the first n - 1 elements of the array.

	 #+BEGIN_SRC c
	 #include <stdio.h>

	 #define N 4

	 void selection_sort(int a[], int n);

	 int main(void)
	 {
	   printf("Enter up to %d numbers: ", N);

	   int a[N] = {0};
	   for(int i = 0; i < N; i++){
	     scanf("%d", &a[i]);
	   }

	   /* Sorted Array */
	   printf("Unsorted Array: { ");
	   for(int i = 0; i < N; i++) {
	     printf("%d", a[i]);
	     if(i < N-1)
	       printf(", ");
	   }
	   printf(" }\n");

	   selection_sort(a, N);

	   /* Sorted Array */
	   printf("Sorted Array: { ");
	   for(int i = 0; i < N; i++) {
	     printf("%d", a[i]);
	     if(i < N-1)
	       printf(", ");
	   }

	   printf(" }\n");

	   return 0;
	 }

	 void selection_sort(int a[], int n)
	 {
	   if (n == 0) return;

	   // Sort Array
	   int largest, smallest, i;
	   i = largest = smallest = 0;

	   for(; i < n; i++)
	     if(a[i] > a[largest])
	       largest = i;

	   smallest = a[largest];
	   a[largest] = a[n - 1];
	   a[n -1] = smallest;

	   /* Recursion Unfolding */
	   printf("{ ");
	   for(int i = 0; i < n; i++) {
	     printf("%d", a[i]);
	     if(i < n-1)
	       printf(", ");
	   }

	   printf(" }\n");

	   selection_sort(a, n-1);
	 }
	 #+END_SRC

*** Snippets

**** find exec in path
     #+begin_src c


     #include <stdlib.h>
     #include <sys/stat.h>
     #include <sys/types.h>
     #include <unistd.h>

     #include <string>
     #include <iostream>

     using namespace std;

     int main ()
     {
       struct stat sb;
       string delimiter = ":";
       string path = string(getenv("PATH"));
       size_t start_pos = 0, end_pos = 0;

       while ((end_pos = path.find(':', start_pos)) != string::npos)
	 {
	   string current_path =
	     path.substr(start_pos, end_pos - start_pos) + "/mathsat";

	   if ((stat(mathsat_path.c_str(), &sb) == 0) && (sb.st_mode & S_IXOTH))
	     {
	       cout << "Okay" << endl;
	       return EXIT_SUCCESS;
	      }

	   start_pos = end_pos + 1;
	  }

       return EXIT_SUCCESS;
     }

     #+end_src

*** Tools
    https://cdecl.org/  - C gibberish ↔ English
    https://build2.org/

*** Read later
    Mike Gancarz's The Unix Philosophy
    The Pragmatic Programmer [Hunt-Thomas
    The Practice of Programming [Kernighan-Pike99
    Zen Flesh, Zen Bones [Reps-Senzaki],

    https://multun.net/obscure-c-features.html

    https://norasandler.com/2017/11/29/Write-a-Compiler.html

    https://ecc-comp.blogspot.com/2014/12/homogeneous-operating-systems-are-better.html

    https://usesthis.com/interviews/christopher.allan.webber/

    https://raphlinus.github.io/programming/rust/2018/08/17/undefined-behavior.html

    https://jacobmossberg.se/posts/2018/08/11/run-c-program-bare-metal-on-arm-cortex-m3.html

    https://mort.coffee/home/obscure-c-features/

    https://monades.roperzh.com/rediscovering-make-automatic-variables/

    https://monades.roperzh.com/rediscovering-make-power-behind-rules/

    http://www.shubhro.com/2018/01/20/brushing-up-os-c/

    https://solarianprogrammer.com/2017/01/08/c99-c11-dynamic-array-mimics-cpp-vector-api-improvements/

    https://solarianprogrammer.com/2017/01/06/c99-c11-dynamic-array-mimics-cpp-vector/

    http://collin.moe/post.php?i=8

    https://www.viva64.com/en/b/0558/

    http://devarea.com/the-c-preprocessor/

    https://fgiesen.wordpress.com/2018/02/19/reading-bits-in-far-too-many-ways-part-1/

    https://gustedt.wordpress.com/2012/10/14/c11-defects-c-threads-are-not-realizable-with-posix-threads/

    http://arjunsreedharan.org/post/148675821737/write-a-simple-memory-allocator

    https://www.manager.com.br/empregos-c-programador-desenvolvedor

    https://github.com/aleksandar-todorovic/awesome-c

    https://queue.acm.org/detail.cfm?id=3212479

    https://www.quora.com/Why-does-it-seem-that-Unix-is-written-in-C-and-not-written-with-any-C++-Isn%E2%80%99t-C++-more-powerful-than-C

    http://www.code-in-c.com/galton-board-in-c/

    https://wozniak.ca/blog/2018/06/25/Massacring-C-Pointers/index.html

    http://www.itachay.com/2018/06/cc-programming-questions-practice.html

    http://nullprogram.com/blog/2018/06/23/

    http://www.code-in-c.com/an-introduction-to-ncurses-in-c/

    https://gcc.gnu.org/onlinedocs/gcc-6.1.0/gcc/C-Extensions.html

    https://www.ibm.com/developerworks/linux/library/l-gcc-hacks/

    https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html

    http://www.buildyourownlisp.com/chapter6_parsing

    http://nullprogram.com/blog/2018/06/10/

    https://stefansf.de/post/pointers-are-more-abstract-than-you-might-expect/

    https://www.reddit.com/r/C_Programming/comments/8h4pda/c_is_not_a_lowlevel_language/

    https://github.com/ruslo/hunter

    https://github.com/oriansj/knight-vm
*** Articles
    http://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel

    https://stackoverflow.com/questions/562303/the-definitive-c-book-guide-and-list

    http://publications.gbdirect.co.uk/c_book/

    http://darkdust.net/files/GDB%20Cheat%20Sheet.pdf

    https://nazavode.github.io/blog/aliasing/

    http://clc-wiki.net/wiki/The_C_Standard#Obtaining_the_Standard

    https://www.embedded.com/design/programming-languages-and-tools/4437696/C11--C-finally-gets-a-new-standard

    http://www.drdobbs.com/cpp/c-finally-gets-a-new-standard/232800444

    https://github.com/andreas-gone-wild/blog/blob/master/skip_lists_revisited.md

    https://port70.net/~nsz/c/c11/n1570.html

    http://nullprogram.com/blog/2017/11/03/

    https://www.cossacklabs.com/blog/macros-in-crypto-c-code.html

    https://blog.sourcerer.io/writing-a-simple-linux-kernel-module-d9dc3762c234

    https://stackoverflow.com/tags/c/info

    http://cs-education.github.io/sys/#/lessons

    https://blog.holbertonschool.com/hack-virtual-memory-stack-registers-assembly-code/

    https://www.wikiwand.com/en/MISRA_C

    https://danluu.com/malloc-tutorial/

    https://blog.holbertonschool.com/hack-the-virtual-memory-c-strings-proc/

    http://seenaburns.com/building-c-programs/

    https://lwn.net/Articles/741171/

    http://www.techaed.com/how-to-code-like-the-top-programmers-at-nasa-10-critical-rules/

    https://notabug.org/koz.ross/awesome-c

    http://marek.vavrusa.com/c/memory/2015/02/20/memory/

    http://nullprogram.com/blog/2017/08/20/

    http://nullprogram.com/

    https://viewsourcecode.org/snaptoken/kilo/

    https://aransentin.github.io/cwasm/

    https://include-what-you-use.org/

    http://www.catb.org/esr/structure-packing/#_who_should_read_this

    http://www.catb.org/esr/structure-packing/

    https://medium.com/@bartobri/applying-the-linus-tarvolds-good-taste-coding-requirement-99749f37684a

    http://www.agner.org/optimize/

    http://c-faq.com/

    http://www.buildyourownlisp.com/chapter1_introduction

    https://blog.bradfieldcs.com/the-cost-of-forsaking-c-113986438784

    http://www.iso-9899.info/wiki/Main_Page#Stuff_that_should_be_avoided

    http://www.pldaniels.com/c-of-peril/

    https://wiki.osdev.org/Main_Page

    https://wiki.osdev.org/Books

    https://wiki.osdev.org/Bare_Bones

    http://git.annexia.org/?p=jonesforth.git;a=summary

    http://howtowriteaprogram.blogspot.com.br/2010/11/lisp-interpreter-in-90-lines-of-c.html

    http://peter.michaux.ca/articles/scheme-from-scratch-introduction

    https://github.com/kanaka/mal/blob/master/process/guide.md

    https://norvig.com/lispy.html

    https://www.joelonsoftware.com/2001/12/11/back-to-basics/

    https://ops.tips/blog/a-tcp-server-in-c/

    https://beej.us/guide/bgnet/

    https://github.com/cquery-project/cquery/wiki/compile_commands.json

    https://sarcasm.github.io/notes/dev/compilation-database.html

    http://antongerdelan.net/blog/formatted/2018_03_08_how_i_write_code.html

    http://port70.net/~nsz/c/c99/C99RationaleV5.10.pdf

    http://www.lysator.liu.se/c/pikestyle.html

    http://port70.net/~nsz/c/c89/rationale/

    http://marek.vavrusa.com/memory/

    https://blog.noctua-software.com/c-tricks.html

    https://blogs.oracle.com/ksplice/8-gdb-tricks-you-should-know

    http://blog.llvm.org/2011/05/what-every-c-programmer-should-know.html

    https://www.gnu.org/software/emacs/manual/html_node/efaq/Customizing-C-and-C_002b_002b-indentation.html
*** Libraries
    https://www.gnu.org/software/libc/

    https://github.com/universal-ctags/ctags

    https://www.fossil-scm.org/index.html/doc/trunk/www/index.wiki

    https://github.com/conan-io/conan
*** Documentation
    http://knking.com/books/c2/index.html

    http://www.iso-9899.info/wiki/Books

    http://fabiensanglard.net/c/

    https://stackoverflow.com/questions/562303/the-definitive-c-book-guide-and-list/562377#562377

    https://gcc.gnu.org/onlinedocs/

    http://www.c-faq.com/

    http://port70.net/~nsz/c/

    http://port70.net/~nsz/c/c99/n1256.html
*** Bootstraping
    http://git.savannah.nongnu.org/cgit/stage0.git/tree/x86/stage0/stage0_monitor.hex

    http://git.savannah.nongnu.org/cgit/stage0.git/tree/stage0/stage0_monitor.hex0

    https://git.savannah.gnu.org/cgit/guix/bootstrappable.git/
*** Tips
    https://github.com/aleksandar-todorovic/awesome-c#game-programming

    http://www.embedded.com/design/programming-languages-and-tools/4215552/Seventeen-steps-to-safer-C-code

    http://doc.cat-v.org/bell_labs/pikestyle

    https://www.kernel.org/doc/Documentation/process/coding-style.rst

    https://kristerw.blogspot.com.br/2017/09/useful-gcc-warning-options-not-enabled.html

    http://doc.cat-v.org/plan_9/4th_edition/papers/mk

*** System Software Skills
    |---+------------------------------------------------------+---|
    | C | Data Structures rather than just databases           |   |
    | C | deliver clean, efficient and glamorous code quickly. |   |
    | C | current, low level "C" skills                        |   |
    | C | write API's and not just use them.                   |   |
    |   | SQL                                                  |   |
    |   | Excellent writing skills                             |   |
    |   | Outstanding communications skills are a must         |   |
    |   | Git                                                  |   |
    |   | ) Experience in programming microcontrollers.        |   |
    |---+------------------------------------------------------+---|
** Rust
*** Fortschritt
**** Buch
     | Buch      | Capitulo           | em | tarde | revisao |
     |-----------+--------------------+----+-------+---------|
     | Rust Book | Processing a Guess |    |       |         |
**** LDC
     | Source Code | folder | file | @ |
     |-------------+--------+------+---|
     | Rust        |        |      |   |
*** Features
**** cli
     |                 |                       |
     |-----------------+-----------------------|
     | checks          | make sure it compiles |
     | run             | compile and run       |
     | build           | compile               |
     | build --release | praise the sun        |
** .NET
*** Sumario
    :PROPERTIES:
    :TOC:      :include all :depth 2 :ignore this
    :END:
  :CONTENTS:
  - [[#progresso][Progresso]]
    - [[#livros][Livros]]
    - [[#ldc][LDC]]
    - [[#skills][Skills]]
  - [[#projetos][Projetos]]
    - [[#cero][Cero]]
  - [[#net][.NET]]
    - [[#net-resources][.NET Resources]]
    - [[#net-snippets][.NET Snippets]]
    - [[#net-best-practices][.NET Best Practices]]
    - [[#net-toolings][.NET Toolings]]
    - [[#net-projects][.NET Projects]]
    - [[#net-csproj][.NET csproj]]
    - [[#net-developer-skills][.NET Developer skills]]
    - [[#aspnet][ASP.NET]]
  - [[#powershell][Powershell]]
    - [[#more-information][More Information]]
    - [[#projects][projects]]
    - [[#find-all-powershell-profile-locations][Find All PowerShell Profile Locations]]
  - [[#databases][Databases]]
    - [[#msql][MSql]]
    - [[#sql-read-later][SQL read later]]
  :END:
*** Progresso
**** Livros
     | Livros                                      | Capitulo                                                             | em                                                         | tarde | revisao          | AdHoc                                                           |
     |---------------------------------------------+----------------------------------------------------------------------+------------------------------------------------------------+-------+------------------+-----------------------------------------------------------------|
     | C# 8 in a Nutshell The Definitive Reference | Collections                                                          | Customizable Collections and Proxies                       |       | Order Comparison | Concurrency and Asynchrony/Foreground versus Background Threads |
     | C# In Depth                                 | 2.4 Iterators                                                        |                                                            |       |                  |                                                                 |
     | Essential C#                                | Chapter 13 Delegates and Lambda Expressions                          | Delegate Internals                                         |       |                  |                                                                 |
     | The Art of Unit Testing                     | Chapter 3. Using stubs to break dependencies                         |                                                            |       |                  |                                                                 |
     | Asp.Net Core in Action                      | 2.8 Generating responses with Razor Pages                            | Adding and configuring services                            |       |                  |                                                                 |
     | Learn ASP.NET Core 3                        | Chapter 4: Basic Concepts of ASP.NET Core 3 via a Custom Application | Conceiving and implementing your first Tic-Tac-Toe feature |       |                  |                                                                 |
**** LDC
     | Source Code                     | folder                                                         | file                    | @ |
     |---------------------------------+----------------------------------------------------------------+-------------------------+---|
     | roslyn                          | Analyzers/CSharp/Analyzers/InvokeDelegateWithConditionalAccess |                         |   |
     | runtime                         | libraries/System.Linq/src/System/Linq                          | Aggregate               |   |
     | csharp-language-server-protocol | src/Client                                                     | ArrayPoolEventSource.cs |   |
     | omnisharp-roslyn                | OmniSharp.Abstractions/Models/v1                               |                         |   |
**** Skills
      | X                       | Y         |
      |-------------------------+-----------|
      | Collections             |           |
      | Generics                |           |
      | Delegates/Lambda/Events |           |
      | Test Unit               |           |
      | REST                    |           |
      | JSON                    |           |
      | Refactoring             |           |
      | ASP.NET                 | Razor/MVC |
      | Design Patterns         |           |
      | CI/CD                   |           |
      | Docker                  |           |
      | {No-}SQL                |           |
      | Bootstrap               |           |
      | Angular                 |           |
      | Git                     |           |
      | Scrum                   |           |
      | Agile                   |           |
*** Projetos
**** Cero
*** [[https://dotnet.microsoft.com/][.NET]]
**** .NET Resources
     Documentation: https://docs.microsoft.com/en-us/dotnet/

**** .NET Snippets
***** Walk
      #+begin_src csharp
      public interface IDirectoryTree
      {
	  [NotNull, ItemNotNull]
	  IEnumerable<IDirectoryTreeNode> Walk([NotNull] string path, [NotNull] Action<Exception> onException);
      }

      public class DirectoryTree : IDirectoryTree
      {
	  public IEnumerable<IDirectoryTreeNode> Walk(string path, Action<Exception> onException)
	  {
	      if (path == null) throw new ArgumentNullException(nameof(path));
	      if (onException == null) throw new ArgumentNullException(nameof(onException));

	      var nodes = new Queue<DirectoryTreeNode>
	      {
		  new DirectoryTreeNode(path)
	      };

	      while (nodes.Any())
	      {
		  var current = nodes.Dequeue();
		  yield return current;

		  try
		  {
		      dolist (var directory in current.DirectoryNames)
		      {
			  nodes.Enqueue(new DirectoryTreeNode(Path.Combine(current.DirectoryName, directory)));
		      }
		  }
		  catch (Exception inner)
		  {
		      onException(inner);
		  }
	      }
	  }
      }

      [PublicAPI]
      public interface IDirectoryTreeNode
      {
	  [NotNull]
	  string DirectoryName { get; }

	  [NotNull, ItemNotNull]
	  IEnumerable<string> DirectoryNames { get; }

	  [NotNull, ItemNotNull]
	  IEnumerable<string> FileNames { get; }
      }

      internal class DirectoryTreeNode : IDirectoryTreeNode
      {
	  internal DirectoryTreeNode(string path)
	  {
	      DirectoryName = path;
	  }

	  public string DirectoryName { get; }

	  public IEnumerable<string> DirectoryNames => Directory.EnumerateDirectories(DirectoryName).Select(Path.GetFileName);

	  public IEnumerable<string> FileNames => Directory.EnumerateFiles(DirectoryName).Select(Path.GetFileName);
      }


      public static class DirectoryTreeNodeExtensions
      {
	  public static void Deconstruct(
	      [CanBeNull] this IDirectoryTreeNode directoryTreeNode,
	      [CanBeNull] out string directoryName,
	      [CanBeNull] out IEnumerable<string> directoryNames,
	      [CanBeNull] out IEnumerable<string> fileNames)
	  {
	      directoryName = directoryTreeNode?.DirectoryName;
	      directoryNames = directoryTreeNode?.DirectoryNames;
	      fileNames = directoryTreeNode?.FileNames;
	  }

	  public static bool Exists(
	      [CanBeNull] this IDirectoryTreeNode directoryTreeNode)
	  {
	      // Empty string does not exist and it'll return false.
	      return Directory.Exists(directoryTreeNode?.DirectoryName ?? string.Empty);
	  }
      }

      public static class QueueExtensions
      {
	  public static void Add<T>(this Queue<T> queue, T item)
	  {
	      queue.Enqueue(item);
	  }
      }

      public static class Main
      {
	  var directoryTree = new DirectoryTree();
	  directoryTree
	  .WalkSilently(@"c:\temp")
	  .Where(n => !n.DirectoryName.Contains(".git"))
	  .Take(100)
	  .Select(node => node.DirectoryName)
	  .Dump();


	  dolist (var (dirpath, dirnames, filenames) in directoryTree.WalkSilently(@"c:\temp").Where(n => !n.DirectoryName.Contains(".git")).Take(10))
	  {
	      filenames.Dump();
	  }

      }

      #+end_src
***** Links
      https://stackoverflow.com/questions/294138/merging-dictionaries-in-c-sharp
**** .NET Best Practices
***** .NET project layout
      #+begin_src markdown
      ```
      $/
	artifacts/
	build/
	docs/
	lib/
	packages/
	samples/
	src/
	tests/
	.editorconfig
	.gitignore
	.gitattributes
	build.cmd
	build.sh
	LICENSE
	NuGet.Config
	README.md
	{solution}.sln
      ```


      - `src` - Main projects (the product code)
      - `tests` - Test projects
      - `docs` - Documentation stuff, markdown files, help files etc.
      - `samples` (optional) - Sample projects
      - `lib` - Things that can **NEVER** exist in a nuget package
      - `artifacts` - Build outputs go here. Doing a build.cmd/build.sh generates artifacts here (nupkgs, dlls, pdbs, etc.)
      - `packages` - NuGet packages
      - `build` - Build customizations (custom msbuild files/psake/fake/albacore/etc) scripts
      - `build.cmd` - Bootstrap the build for windows
      - `build.sh` - Bootstrap the build for *nix
      - `global.json` - ASP.NET vNext only

      ## .gitignore
      ```
      [Oo]bj/
      [Bb]in/
      .nuget/
      _ReSharper.*
      packages/
      artifacts/
      ,*.user
      ,*.suo
      ,*.userprefs
      ,*DS_Store
      ,*.sln.ide
      ```

      There's probably more things that go in the ignore file.


      - Update: Added docs folder
      - Added README.md and LICENSE - Critical if you're OSS, if not ignore it
      - Renamed `test` to `tests`
      - Added lib for things that *CANNOT* exist in nuget packages
      - Removed NuGet.config for people using packet :)
      - Added global.json for ASP.NET vnext
      - Added .editorconfig file in the root (x-plat IDE settings)
      - Added NuGet.config back because people were confused about it missing
      #+end_src
***** .NET elements order in classes
      #+begin_src markdown
      ## SA1201

      <table>
      <tr>
	<td>TypeName</td>
	<td>SA1201ElementsMustAppearInTheCorrectOrder</td>
      </tr>
      <tr>
	<td>CheckId</td>
	<td>SA1201</td>
      </tr>
      <tr>
	<td>Category</td>
	<td>Ordering Rules</td>
      </tr>
      </table>

      ## Cause

      An element within a C# code file is out of order in relation to the other elements in the code.

      ## Rule description

      A violation of this rule occurs when the code elements within a file do not follow a standard ordering scheme.

      To comply with this rule, elements at the file root level or within a namespace should be positioned in the following order:

      ,* Extern Alias Directives
      ,* Using Directives
      ,* Namespaces
      ,* Delegates
      ,* Enums
      ,* Interfaces
      ,* Structs
      ,* Classes

      Within a class, struct, or interface, elements should be positioned in the following order:

      ,* Fields
      ,* Constructors
      ,* Finalizers (Destructors)
      ,* Delegates
      ,* Events
      ,* Enums
      ,* Interfaces
      ,* Properties
      ,* Indexers
      ,* Methods
      ,* Structs
      ,* Classes*

      Complying with a standard ordering scheme based on element type can increase the readability and maintainability of the file and encourage code reuse.

      When implementing an interface, it is sometimes desirable to group all members of the interface next to one another. This will sometimes require violating this rule, if the interface contains elements of different types. This problem can be solved through the use of partial classes.

      1. Add the partial attribute to the class, if the class is not already partial.

      2. Add a second partial class with the same name. It is possible to place this in the same file, just below the original class, or within a second file.

      3. Move the interface inheritance and all members of the interface implementation to the second part of the class.

      For example:

      ```csharp
      /// <summary>
      /// Represents a customer of the system.
      /// </summary>
      public partial class Customer
      {
	  // Contains the main functionality of the class.
      }

      /// <content>
      /// Implements the ICollection class.
      /// </content>
      public partial class Customer : ICollection
      {
	  public int Count
	  {
	      get { return this.count; }
	  }

	  public bool IsSynchronized
	  {
	      get { return false; }
	  }

	  public object SyncRoot
	  {
	      get { return null; }
	  }

	  public void CopyTo(Array array, int index)
	  {
	      throw new NotImplementedException();
	  }
      }
      ```

      ## How to fix violations

      To fix an instance of this violation, order the elements in the file in the order described above.

      ## How to suppress violations

      ```csharp
      [SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:ElementsMustAppearInTheCorrectOrder", Justification = "Reviewed.")]
      ```

      ```csharp
      #pragma warning disable SA1201 // ElementsMustAppearInTheCorrectOrder
      #pragma warning restore SA1201 // ElementsMustAppearInTheCorrectOrder
      ```

      #+end_src
**** .NET Toolings
***** .NET GUI:
      - https://avaloniaui.net/

**** .NET Projects
***** Lisp.NET
***** Unix Clipboard Manager
***** CLI Code Formater
**** .NET csproj
     #+begin_src xml
     <TargetFramework>net5.0</TargetFramework>
     <LangVersion>preview</LangVersion>
     <PublishTrimmed>true</PublishTrimmed>
     <DocumentationFile>$(OutputPath)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
     <PackAsTool>true</PackAsTool>
     <NoWarn>CS4014</NoWarn>
     <PackageOutputPath>./nupkg</PackageOutputPath>
     #+end_src
**** .NET Developer skills
     - Bachelor's degree in computer science
     - Experience with C#
     - Experience with ASP.NET [Core] and ASP.NET MVC frameworks
     - Good understanding and hands on experience with AWS, .NET, and WebAPI
     - Experience with data modeling, normalization, and SQL optimization
     - Strong understanding of SDLC, including Agile methodologies
     - Ability to collaborate and work with other developers and test effectively within SCRUM/Agile environment
     - Strong understanding of object-oriented design patterns, including dependency injection and inversion of control
     - Experience producing and consuming web APIs, including JSON and XML formats
     - Experience with REST-based services and APIs
     - Build and deployment knowledge to host .NET application on AWS using Visual Studio Team Services
     - Strong documentation, writing and interpersonal skills.
     - Front-End Toolings
**** [[https://docs.microsoft.com/en-us/aspnet/][ASP.NET]]
****** new project scaffold

       - dotnet new razor -o lxbarbosa

       - dotnet watch run

       - dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design --version 3.1.2
       - dotnet aspnet-codegenerator razorpage List Empty -udl -outDir Pages/Restaurants
*** [[https://docs.microsoft.com/en-us/powershell/][Powershell]]
**** More Information
     powershell.org/
**** TODO projects
     - PowerPlug: Zplug like that easy managament of PowerShell modules and settings
**** Find All PowerShell Profile Locations
     $PROFILE | Format-List -Force
*** Databases
**** MSql

**** SQL read later
     http://www.craigkerstiens.com/2012/10/01/understanding-postgres-performance/

      https://github.com/edgedb/edgedb
** Swift
*** Sumario
    :PROPERTIES:
    :TOC:      :include all :depth 2 :ignore this
    :END:
  :CONTENTS:
  - [[#progresso][Progresso]]
    - [[#livros][Livros]]
    - [[#ldc][LDC]]
  :END:
*** Progresso
**** Livros
     | Livros | Capitulo | em | tarde | revisao |
     |--------+----------+----+-------+---------|
     |        |          |    |       |         |
**** LDC
     | Source Code | folder | file | @ |
     |-------------+--------+------+---|
     |             |        |      |   |
** Lua
*** Sumario
    :PROPERTIES:
    :TOC:      :include all :depth 2 :ignore this
    :END:
  :CONTENTS:
  - [[#progresso][Progresso]]
    - [[#livros][Livros]]
    - [[#ldc][LDC]]
  :END:
*** Progresso
**** Livros
     | Livros | Capitulo | em | tarde | revisao |
     |--------+----------+----+-------+---------|
     | Lua    |          |    |       |         |
**** LDC
     | Source Code | folder | file | @ |
     |-------------+--------+------+---|
     | lua         |        |      |   |
     | luarocks    |        |      |   |
     | awesome     |        |      |   |
** Java
*** Java Books
****** JBG
******* Chapter 1
******** Chapter 1 Self Test
	 1.   What is bytecode and why is it important to Java’s use for Internet programming?

	    A1: Bytecode is a highly optimized set of instructions designed to be executed by the Java run-time system.
	    A2:Translating a Java program into bytecode makes it much easier to run a program in a wide variety
	       of environments because only the JVM needs to be implemented for each platform.

	 2.   What are the three main principles of object-oriented programming?
	    A: encapsulation, polymorphism, and inheritance

	 3.   Where do Java programs begin execution?
	    A: A call to main()

	 4.   What is a variable?
	    A: A variable is a named memory location that can be assigned a value

	 5.   Which of the following variable names is invalid?

	    A.   count

	    B.   $count

	    C.   count27

	--> D.   67count

	 6.   How do you create a single-line comment? How do you create a multiline comment?
	    // single-line comment

	 7.   Show the general form of the if statement. Show the general form of the for loop.
	    A1: if()
	    A2: for(){}

	 8.   How do you create a block of code?
	    A: A pair of {}

	 9.   The moon’s gravity is about 17 percent that of earth’s. Write a program that computes your
	 effective weight on the moon.
	 #+BEGIN_SRC java

	 /*  9.   The moon’s gravity is about 17 percent that of earth’s. Write a program that computes your
	     effective weight on the moon.
	 ,*/

	 class MoonWeight {
	     public static void main(String args[]) {

		 double EarthlyWeight = 202;
		 double moonGravityPercentage = 0.17;

		 double MoonlyWeight = EarthlyWeight  * moonGravityPercentage;

		 System.out.println(" Weight on Moon is: " + MoonlyWeight);
	     }
	 }

	 #+END_SRC

	 10.   Adapt Try This 1-2 so that it prints a conversion table of inches to meters. Display 12 feet of
	 conversions, inch by inch. Output a blank line every 12 inches. (One meter equals approximately
	 39.37 inches.)
	 #+BEGIN_SRC java

	 /*  10.   Adapt Try This 1-2 so that it prints a conversion table of inches to meters. Display 12 feet of
	     conversions, inch by inch. Output a blank line every 12 inches. (One meter equals approximately
	     39.37 inches.)
	 ,*/

	 class InchToMeterConversion {
	     public static void main(String args[]) {

		 double inches, meters;
		 int counter = 0;

		 for (inches = 1.0; inches <= 22; inches++) {

		     meters = inches * 0.0254; //convert to meters

		     System.out.println(inches + " inches is " + meters + " meters.");


		     counter++;

		     // every 12th line, print a blank line
		     if (counter == 12) {
			 System.out.println();

			 counter = 0; // reset the line counter
		     }
		 }
	     }
	 }

	  #+END_SRC

	 11.   If you make a typing mistake when entering your program, what sort of error will result?
	    A:error: cannot find symbol

	 12.   Does it matter where on a line you put a statement?
	     Nope. Indenting is for human readability.n

******* Chapter 2
******** Exercises
********* 1. Why does Java strictly specify the range and behavior of its primitive types?
	  Java’s portability requirement!!!!!
********* 2. What is Java’s character type, and how does it differ from the character type used by some other programming languages?
	  Java uses Unicode. Unicode defines a character set that can represent all of the characters found in all human languages.
	  In Java, char is an unsigned 16-bit type having a range of 0 to 65,535.
	  The standard 8-bit ASCII character set is a subset of Unicode and ranges from 0 to 127.
	  Thus, the ASCII characters are still valid Java characters.
********* 3. A boolean value can have any value you like because any non-zero value is true. True or False?
	  True, very True!
********* 4. Given this output, using a single string, show the println( ) statement that produced it.
	  #+BEGIN_SRC java

	  System.out.println("One\nTwo\nThree");

	  #+END_SRC
********* 5. What is wrong with this fragment?
	  #+BEGIN_SRC java

	  #+END_SRC
	  print is out of the for loop and will issue an error as sum is not know out of for block scope!!

********* 6. Explain the difference between the prefix and postfix forms of the increment operator.
	  PREFIX =  When an increment or	decrement operator precedes its operand, Java will perform the corresponding
	  operation prior to obtaining the operand’s value for use by the rest of the expression.

	  POSTFIX = If the operator follows its operand, Java will obtain the operand’s value before incrementing or decrementing it.

********* TODO 7. Show how a short-circuit AND can be used to prevent a divide-by-zero error.
	  #+BEGIN_SRC java

	  #+END_SRC
********* 8. In an expression, what type are byte and short promoted to?
	  int
********* 9. In general, when is a cast needed?
	  When you need to ensure a given type is yield by the expression.
********* TODO 10. Write a program that finds all of the prime numbers between 2 and 100.
********* 11. Does the use of redundant parentheses affect program performance?
	  Use of redundant or additional parentheses will not cause errors or slow down the execution of the expression.
********* 12. Does a block define a scope?
	  Each time you start a new block, you are creating a new scope.
	  A scope determines what objects are visible to other parts of your program. It also determines the lifetime of those objects.
******* Chapter 3
******* Chapter 4
******** Exercises
********* 1.   What is the difference between a class and an object?
	  A class is a template that defines the form of an object. Java uses a class specification to construct objects.
	  Objects are instances of a class.
	  It is not until an object of that class has been created that a physical representation	of that class exists in memory.
********* 2.   How is a class defined?
	  You do this by specifying the instance variables that it contains and the methods that operate on them.
	  A well-designed class should define one and only one logical entity.

	  #+BEGIN_SRC java
	  class Example {
	      int var1;
	  }
	  #+END_SRC

	  A class definition creates a new data type.
********* 3.   What does each object have its own copy of?
	  Each object has its own copies of the instance variables defined by its class.
	  Thus, the contents of the variables in one object can differ from the contents of the variables in another.
	  There is no connection between the two objects	except for the fact that they are both objects of the same type.
********* 4.   Using two separate statements, show how to declare an object called counter of a class called MyCounter.
	  #+BEGIN_SRC java

	  class MyCounter {
	      int a = 10;
	  }

	  class DemoCounter {
	      public static void main(String[] args) {

		  MyCounter counter;
		  counter = new MyCounter();

		  System.out.println(counter.a);
	      }
	  }
	  #+END_SRC
********* 5.   Show how a method called myMeth( ) is declared if it has a return type of double and has two int parameters called a and b.
	  #+BEGIN_SRC java

	  class Meth {

	      int aa, bb;

	      double myMeth (int a, int b) {
		  aa = a;
		  bb = b;
	      }
	  }

	  #+END_SRC
********* *6.   How must a method return if it returns a value?**
	  #+BEGIN_SRC java

	  class Meth {

	      int a, b;

	      double myMeth (int a, int b) {
		  this.a = a;
		  this.b = b;

		  return (double) a + b;
	      }
	  }



	  #+END_SRC
********* 7.   What name does a constructor have?
	  It has the same name as its class and is syntactically similar to a method.
	  However, constructors have no explicit return type.
	  Typically, you will use a constructor to give initial values to the instance variables defined by the class,
	  or to perform any other startup procedures required to create a fully formed object.
********* 8.   What does new do?
	  *new* can be used to create an object of any class type. The new operator returns a
	  reference to the newly created object!
********* 9.   What is garbage collection, and how does it work?
	  Java’s garbage collection system reclaims objects automatically without any programmer intervention.
	  When no references to an object exist, that object is assumed to be no longer needed, and the memory occupied by the object is released.
	  This recycled memory can then be used for a subsequent allocation.
********* 10.   What is this?
	  When a method is called, it is automatically passed an implicit argument that is a reference to the invoking object
	  (that is, the object on which the method is called).
	  This reference is called this.

	  The Java syntax permits the name of a parameter or a local variable to be the same as the name of an instance variable.
	  When this happens, the local name hides the instance variable. You can gain access to the hidden instance variable by referring to it through *this*.
********* 11.   Can a constructor have one or more parameters?
	  Parameters are added to a constructor in the same way that they are added to a method: just declare them
	  inside the parentheses after the constructor’s name.
********* 12.   If a method returns no value, what must its return type be?
	  Void. You can use a return with a null statement or no return at all.
******* Chapter 5
******** Self Test
********* 1.   Show two ways to declare a one-dimensional array of 12 doubles.
	  #+BEGIN_SRC java
	  class OneDTwelve {
	      int i[] = new int[12];

	  }

	  #+END_SRC
********* 2.   Show how to initialize a one-dimensional array of integers to the values 1 through 5.
	  #+BEGIN_SRC java

	  int nums[] = {1,2,3,4,5}

	  #+END_SRC
********* 3.   Write a program that uses an array to find the average of 10 double values. Use any 10 values you like.
	  #+BEGIN_SRC java

	  public class BubbleDolist {

	      public static void main(String[] args) {

		  double nums[] = { 200.1, 2.5, 5.2, 199.1, 2.1};

		  int a, b;
		  int size;

		  size = 5; // number of elements to sort

		  // display original array
		  System.out.print("Original array is:");
		  for (double i : nums)
		      System.out.print(" " + i);
		  System.out.println();

		  // This is the Bubble sort.
		  for (a = 1; a < size; a++)
		      for (b = size-1; b >= a; b--) {
			  if(nums[b-1] > nums[b]) { // if out of order
			      // exchance elements
			      double t = nums[b-1];
			      nums[b-1] = nums[b];
			      nums[b] = t;
			  }

		      }

		  // display sorted array
		  System.out.print("Sorted array is:");
		  for (double z : nums)
		      System.out.print(" " + z);
	      }

	  }


	  #+END_SRC
********* TODO 4.   Change the sort in Try This 5-1 so that it sorts an array of strings. Demonstrate that it works.
	  #+BEGIN_SRC java

	  #+END_SRC
********* 5.   What is the difference between the String methods indexOf( ) and lastIndexOf( )?
	  indexOf( ): This method returns the index within this string of the first occurrence
	  of the specified character or -1, if the character does not occur.
	  lastIndexOf( ): This method returns the index of the last occurrence of the character in the character sequence represented
	  by this object that is less than or equal to fromIndex, or -1 if the character does not occur before that point.
********* 6.   Since all strings are objects of type String, show how you can call the length( ) and charAt( ) methods on this
	  #+BEGIN_SRC java

	  String str = new String("I like Java");

	  System.out.println(str);
	  System.out.println(str.length());
	  System.out.println(str.charAt(2));

	  #+END_SRC
********* TODO 7.   Expanding on the Encode cipher class, modify it so that it uses an eight-character string as the key.
********* 8.   Can the bitwise operators be applied to the double type?
	  Bitwise operations cannot be used on boolean, float, or double, or class types.
	  They are called the bitwise operators because they are used to test, set, or shift the individual bits that make up a value.
********* 9.   Show how this sequence can be rewritten using the ? operator.
	  #+BEGIN_SRC java

	  if(x < 0) y = 10;
	  else y = 20;

	  x < 0 ?  y = 10 : y = 20;

	  #+END_SRC
********* 10.   In the following fragment, is the & a bitwise or logical operator? Why?
	  #+BEGIN_SRC java
	  boolean a, b;
	  if(a & b)
	  #+END_SRC
	  No. Bitwise operations cannot be used on boolean, float, or double, or class types.
********* 11.   Is it an error to overrun the end of an array? Is it an error to index an array with a negative value?
	  Yes. it is a run-time error to overrun or underrun the end of an array.
	  Yes. Java Arrays index do not allow negative index
********* 12.   What is the unsigned right-shift operator?
	  always brings in a 0 on the left.
	  For this reason, the >>> is also called the zero-fill right shift.
	  You will use the unsigned right shift when shifting bit patterns, such as status codes, that do not represent integers.
********* 13.   Rewrite the MinMax class shown earlier in this chapter so that it uses a for-each style for loop.
	  #+BEGIN_SRC java

	  class MinMaxDolist {
	      public static void main(String[] args) {
		  int nums[] = {1, 99, -10, 100123, 18, -978,
				5623, 463, -9, 287, 49};

		  int min, max;
		  min = max = nums[0];

		  for (int x : nums) {
		      if(x < min) min = x;
		      if(x > max) max = x;
		  }

		  System.out.println("min: " + min);
		  System.out.println("max: " + max);
	      }
	  }

	  #+END_SRC
********* 14.   Can the for loops that perform sorting in the Bubble class shown in Try This 5-1 be converted into for-each style loops? If not, why not?
	  As for-each loops only objects I could not achieve a full for-each Bubble without some hackish trick! hehe
	  #+BEGIN_SRC java

	  class BubbleDolist {
	      public static void main(String[] args) {

		  int nums[] = {99, -10, 100123, 18, -978,
				5623, 463, -9, 287, 49};
		  int sample[] = new int[9]; // HACKISH TRICK

		  // display original array
		  System.out.print("Original array is:");
		  for (int i : nums)
		      System.out.print(" " + i);
		  System.out.println();

		  // This is the Bubble sort.
		  for (int x : nums){
		      for (int y: sample) {

			  int b = nums.length-1;

			  if(nums[b-1] > nums[b]) { // if out of order
			      // exchance elements
			      int t = nums[b-1];
			      nums[b-1] = nums[b];
			      nums[b] = t;
			  }

			  b--;
		      }
		  }

		  // display sorted array
		  System.out.print("Sorted array is:");
		  for (int z : nums)
		      System.out.print(" " + z);
	      }
	  }

	  #+END_SRC
********* 15.   Can a String control a switch statement?
	  Yes.
	  Being able to use strings in a switch statement can be very convenient and can improve the readability of some code.
	  However, switching on strings can be less efficient than switching on integers.
	  Therefore, it is best to switch on strings only in cases in which the controlling data is already in string form.
******* Chapter 6
******** Try This
********* Try 6-1 Queue - Control Acess
	   #+BEGIN_SRC java

	   class Queue {
	       private char q[];
	       private int putloc, getloc;

	       Queue(int size) {
		   q = new char[size];
		   putloc = getloc = 0;
	       }

	       void put(char ch){
		   if(putloc==q.length){
		       System.out.println(" - Queue is full.");
		       return;
		   }

		   q[putloc++] = ch;
	       }

	       char get() {
		   if(getloc == putloc) {
		       System.out.println(" - Queue is empty.");
		       return (char) 0;
		   }

		   return q[getloc++];
	       }
	   }

	   class QueueDemo {
	       public static void main(String[] args) {
		   Queue bigQ = new Queue(100);
		   Queue smallQ = new Queue(4);
		   char ch;
		   int i;

		   System.out.println("Using bigQ to store the alphabet.");

		   for (i = 0; i < 26; i++) {
		       bigQ.put((char) ('A' + i) );
		   }

		   // retrieve
		   System.out.println("Contents of bigQ: ");
		   for (i = 0; i < 26; i++) {
		       ch = bigQ.get();
		       if(ch != (char) 0) System.out.println(ch);
		   }

		   System.out.println("\n");

		   System.out.println("Using smallQ to generate errors.");
		   // Now
		   for (i = 0; i < 5; i++) {
		       System.out.println("Attempting to store " + (char) ('Z' - i));

		       smallQ.put((char) ('Z' - i));

		       System.out.println();
		   }
		   System.out.println();

		   // more errors on smallQ
		   System.out.println("Contets of smallQ: ");
		   for (i = 0; i < 5; i++) {
		       ch = smallQ.get();

		       if(ch != (char ) 0) System.out.println(ch);
		   }
	       }
	   }
	   #+END_SRC

********* Try 6-2 Queue - Construct Overload
	  #+BEGIN_SRC java

	  class Queue {
	      private char q[];
	      private int putloc, getloc;

	      Queue(int size) {
		  q = new char[size];
		  putloc = getloc = 0;
	      }

	      Queue(Queue ob) {
		  putloc = ob.putloc;
		  getloc = ob.getloc;
		  q = new char[ob.q.length];

		  for (int i = getloc; i < putloc; i++) {
		      q[i] = ob.q[i];
		  }
	      }

	      Queue(char a[]) {
		  putloc = 0;
		  getloc = 0;
		  q = new char[a.length];

		  for (int i = 0; i < a.length; i++) {
		      put(a[i]);
		  }
	      }

	      void put(char ch){
		  if(putloc==q.length){
		      System.out.println(" - Queue is full.");
		      return;
		  }

		  q[putloc++] = ch;
	      }

	      char get() {
		  if(getloc == putloc) {
		      System.out.println(" - Queue is empty.");
		      return (char) 0;
		  }

		  return q[getloc++];
	      }
	  }


	  class QDemo2 {
	      public static void main(String[] args) {

		  Queue q1 = new Queue(10);

		  char name[] = {'T', 'o', 'm'};

		  Queue q2 = new Queue(name);

		  char ch;
		  int i;

		  for (i = 0; i < 10; i++) {
		      q1.put((char) ('A' + i) );
		  }

		  Queue q3 = new Queue(q1);

		  System.out.print("Contents of q1: ");
		  for (i = 0; i < 10; i++) {
		      ch = q1.get();
		      System.out.print(ch);
		  }

		  System.out.println("\n");

		  System.out.print("Contents of q2: ");
		  for (i = 0; i < 3; i++) {
		      ch = q2.get();
		      System.out.print(ch);
		  }

		  System.out.println("\n");

		  System.out.print("Contents of q3: ");
		  for (i = 0; i < 10; i++) {
		      ch = q3.get();
		      System.out.print(ch);
		  }
	      }
	  }


	  #+END_SRC
******* Example
******** Chapter 1
********* example
	  #+BEGIN_SRC java
	      /*
		This is a simple Java program
		call this file Example.java
	      ,*/

	      class Example {
		// A java program begins with a call to main()
		public static void main(String arg[]) {
		  System.out.println("Java drives the Web.");
		}
	      }
	  #+END_SRC
********* example2
	  #+BEGIN_SRC java
	  /*
	    This demonstrate a variable
	    ,Call this file Example2.java */

	  class Example2 {
	      public static void main(String args[]){
		  int var1; // this declares a variable
		  int var2;  // this declares a variable

		  var1 = 1024; // this asigns 1024 to var1
		  System.out.println("var1 contains " + var1);

		  var2 = var1 / 2;

		  System.out.print("var2 contains var1 / 2: ");
		  System.out.println(var2);
	      }
	  }
	  #+END_SRC

********* example3
	  #+BEGIN_SRC java

	  /* This program illustrates the differences
	     ,between int and double.
	     ,
	     ,Call this file Example3.java
	  ,*/

	  class Example3 {

	      public static void main(String arg[]) {
		  int var;
		  double x;

		  var = 10;

		  x = 10.0;

		  System.out.println("Original value of var: " + var);
		  System.out.println("Original value of x: " + x);
		  System.out.println();

		  var = var / 4;
		  x = x / 4;

		  System.out.println("var after division : " + var);
		  System.out.println("x after division: " + x);
	      }
	  }

	  #+END_SRC

********* GalToLit
	 #+BEGIN_SRC java
	 /*
	   Try this 1-1

	   This program converts  gallons to liters.

	   Call this program GalToLit.java

	 ,*/

	 class GalToLit {
	     public static void main(String a[]) {
		 double gallons;
		 double liters;

		 gallons = 10;

		 liters = gallons * 3.7854;

		 System.out.println(gallons + " gallons is " + liters + " Liters.");
	     }
	 }

	 #+END_SRC
********* ifDemo.java
	  #+BEGIN_SRC java
	  // Demonstrate if
	  // Call this file ifDemo.java

	  class ifDemo  {
	      public static void main(String[] args) {
		  int a, b, c;

		  a = 2;
		  b = 3;

		  if (a < b) System.out.println("a is less than b");

		  // this wont display anything
		  if (a == b) System.out.println("you wont see this");

		  System.out.println();

		  c = a - b; // c contains -1

		  System.out.println("c contains -1");
		  if (c >= 0) System.out.println("c is non-negative");
		  if (c < 0) System.out.println("c is negative");

		  System.out.println();

		  c = b - a; // c contains 1

		  System.out.println("c contains 1");
		  if (c >= 0) System.out.println("c is non-negative");
		  if (c < 0) System.out.println("c is negative");
	      }
	  }

	  #+END_SRC
********* ForDemo.java
	  #+BEGIN_SRC java

	  /*  Demonstrate the for loop */

	  class ForDemo {
	      public static void main(String args[]){
		  int count;

		  for(count = 0; count < 5; count++)
		      System.out.println("This is count: " + count);

		  System.out.println("Done!");
	      }
	  }

	  #+END_SRC
********* BlockDemo.java
	#+BEGIN_SRC java
	/*  Demonstrate a block of code */

	class BlockDemo {
	    public static void main(String args[]) {
		double i, j, d;

		i = 5;
		j = 10;

		//  the target of this if is a block
		if (i != 0) {
		    System.out.println("i does not equal zero");
		    d = j / i;
		    System.out.println("j / is " + d);
		}
	    }
	}


       #+END_SRC
********* GalToLitTable
	 #+BEGIN_SRC java

	 /*  This program converts  gallons to liters. */

	 class GalToLitTable {
	     public static void main(String a[]) {
		 double gallons, liters;
		 int counter;

		 counter  = 10;
		 for( gallons = 1; gallons <= 100; gallons++){
		     liters = gallons * 3.7854; //convert to liters
		     System.out.println(gallons + " gallons is " +
					liters + "liters.");

		     counter++;
		     // every 10th line, print a blank line
		     if(counter == 10 ){
			 System.out.println();
			 counter = 0; // reset the line counter
		     }
		 }
	     }
	 }

	 #+END_SRC

******** Chapter 2
********* Examples
********** Inches
	   #+BEGIN_SRC java

	   /*  Compute the number of cubic inches
	       in 1 cubic mile
	   ,*/

	   class inches {
	       public static void main(String args[]){
		   long ci;
		   long im;

		   im = 5280 * 12;
		   ci = im * im * im;
		   System.out.println("There are " + ci +
				      " cubic inches in cubic mile.");
	       }
	   }

	   #+END_SRC

********** Hypotenuse
	   #+BEGIN_SRC java

	   /*  Use the pythagorean theorem to
	       find the length of the hypotenuse
	       given the lengths of the two opposing
	       sides */

	   class Hypto {
	       public static void main(String args[]){
		   double x, y, z;

		   x = 3;
		   y = 4;

		   z = Math.sqrt(x*x + y*y);

		   System.out.println("Hypotenuse is " +z);
	       }
	   }


	   #+END_SRC

********** CharArithDemo
	    #+BEGIN_SRC java
	    // Character variables can handle like integers

	    class CharArithDemo {
		public static void main(String args[]) {

		    char ch = 'X';
		    System.out.println("ch contains " + ch);

		    ch++; //increment ch
		    System.out.println("ch is now " + ch);

		    ch = 90; // give ch the value Z
		    System.out.println("ch is now " + ch);

		}
	    }

    #+END_SRC

********** BoolDemo
	    #+BEGIN_SRC java
	    // Demonstrates boolean values.

	    class BoolDemo {
		public static void main(String args[]) {

		    boolean b;

		    b = false;
		    System.out.println("b is " + b);

		    b = true;
		    System.out.println("b is " + b);

		    // a boolean value can control the if statement
		    if(b) System.out.println("This is executed");

		    b = false;
		    if(b) System.out.println("This is not executed");

		    // outcome  of a relational operator is a boolean value
		    System.out.println("10 > 9 is  " + (10 > 9));

		}
	    }

    #+END_SRC

********** StrDemo
	   #+BEGIN_SRC java

	   class StrDemo {
	       public static void main(String args[]){
		   System.out.println("First line\n Second line");
		   System.out.println("A\tB\tC");
		   System.out.println("D\tE\tF");
	       }
	   }


	   #+END_SRC
********** Dyninit
	   #+BEGIN_SRC java
	   // Computes the volume of a cylinder given the radius of its base and its height

	   class Dyninit {
	       public static void main(String args[]){
		   double radius = 4, height = 5;

		   double volume = 3.146 * radius * radius * height;

		   System.out.println("Volume is " + volume);
	       }
	   }


	   #+END_SRC
********** ScopeDemo
	   #+BEGIN_SRC java

	   class ScopeDemo {
	       public static void main(String args[]){
		   int x; // global

		   x = 10;
		   if(x == 10)  { // new scope

		       int y = 20; // block local var

		       // x and y are visible here

		       System.out.println("x and y: " +  x + " " + y);

		       x = y * 2;
		   }

		   // y = 100; // Error! y not known here

		   // x still global/visible here

		   System.out.println("x is " + x);
	       }
	   }


	   #+END_SRC
********** VarInitDemo
	   #+BEGIN_SRC java
	   class VarInitDemo {
	       public static void main(String args[]){
		   int x;

		   for(x = 0; x< 3; x++) {
		       int y = -1;
		       System.out.println("y is: " + y);
		       y = 100;
		       System.out.println("y is now:" + y);
		   }
	       }
	   }


	   #+END_SRC
********** NestVar
	   #+BEGIN_SRC java
	   class NestVar {
	       public static void main(String args[]){
		   int count;

		   for(count = 0; count< 10; count = count+1) {
		       System.out.println("this is count: " + count);

		       int count;
		       for (count = 0; count < 2; count++) {
			   System.out.println("This program is in error!");
		       }
		   }
	       }
	   }


	   #+END_SRC
********** ModDemo
	   #+BEGIN_SRC java

	   class ModDemo {
	       public static void main(String[] args) {
		   int iresult, irem;
		   double dresult, drem;

		   iresult = 10 / 3;
		   irem = 10 % 3;
		   dresult = 10.0 / 3.0;
		   drem = 10.0 % 3.0;

		   System.out.println("Result and remainder of 10 / 3 " +
				      iresult + " " + irem);

		   System.out.println("Result and remainder of 10.0 / 3.0 " +
				      dresult + " " + drem);
	       }
	   }

	   #+END_SRC
********** SqrRoot
	   #+BEGIN_SRC java

	   // Show square roots of 1 to 99 and rounding error.
	   public class SqrRoot {
	       public static void main(String[] args) {
		   double num, sroot, rerr;

		   for (num = 1.0; num < 100.0; num++) {
		       sroot = Math.sqrt(num);
		       System.out.println("Square root of " + num +
					  " is " + sroot);

		       // compute rounding error
		       rerr = num  - (sroot * sroot);
		       System.out.println("Rounding error is " + rerr);
		       System.out.println();
		   }
	       }
	   }

	   #+END_SRC
********** RelLogOps
	   #+BEGIN_SRC java

	   class RelLogOps {
	       public static void main(String[] args) {
		   int i, j;
		   boolean b1, b2;

		   i = 10;
		   j = 11;
		   if(i < j) System.out.println("i < j");
		   if(i <= j) System.out.println("i <= j");
		   if(i != j) System.out.println("i != j");
		   if(i == j) System.out.println("this wont execute");
		   if(i >= j) System.out.println("this wont execute");
		   if(i > j) System.out.println("this wont execute");

		   b1 = true;
		   b2 = false;
		   if(b1 & b2) System.out.println("this wont execute");
		   if(!(b1 & b2)) System.out.println("!(b1 & b2) is true");
		   if(b1 | b2) System.out.println("b1 | b2 is true");
		   if(b1 ^ b2) System.out.println("b1 ^ b2 is true");
	       }
	   }

	   #+END_SRC
********** SCops
	   #+BEGIN_SRC java
	   class SCops {
	       public static void main(String[] args) {
		   int n, d;

		   n = 10;
		   d = 2;
		   if(d != 0 && (n % d) == 0)
		       System.out.println(d + "is a factor of " + n);

		   d = 0;

		   if(d != 0 && (n % d) == 0)
		       System.out.println(d + "is a factor of " + n);


		   if(d != 0 & (n % d) == 0) // WARNING: / by zero
		       System.out.println(d + "is a factor of " + n);

	       }
	   }

	   #+END_SRC
********** SideEffects
	   #+BEGIN_SRC java
	   class SideEffects {
	       public static void main(String[] args) {
		   int i;

		   i = 0;

		   if (false & (++i < 100))
		       System.out.println("this wont be displayed");
		   System.out.println("if statement executed: " + i); // 1


		   if (false && (++i < 100))
		       System.out.println("this wont be displayed");
		   System.out.println("if statement executed: " + i); // still 1
	       }
	   }

	   #+END_SRC
********** LtoD
	   #+BEGIN_SRC java
	   class LtoD {
	       public static void main(String[] args) {
		   long L;
		   double D;

		   D = 1000123285.0;
		   L = D; // ERROR: illegal

		   System.out.println("L and D: " + L + " " + D);
	       }
	   }

	   #+END_SRC
********** CastDemo
	   #+BEGIN_SRC java

	   class CastDemo {
	       public static void main(String[] args) {
		   double x, y;
		   byte b;
		   int i;
		   char ch;

		   x = 10.0;
		   y = 3.0;

		   i = (int) (x / y); // double to int
		   System.out.println("Integer outcome of x / y: " + i);

		   i = 100;
		   b = (byte) i;
		   System.out.println("Value of b: " + b);

		   i = 257;
		   b = (byte) i;
		   System.out.println("Value of b:" + b);

		   b = 88; // ASCII X
		   ch = (char) b;
		   System.out.println("ch: " + ch);
	       }
	   }

	   #+END_SRC
********** PromDemo
	   #+BEGIN_SRC java
	   class PromDemo {
	       public static void main(String[] args) {
		   byte b;
		   int i;

		   b = 10;
		   i = b * b;

		   b = 10;
		   b = (byte) (b * b);

		   System.out.println("i and b: " + i + " " + b);
	       }
	   }


	   #+END_SRC
********** UseCast
	   #+BEGIN_SRC java
	   class UseCast {
	       public static void main(String[] args) {
		   int i;

		   for (i = 0; i < 5; i++) {
		       System.out.println(i + " / 3: " + i / 3 );
		       System.out.println(i + " / 3 with fractions: "
					  + (double) i / 3);
		       System.out.println();
		   }
	       }
	   }


	   #+END_SRC
********* Try This
********** Try This 2-1 Sound
	   #+BEGIN_SRC java

	   class Sound {
	       public static void main(String args[]){
		   double dist;

		   dist = 7.2 * 1110;

		   System.out.println("The lightning is " + dist +
				      " feet away.");
	       }
	   }


	   #+END_SRC
********** Try This 2-1 Sound - Challenge
	   #+BEGIN_SRC java

	   #+END_SRC
********** Try This 2-2 LogicalOpTable
	   #+BEGIN_SRC java
	   class LogicalOpTable {
	       public static void main(String[] args) {
		   boolean p, q;

		   System.out.println("P\tQ\tAND\tOR\tXOR\tNOT");

		   p = true; q = true;
		   System.out.print(p + "\t" + q + "\t");
		   System.out.print((p&q) + "\t"  + (p|q) + "\t");
		   System.out.println((p^q) + "\t" + (!p));

		   p = true; q = false;
		   System.out.print(p + "\t" + q + "\t");
		   System.out.print((p&q) + "\t"  + (p|q) + "\t");
		   System.out.println((p^q) + "\t" + (!p));


		   p = false; q = true;
		   System.out.print(p + "\t" + q + "\t");
		   System.out.print((p&q) + "\t"  + (p|q) + "\t");
		   System.out.println((p^q) + "\t" + (!p));

		   p = false; q = false;
		   System.out.print(p + "\t" + q + "\t");
		   System.out.print((p&q) + "\t"  + (p|q) + "\t");
		   System.out.println((p^q) + "\t" + (!p));
	       }
	   }

	   #+END_SRC
********** Try This 2-2 LogicalOpTable - Challenge
	   #+BEGIN_SRC java

	   class LogicalOpTableChallenge {
	       public static void main(String[] args) {
		   boolean p, q;

		   System.out.println("P\tQ\tAND\tOR\tXOR\tNOT");

		   p = true; q = true;
		   if (p) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (p&q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (p|q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (p^q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (!p) System.out.print("1\t");
		   else System.out.print("0\t");

		   System.out.println();

		   p = true; q = false;

		   if (p) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (p&q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (p|q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (p^q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (!p) System.out.print("1\t");
		   else System.out.print("0\t");

		   System.out.println();

		   p = false; q = true;

		   if (p) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (p&q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (p|q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (p^q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (!p) System.out.print("1\t");
		   else System.out.print("0\t");

		   System.out.println();

		   p = false; q = false;

		   if (p) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (p&q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (p|q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (p^q) System.out.print("1\t");
		   else System.out.print("0\t");

		   if (!p) System.out.print("1\t");
		   else System.out.print("0\t");

	       }
	   }


	   #+END_SRC

******** Chapter 3
******** Chapter 4
********* Examples
********** VehicleDemo
	   #+BEGIN_SRC java
	   class Vehicle {
	       int passengers;
	       int fuelcap;
	       int mpg;
	   }

	   class VehicleDemo {
	       public static void main(String[] args) {
		   Vehicle minivan = new Vehicle();
		   int range;

		   minivan.passengers = 7;
		   minivan.fuelcap = 16;
		   minivan.mpg = 21;

		   range = minivan.fuelcap * minivan.mpg;
		   System.out.println("Minivan can carry " +  minivan.passengers +
				      " with a range of " + range);
	       }
	   }

	   #+END_SRC
********** TwoVehicle
	   #+BEGIN_SRC java

	   class Vehicle {
	       int passengers;
	       int fuelcap;
	       int mpg;
	   }

	   class TwoVehicles {
	       public static void main(String[] args) {

		   Vehicle minivan = new Vehicle();
		   Vehicle sportscar = new Vehicle();

		   int range, range2;

		   minivan.passengers = 7;
		   minivan.fuelcap = 16;
		   minivan.mpg = 21;


		   sportscar.passengers = 2;
		   sportscar.fuelcap = 14;
		   sportscar.mpg = 12;

		   range = minivan.fuelcap * minivan.mpg;
		   range2 = sportscar.fuelcap * sportscar.mpg;

		   System.out.println("Minivan can carry " +  minivan.passengers +
				      " with a range of " + range);

		   System.out.println("Sportscar can carry " + sportscar.passengers +
				      " with a range of " + range2);
	       }
	   }

	   #+END_SRC
********** AddMeth
	   #+BEGIN_SRC java

	   class Vehicle {
	       int passengers;
	       int fuelcap;
	       int mpg;

	       // Display the range
	       void range () {
		   System.out.println("Range is " + fuelcap * mpg);
	       }
	   }

	   class AddMeth {
	       public static void main(String[] args) {

		   Vehicle minivan = new Vehicle();
		   Vehicle sportscar = new Vehicle();

		   int range, range2;

		   minivan.passengers = 7;
		   minivan.fuelcap = 16;
		   minivan.mpg = 21;

		   sportscar.passengers = 2;
		   sportscar.fuelcap = 14;
		   sportscar.mpg = 12;

		   range = minivan.fuelcap * minivan.mpg;
		   range2 = sportscar.fuelcap * sportscar.mpg;

		   System.out.print("Minivan can carry " +  minivan.passengers +
				    ". ");

		   minivan.range(); // Display range of minivan

		   System.out.print("Sportscar can carry " + sportscar.passengers +
				    ". ");

		   sportscar.range(); // Display range of sportcar
	       }
	   }

	   #+END_SRC
********** RetMeth
	   #+BEGIN_SRC java

	   class Vehicle {
	       int passengers;
	       int fuelcap;
	       int mpg;

	       // Display the range
	       int range () {
		   return mpg * fuelcap;
	       }
	   }

	   class RetMeth {
	       public static void main(String[] args) {

		   Vehicle minivan = new Vehicle();
		   Vehicle sportscar = new Vehicle();

		   minivan.passengers = 7;
		   minivan.fuelcap = 16;
		   minivan.mpg = 21;

		   sportscar.passengers = 2;
		   sportscar.fuelcap = 14;
		   sportscar.mpg = 12;

		   System.out.println("Minivan can carry " +  minivan.passengers +
				      " with ranger of " + minivan.range() + " Miles");

		   System.out.print("Sportscar can carry " + sportscar.passengers +
				    " with ranger of " + sportscar.range() + " Miles");
	       }
	   }

	   #+END_SRC
********** IsFact
	   #+BEGIN_SRC java

	   class Factor {

	       boolean isFactor (int a, int b){
		   if ( (b % a) == 0) return true;
		   else return false;
	       }
	   }

	   class IsFact {
	       public static void main(String[] args) {

		   Factor x = new Factor();

		   if (x.isFactor(2, 20)) System.out.println("2 is factor");
		   if (x.isFactor(3, 20)) System.out.println("This wont be displayed");
	       }
	   }

	   #+END_SRC
********** VehicleDemo2
	   #+BEGIN_SRC java


	   class Vehicle {
	       int passengers;
	       int fuelcap;
	       int mpg;

	       // return the range
	       int range () {
		   return mpg * fuelcap;
	       }

	       double fuelneeded (int miles){
		   return (double) miles / mpg;
	       }
	   }

	   class CompFuel {
	       public static void main(String[] args) {

		   Vehicle minivan = new Vehicle();
		   Vehicle sportscar = new Vehicle();

		   double gallons;
		   int dist = 252;

		   minivan.passengers = 7;
		   minivan.fuelcap = 16;
		   minivan.mpg = 21;

		   sportscar.passengers = 2;
		   sportscar.fuelcap = 14;
		   sportscar.mpg = 12;

		   gallons = minivan.fuelneeded(dist);

		   System.out.println("To go " + dist + " miles minivan needs  " +
				      gallons + "gallons of fuel.");

		   System.out.println("To go " + dist + " miles sportcar needs  " +
				      gallons + "gallons of fuel.");
	       }
	   }
	   #+END_SRC
********** ConsDemo
	   #+BEGIN_SRC java


	   class MyClass {
	       int x;

	       MyClass () {
		   x = 10;
	       }
	   }

	   class ConsDemo {
	       public static void main(String[] args) {
		   MyClass t1 = new MyClass();
		   MyClass t2 = new MyClass();

		   System.out.println(t1.x + " " + t2.x);
	       }
	   }
	   #+END_SRC
********** VehConsDemo
	   #+BEGIN_SRC java

	   class Vehicle {

	       int passengers;
	       int fuelcap;
	       int mpg;

	       Vehicle (int p, int f, int m) {

		   passengers = p;
		   fuelcap = f;
		   mpg = m;
	       }

	       // return the range
	       int range () {

		   return mpg * fuelcap;
	       }

	       double fuelneeded (int miles){
		   return (double) miles / mpg;
	       }
	   }

	   class VehConsDemo {
	       public static void main(String[] args) {

		   // Construct complete vehicles
		   Vehicle minivan = new Vehicle(7, 16, 21);
		   Vehicle sportscar = new Vehicle(2, 14, 12);

		   double gallons;
		   int dist = 252;

		   gallons = minivan.fuelneeded(dist);

		   System.out.println("To go " + dist + " miles minivan needs  " +
				      gallons + " gallons of fuel.");

		   gallons = sportscar.fuelneeded(dist);

		   System.out.println("To go " + dist + " miles sportcar needs  " +
				      gallons + " gallons of fuel.");
	       }
	   }

	   #+END_SRC
********** DemoPwr
	   #+BEGIN_SRC java

	   class Pwr {
	       double b;
	       int e;
	       double val;

	       Pwr (double base, int exp) {
		   b = base;
		   e = exp;

		   val = 1;
		   if (exp == 0) return;
		   for (; exp > 0; exp--) val = val * base;
	       }

	       double get_pwr() {
		   return val;
	       }
	   }

	   class DemoPwr {
	       public static void main(String[] args) {
		   Pwr x = new Pwr(4.0, 2);
		   Pwr y = new Pwr(2.5, 1);
		   Pwr z = new Pwr(5.7, 0);

		   System.out.println(x.b + " raised to the " + x.e +
				      " power is " + x.get_pwr());

		   System.out.println(y.b + " raised to the " + y.e +
				      " power is " + y.get_pwr());

		   System.out.println(z.b + " raised to the " + z.e +
				      " power is " + z.get_pwr());
	       }
	   }
	   #+END_SRC
********* Try This
********** Try this 4-1 HelpClassDemo
	   #+BEGIN_SRC java
	   // Try this 4-1

	   // Convert the help system from Try This 3-3 into
	   // a Help Class

	   class Help {
	       void helpOn(int what) {
		   switch(what) {
		   case '1':
		       // System.out.println("The if:\n");
		       System.out.println("if(condition) statement;");
		       System.out.println("else statement;");
		       break;
		   case '2':
		       System.out.println("The switch:\n");
		       System.out.println("switch(expression) {");
		       System.out.println(" case constant:");
		       System.out.println("   statement sequence ");
		       System.out.println("    break;");
		       System.out.println("   // ...");
		       System.out.println("}");
		       break;
		   case '3':
		       System.out.println("The for:\n");
		       System.out.println("for(init; condition; iteration)");
		       System.out.println(" statement");
		       break;
		   case '4':
		       System.out.println("The while:\n");
		       System.out.println("while(condition) statement");
		       break;
		   case '5':
		       System.out.println("The do-while:\n");
		       System.out.println("do {");
		       System.out.println("   statement;");
		       System.out.println("} while (condition);");
		       break;
		   case '6':
		       System.out.println("The break:\n");
		       System.out.println("break; or break label;");
		       break;
		   case '7':
		       System.out.println("The continue:\n");
		       System.out.println("continue; or continue label;");
		       break;
		   }
		   System.out.println();
	       }

	       void showMenu() {
		   System.out.println("Help on:");
		   System.out.println("   1. if");
		   System.out.println("   2. switch");
		   System.out.println("   3. for");
		   System.out.println("   4. while");
		   System.out.println("   5. do-while");
		   System.out.println("   6. break");
		   System.out.println("   7. continue");
		   System.out.println("Choose one (q to quit): ");
	       }

	       boolean isValid(int ch) {
		   if(ch < '1' | ch > '7' & ch != 'q') return false;
		   else return true;
	       }
	   }

	   class HelpClassDemo {
	       public static void main(String[] args)
		   throws java.io.IOException {

		   char choice, ignore;
		   Help hlpobj = new Help();

		   for (;;) {
		       do {
			   hlpobj.showMenu();

			   choice = (char) System.in.read();

			   do {
			       ignore = (char) System.in.read();
			   } while(ignore != '\n');

		       } while( !hlpobj.isValid(choice));

		       if(choice == 'q') break;

		       System.out.println("\n");

		       hlpobj.helpOn(choice);
		   }
	       }
	   }


	   #+END_SRC
******** Chapter 5
********* Examples
********** ArrayDemo
	   #+BEGIN_SRC java

	   class ArrayDemo {
	       public static void main(String[] args) {
		   int sample[] = new int[10];
		   int i;

		   for (i = 0; i < 10; i = i + 1)
		       sample[i] = i;

		   for (i = 0; i < 10; i= i + 1)
		       System.out.println("This is sample[" + i + "]: " +
					  sample[i]);
	       }
	   }
	   #+END_SRC
********** MinMax
	   #+BEGIN_SRC java

	   class MinMax {
	       public static void main(String[] args) {
		   int nums[] = new int[10];
		   int min, max;

		   nums[0] = 99;
		   nums[1] = -10;
		   nums[2] = 100123;
		   nums[3] = 18;
		   nums[4] = -978;
		   nums[5] = 5623;
		   nums[6] = 463;
		   nums[7] = -9;
		   nums[8] = 287;
		   nums[9] = 49;

		   min = max = nums[0];

		   for (int i = 1; i < 10; i++) {
		       if(nums[i] < min) min = nums[i];
		       if(nums[i] > max) max = nums[i];
		   }

		   System.out.println("min and max:" + min + " " + max);
	       }
	   }


	   #+END_SRC
********** MinMax2
	   #+BEGIN_SRC java

	   class MinMax2 {
	       public static void main(String[] args) {
		   int nums[] = {99, -10, 100123, 18, -978,
				 5623, 463, -9, 287, 49};
		   int min, max;

		   min = max = nums[0];
		   for (int i = 1; i < 10; i++) {
		       if(nums[i] < min) min = nums[i];
		       if(nums[i] > max) max = nums[i];
		   }

		   System.out.println("min and max:" + min +b " " + max);
	       }
	   }


	   #+END_SRC
********** ArrayErr
	   #+BEGIN_SRC java

	   class ArrayErr {
	       public static void main(String[] args) {
		   int sample[] = new int[10];
		   int i;

		   // generate an array overrun
		   for (i = 0; i < 100; i = i+1)
		       sample[i] = i;
	       }
	   }

	   #+END_SRC
********** TwoD
	   #+BEGIN_SRC java

	   class TwoD {
	       public static void main(String[] args) {
		   int t, i;
		   int table[][] = new int[3][4];

		   for (t = 0; t < 3; ++t) {
		       for (i = 0; i < 4; ++i) {
			   table[t][i] = (t*4) +i +1;
			   System.out.println(table[t][i] + " ");
		       }
		       System.out.println();
		   }
	       }
	   }


	   #+END_SRC
********** Squares
	   #+BEGIN_SRC java

	   class Squares {
	       public static void main(String[] args) {
		   int sqrs[][] = {
		       {1, 1},
		       {2, 4},
		       {3, 9},
		       {4, 16},
		       {5, 25},
		       {6, 36},
		       {7, 49},
		       {8, 64},
		       {9, 81},
		       {10, 100}
		   };

		   int i, j;

		   for (i = 0; i < 10; i++) {
		       for (j = 0; j < 2; j++)
			   System.out.print(sqrs[i][j] + " ");
		       System.out.println();
		   }
	       }
	   }


	   #+END_SRC
********** AssignARef
	   #+BEGIN_SRC java

	   class AssignARef {
	       public static void main(String[] args) {
		   int i;

		   int nums1[] = new int[10];
		   int nums2[] = new int[10];

		   for (i = 0; i < 10; i++)
		       nums1[i] = i;

		   for (i = 0; i < 10; i++)
		       nums2[i] = i;

		   System.out.print("Here is nums1: ");
		   for (i = 0; i < 10; i++)
		       System.out.print(nums1[i] + " ");
		   System.out.println();

		   nums2 = nums1; // now num2 refers to nums1

		   System.out.print("Here is nums2 after assignment: ");
		   for (i = 0; i < 10; i++)
		       System.out.print(nums2[i] + " ");
		   System.out.println();

		   // now operate on nums1 array through nums2
		   nums2[3] = 99;

		   System.out.print("Here is nums1 after chang through nums2:");
		   for (i = 0; i < 10; i++)
		       System.out.print(nums1[i] + " ");
		   System.out.println();
	       }
	   }


	   #+END_SRC
********** LengthDemo
	   #+BEGIN_SRC java

	   class LengthDemo {
	       public static void main(String[] args) {
		   int list[] = new int[10];
		   int nums[] = { 1, 2, 3};
		   int table[][] = { // a variable-length table

		       {1, 2, 3},
		       {4, 5},
		       {6, 7, 8, 9}
		   };

		   System.out.println("length of list is " + list.length);
		   System.out.println("length of list is " + nums.length);
		   System.out.println("length of table is " + table.length);
		   System.out.println("length of table[0] is " + table[0].length);
		   System.out.println("length of table[1] is " + table[1].length);
		   System.out.println("length of table[2] is " + table[2].length);
		   System.out.println();

		   // use length to initialize list
		   for (int i = 0; i < list.length; i++)
		       list[i] = i * i;

		   System.out.print("Here is list: ");
		   // now use length to display list
		   for (int i = 0; i < list.length; i++)
		       System.out.print(list[i] + " ");
		   System.out.println();
	       }
	   }


	   #+END_SRC
********** ACopy
	   #+BEGIN_SRC java

	   class ACopy {
	       public static void main(String[] args) {

		   int i;
		   int nums1[] = new int[10];
		   int nums2[] = new int[10];

		   for (i = 0; i < nums1.length; i++)
		       nums1[i] = i;

		   // copy nums1 to nums2
		   if(nums2.length >= nums1.length)
		       for (i = 0; i < nums1.length; i++)
			   nums2[i] = nums1[i];

		   for (i = 0; i < nums2.length; i++)
		       System.out.println(nums2[i] + " ");
	       }
	   }


	   #+END_SRC
********** UpCase
	   #+BEGIN_SRC java

	   class UpCase {
	       public static void main(String[] args) {
		   char ch;

		   for (int i = 0; i < 10; i++) {
		       ch = (char) ('a' + i);
		       System.out.print(ch);

		       // This statement turns off the 6th bit.
		       ch = (char) ((int) ch & 65503); // ch is now uppercase

		       System.out.print(ch + " ");
		   }
	       }
	   }


	   #+END_SRC
********** ShowBits
	   #+BEGIN_SRC java

	   class ShowBits {
	       public static void main(String[] args) {
		   int t;
		   byte val;

		   val= 123;
		   for (t = 128; t > 0; t = t/2) {
		       if((val & t) != 0) System.out.print("1 ");
		       else System.out.print("0 ");
		   }
	       }
	   }


	   #+END_SRC
********** LowCase
	   #+BEGIN_SRC java

	   class LowCase {
	       public static void main(String[] args) {
		   char ch;

		   for (int i = 0; i < 10; i++) {
		       ch = (char) ('A' + i);
		       System.out.print(ch);

		       // This statement turns on the 6th bit.
		       ch = (char) ((int) ch | 32); // ch isnw lowercase

		       System.out.print(ch + " ");
		   }
	       }
	   }


	   #+END_SRC
********** Encode
	   #+BEGIN_SRC java

	   class Encode {
	       public static void main(String[] args) {
		   String msg = "This is a test";
		   String encmsg = "";
		   String decmsg = "";
		   int key = 88;

		   System.out.print("Original message");
		   System.out.println(msg);

		   // encode the message
		   for (int i = 0; i < msg.length(); i++)
		       encmsg = encmsg + (char) (msg.charAt(i) ^ key);

		   System.out.print("Encoded message: ");
		   System.out.println(encmsg);

		   // decode the message
		   for (int i = 0; i < msg.length(); i++)
		       decmsg = decmsg + (char) (encmsg.charAt(i) ^ key);

		   System.out.print("Decoded message: ");
		   System.out.println(decmsg);
	       }
	   }


	   #+END_SRC
********** NotDemo
	   #+BEGIN_SRC java

	   class NotDemo {
	       public static void main(String[] args) {
		   byte b = -34;

		   for (int t = 128; t > 0; t = t/2) {
		       if((b & t) != 0) System.out.print("1 ");
		       else System.out.print("0 ");
		   }
		   System.out.println();

		   // reverse all bits
		   b = (byte) ~b;

		   for (int t = 128; t > 0; t = t/2) {
		       if((b & t) != 0) System.out.print("1 ");
		       else System.out.print("0 ");
		   }
	       }
	   }


	   #+END_SRC
********** ShiftDemo
	   #+BEGIN_SRC java

	   class ShiftDemo {
	       public static void main(String[] args) {
		   int val = 1;

		   for (int i = 0; i < 8; i++) {
		       for (int t = 128; t > 0; t = t/2) {
			   if ((val & t) != 0) System.out.print("1 ");
			   else System.out.print("0 ");
		       }

		       System.out.println();
		       val = val << 1;	// left shift
		   }
		   System.out.println();

		   val = 128;

		   for (int i = 0; i < 8; i++) {
		       for (int t = 128; t > 0; t = t/2) {
			   if ((val & t) != 0) System.out.print("1 ");
			   else System.out.print("0 ");
		       }

		       System.out.println();
		       val = val >> 1;	// right shift
		   }
	       }
	   }


	   #+END_SRC
********** NoZeroDiv
	   #+BEGIN_SRC java

	   class NoZeroDiv {
	       public static void main(String[] args) {

		   int result;

		   for (int i = -5; i < 6; i++) {
		       result = i != 0 ? 100 / i : 0;
		       if(i != 0)
			   System.out.println("100 / " + i + " is " + result);
		   }
	       }
	   }


	   #+END_SRC
********** NoZeroDiv2
	   #+BEGIN_SRC java

	   class NoZeroDiv2 {
	       public static void main(String[] args) {

		   for (int i = -5; i < 6; i++)
		       if(i != 0 ? true : false)
			   System.out.println("100 / " + i +
					      " is " + 100 / i);
	       }
	   }
	   #+END_SRC
********* Try This
********** Try this 5-1 Bubbles
	   #+BEGIN_SRC java

	   /*
	     Try This 5-1

	     Demonstrate the Bubble sort.
	   ,*/

	   class Bubble {
	       public static void main(String[] args) {
		   int nums[] = {99, -10, 100123, 18, -978,
				 5623, 463, -9, 287, 49};

		   int a, b, t;
		   int size;

		   size = 10; // number of elements to sort

		   // display original array
		   System.out.println("Original array is:");
		   for (int i = 0; i < size; i++)
		       System.out.println(" " + nums[i]);
		   System.out.println();

		   // This is the Bubble sort.
		   for (a = 1; a < size; a++)
		       for (b = size-1; b >= a; b--) {
			   if(nums[b-1] > nums[b]) { // if out of order
			       // exchance elements
			       t = nums[b-1];
			       nums[b-1] = nums[b];
			       nums[b] = t;
			   }

		       }

		   // display sorted array
		   System.out.println("Sorted array is:");
		   for (int i = 0; i < size; i++)
		       System.out.println(" " + nums[i]);
		   System.out.println();
	       }
	   }


	   #+END_SRC
********** Try this 5-2 Queue
	   #+BEGIN_SRC java

	   class Queue {
	       char q[];
	       int putloc, getloc;

	       Queue(int size) {
		   q = new char[size];
		   putloc = getloc = 0;
	       }

	       void put(char ch){
		   if(putloc==q.length){
		       System.out.println(" - Queue is full.");
		       return;
		   }

		   q[putloc++] = ch;
	       }

	       char get() {
		   if(getloc == putloc) {
		       System.out.println(" - Queue is empty.");
		       return (char) 0;
		   }

		   return q[getloc++];
	       }
	   }


	   class QueueDemo {
	       public static void main(String[] args) {
		   Queue bigQ = new Queue(100);
		   Queue smallQ = new Queue(4);
		   char ch;
		   int i;

		   System.out.println("Using bigQ to store the alphabet.");

		   for (i = 0; i < 26; i++) {
		       bigQ.put((char) ('A' + i) );
		   }

		   // retrieve
		   System.out.println("Contents of bigQ: ");
		   for (i = 0; i < 26; i++) {
		       ch = bigQ.get();
		       if(ch != (char) 0) System.out.println(ch);
		   }

		   System.out.println("\n");


		   System.out.println("Using smallQ to generate errors.");
		   // Now
		   for (i = 0; i < 5; i++) {
		       System.out.println("Attempting to store " + (char) ('Z' - i));

		       smallQ.put((char) ('Z' - i));

		       System.out.println();
		   }
		   System.out.println();

		   // more errors on smallQ
		   System.out.println("Contets of smallQ: ");
		   for (i = 0; i < 5; i++) {
		       ch = smallQ.get();

		       if(ch != (char ) 0) System.out.println(ch);
		   }
	       }
	   }


	   #+END_SRC
********** Try this 5-3 A ShowBits Class
	   #+BEGIN_SRC java

	   /*
	     Try This 5-3
	     A class that displays the binary representation of a value
	   ,*/


	   class ShowBits {
	       int numbits;

	       ShowBits(int n){
		   numbits = n;
	       }

	       void show(long val){
		   long mask = 1;

		   // left-shift a 1 into the proper position
		   mask <<= numbits-1;

		   int spacer = 0;
		   for (; mask != 0; mask >>>= 1) {
		       if((val & mask) != 0) System.out.print("1");
		       else System.out.print("0");
		       spacer++;
		       if((spacer % 8) == 0){
			   System.out.print(" ");
			   spacer = 0;
		       }
		   }
		   System.out.println();
	       }
	   }


	   // Demonstrate ShowBits
	   class ShowBitsDemo {
	       public static void main(String[] args) {
		   ShowBits b = new ShowBits(8);
		   ShowBits i = new ShowBits(32);
		   ShowBits li = new ShowBits(64);

		   System.out.println("123 in binary: ");
		   b.show(123);

		   System.out.println("\n87987 in binary: ");
		   i.show(237658768);

		   // you can also show low-order bits of any integer
		   System.out.println("\nLow order 8 bits of 87987 in binary: ");
		   li.show(87987);
	       }
	   }


	   #+END_SRC

******** Chapter 6
********* Examples
********** AcessDemo
	   #+BEGIN_SRC java

	   class MyClass {
	       private int alpha; // private acess
	       public int beta; // public acess
	       int gamma; // default acess

	       /* Methods to acess alpha. It is OK f
		  of a class to acess a private member
		  of the same class.
	       ,*/


	       void setAlpha(int a) {
		   alpha = a;
	       }

	       int getAlpha() {
		   return alpha;
	       }
	   }

	   class AcessDemo {
	       public static void main(String[] args) {
		   MyClass ob = new MyClass();

		   /* Acess to alpha is allowed only through
		      its acessor methods. */
		   ob.setAlpha(-99);
		   System.out.println("ob.alpha is " + ob.getAlpha());

		   // You cannot acess alpha like this:
		   ob.alpha = 10; // Wrong! alpha is private!

		   // There are OK because beta and gamma are public.
		   ob.beta = 88;
		   ob.gamma = 99;
	       }
	   }


	   #+END_SRC
********** CallByValue
	   #+BEGIN_SRC java

	   class Test {
	       /* This method cause no change to the arguments
		  used in the call. */

	       void noChange(int i, int j) {
		   i = i + j;
		   j = -j;
	       }
	   }

	   class CallByValue {
	       public static void main(String[] args) {
		   Test ob = new Test();

		   int a = 15, b = 20;

		   System.out.println("a and b before call: " +
				      a + " " +b);

		   ob.noChange(a, b);

		   System.out.println("a and b after call: " +
				      a + " " + b);
	       }
	   }


	   #+END_SRC
********** PassObRef
	   #+BEGIN_SRC java

	   class Test {
	       int a, b;

	       Test(int i, int  j) {
		   a = i;
		   b = j;
	       }

	       void Change(Test ob) {
		   ob.a = ob.a + ob.b;
		   ob.b = -ob.b;
	       }
	   }

	   class PassObRef {
	       public static void main(String[] args) {
		   Test ob = new Test(15, 20);

		   System.out.println("ob.a and ob.b before call: " +
				      ob.a + " " + ob.b);

		   ob.Change(ob);

		   System.out.println("ob.a and ob.b after call: " +
				      ob.a + " " + ob.b);
	       }
	   }

	   #+END_SRC
********** ErrorMsg
	   #+BEGIN_SRC java

	   class ErrorMsg {
	       String msgs[] = {
		   "Output Error",
		   "Input Error",
		   "Disk Full",
		   "Index Out-Of-Bounds"
	       };

	       String getErrorMsg(int i) {
		   if(i >= 0 & i < msgs.length)
		       return msgs[i];
		   else
		       return "Invalid Error Code";
	       }
	   }

	   class ErrMsg {
	       public static void main(String[] args) {

		   ErrorMsg err = new ErrorMsg();

		   System.out.println(err.getErrorMsg(2));
		   System.out.println(err.getErrorMsg(19));
	       }
	   }


	   #+END_SRC
********** ErrInfo
	   #+BEGIN_SRC java

	   class Err {

	       String msg;
	       int severity;

	       Err(String m, int s) {
		   msg = m;
		   severity = s;
	       }
	   }

	   class ErrorInfo {

	       String msgs[] = {
		   "Output Error",
		   "Input Error",
		   "Disk Full",
		   "Index Out-Of-Bounds"
	       };

	       int howbad[] = { 3, 3, 2, 4};


	       Err getErrorInfo(int i) {
		   if(i >= 0 & i < msgs.length)
		       return  new Err(msgs[i], howbad[i]);
		   else
		       return new Err("Invalid Error Code", 0);
	       }
	   }

	   class ErrInfo {
	       public static void main(String[] args) {

		   ErrorInfo err = new ErrorInfo();
		   Err e;

		   e = err.getErrorInfo(2);
		   System.out.println(e.msg + " severity: " + e.severity);

		   e = err.getErrorInfo(19);
		   System.out.println(e.msg + " severity: " + e.severity);
	       }
	   }


	   #+END_SRC
********** Overload
	   #+BEGIN_SRC java

	   class Overload {
	       void ovlDemo() {
		   System.out.println("No parameters");
	       }

	       void ovlDemo(int a) {
		   System.out.println("One parameters: " + a);
	       }

	       int ovlDemo(int a, int b) {
		   System.out.println("Two parameters: " + a + " " + b);
		   return a + b;
	       }

	       double ovlDemo(double a, double b) {
		   System.out.println("Two double parameters: " +
				      a + " " + b);
		   return a + b;
	       }
	   }


	   class OverloadDemo {
	       public static void main(String[] args) {
		   Overload ob = new Overload();
		   int resI;
		   double resD;

		   ob.ovlDemo();
		   System.out.println();

		   resI = ob.ovlDemo(4, 6);
		   System.out.println("Result of ob.ovlDemo(4, 6): " + resI
				      + "\n");

		   resD = ob.ovlDemo(1.1, 2.32);
		   System.out.println("Result of ob.ovlDemo(1.1, 2.32): " + resD
				      + "\n");
	       }
	   }


	   #+END_SRC
********** Overload2
	   #+BEGIN_SRC java
	   class Overload2 {

	       void f(byte x) {
		   System.out.println("Inside f(byte): " + x);
	       }


	       void f(int x) {
		   System.out.println("Inside f(int): " + x);
	       }

	       void f(double x) {
		   System.out.println("Inside f(double): " + x);
	       }
	   }


	   class TypeConv {
	       public static void main(String[] args) {
		   Overload2 ob = new Overload2();

		   int i = 10;
		   double d = 10.1;

		   byte b = 99;
		   short s = 10;
		   float f = 11.5F;

		   ob.f(i);
		   ob.f(d);

		   ob.f(b);
		   ob.f(s);
		   ob.f(f);
	       }
	   }


	   #+END_SRC
********** OverloadConsDemo
	   #+BEGIN_SRC java

	   class MyClass {
	       int x;

	       MyClass() {
		   System.out.println("Inside MyClass().");
		   x = 0;
	       }

	       MyClass(int i) {
		   System.out.println("Inside MyClass(int).");
		   x = i;
	       }
	       MyClass(double d) {
		   System.out.println("Inside MyClass(double).");
		   x = (int) d;
	       }

	       MyClass(int i, int j) {
		   System.out.println("Inside MyClass(int, int).");
		   x = i * j;
	       }
	   }

	   class OverloadConsDemo {
	       public static void main(String[] args) {
		   MyClass t1 = new MyClass();
		   MyClass t2 = new MyClass(88);
		   MyClass t3 = new MyClass(17.23);
		   MyClass t4 = new MyClass(2, 4);

		   System.out.println("t1.x: " + t1.x);
		   System.out.println("t2.x: " + t2.x);
		   System.out.println("t3.x: " + t3.x);
		   System.out.println("t4.x: " + t4.x);
	       }
	   }


	   #+END_SRC
********** Summation
	   #+BEGIN_SRC java

	   class Summation {
	       int sum;

	       Summation(int num) {
		   sum = 0;
		   for (int i = 1; i <= num; i++)
		       sum += i;
	       }

	       Summation(Summation ob) {
		   sum = ob.sum;
	       }
	   }

	   class SumDemo {
	       public static void main(String[] args) {
		   Summation s1 = new Summation(5);
		   Summation s2 = new Summation(s1);

		   System.out.println("s1.sum: " + s1.sum);
		   System.out.println("s2.sum: " + s2.sum);
	       }
	   }


	   #+END_SRC
********** Factorial
	   #+BEGIN_SRC java

	   class Factorial {

	       int factR(int n) {
		   int result;

		   if(n==1) return 1;
		   result = factR(n-1) * n;
		   return result;
	       }

	       int factI(int n) {
		   int t, result;

		   result = 1;
		   for (t = 1; t <= n; t++) result *= t;
		   return result;
	       }
	   }


	   class Recursion {
	       public static void main(String[] args) {
		   Factorial f = new Factorial();

		   System.out.println("Factorials using recursive method.");
		   System.out.println("Factorial of 3 is " + f.factR(3));
		   System.out.println("Factorial of 3 is " + f.factR(4));
		   System.out.println("Factorial of 3 is " + f.factR(5));
		   System.out.println();

		   System.out.println("Factorials using iterative method.");
		   System.out.println("Factorial of 3 is " + f.factI(3));
		   System.out.println("Factorial of 3 is " + f.factI(4));
		   System.out.println("Factorial of 3 is " + f.factI(5));
	       }
	   }


	   #+END_SRC
********** StaticDemo
	   #+BEGIN_SRC java

	   class StaticDemo {

		       int x;
		       static int y;

		       int sum() {
			   return x + y;
		       }
		   }

		   class SDemo {
		       public static void main(String[] args) {

			   StaticDemo ob1 = new StaticDemo();
			   StaticDemo ob2 = new StaticDemo();

			   ob1.x = 10;
			   ob2.x = 20;
			   System.out.println("Of course, ob1.x and ob2.x " +
					      "are independent.");

			   System.out.println("ob1.x: " + ob1.x +
					      "\nob2.x. " + ob2.x);

			   System.out.println();

			   System.out.println("The static variable y is shared.");
			   StaticDemo.y = 100;
			   System.out.println("Set StaticDemo.y to 19.");

			   System.out.println("ob1.sum(): " + ob1.sum());
			   System.out.println("ob2.sum(): " + ob2.sum());
			   System.out.println();

			   StaticDemo.y = 100;
			   System.out.println("Change StaticDemo.y to 100");

			   System.out.println("ob1.sum(): " + ob1.sum());
			   System.out.println("ob2.sum(): " + ob2.sum());
			   System.out.println();
		       }
		   }


	   #+END_SRC
********** StaticMeth
	   #+BEGIN_SRC java

	   class StaticMeth {
	       static int val = 1024;

	       static int valDiv2() {
		   return val/2;
	       }
	   }

	   class SDemo2 {
	       public static void main(String[] args) {
		   System.out.println("val is " + StaticMeth.val);
		   System.out.println("StaticMeth.valDiv2(): " +
				      StaticMeth.valDiv2());

		   StaticMeth.val = 4;
		   System.out.println("val is " + StaticMeth.val);
		   System.out.println("StaticMeth.valDiv2(): " +
				      StaticMeth.valDiv2());
	       }
	   }


	   #+END_SRC
********** StaticBlock
	   #+BEGIN_SRC java

	   class StaticBlock {
	       static double rootOf2;
	       static double rootOf3;

	       static {
		   System.out.println("Inside static block.");
		   rootOf2 = Math.sqrt(2.0);
		   rootOf3 = Math.sqrt(3.0);
	       }

	       StaticBlock(String msg) {
		   System.out.println(msg);
	       }
	   }


	   class SDemo3 {
	       public static void main(String[] args) {
		   StaticBlock ob = new StaticBlock("Inside Constructor");

		   System.out.println("Square root of 2 is " +
				      StaticBlock.rootOf2);
		   System.out.println("Square root of 3 is " +
				      StaticBlock.rootOf3);
	       }
	   }


	   #+END_SRC
********** VarArgs
	   #+BEGIN_SRC java

	   // Demonstrate variable-length arguments.
	   class VarArg {

	       // vaTest() now uses a vararg.
	       static void vaTest(int ... v) {
		   System.out.print("Number of args: " + v.length + " Contents: ");

		   for(int x : v){
		       System.out.print(x + " ");

		       System.out.println();
		   }

	       }

	       public static void main(String[] args) {

		   // Notice how vaTest() can be called with a
		   // variable number of arguments.
		   vaTest(10);        // 1 arg
		   vaTest(1, 2, 3);   // 3 args
		   vaTest();          // no args
	       }
	   }


	   #+END_SRC
********** VarArgs2
	   #+BEGIN_SRC java

	   // Use varargs with standard arguments.
	   class VarArg2 {

	       // Here, msg is a normal parameter and v is a
	       // VarArg parameter
	       static void vaTest(String msg, int ... v) {
		   System.out.print(msg + v.length + " Contents: ");

		   for(int x : v)
		       System.out.print(x + " ");

		   System.out.println();
	       }

	       public static void main(String[] args) {
		   vaTest("One vaarg: ", 10);
		   vaTest("Three varargs: ", 1, 2, 3);
		   vaTest("No varags: ");
	       }
	   }


	   #+END_SRC
********** VarArgs3
	   #+BEGIN_SRC java


	   // Use varargs with standard arguments.
	   class VarArg3 {

	       static void vaTest(int ... v) {
		   System.out.print("vaTest(int ...): " +
				    "Number of args " + v.length +
				    " Contents: ");

		   for(int x : v)
		       System.out.print(x + " ");

		   System.out.println();
	       }


	       static void vaTest(boolean ... v) {
		   System.out.print("vaTest(boolean ...): " +
				    "Number of args " + v.length +
				    " Contents: ");

		   for(boolean x : v)
		       System.out.print(x + " ");

		   System.out.println();
	       }


	       static void vaTest(String msg, int ... v) {
		   System.out.print("vaTest(String, int ...): " +
				    msg + v.length +
				    " Contents: ");

		   for(int x : v)
		       System.out.print(x + " ");

		   System.out.println();
	       }

	       public static void main(String[] args) {
		   vaTest(1, 2, 3);
		   vaTest("Testing: ", 10, 20);
		   vaTest(true, false, false);
	       }
	   }

	   #+END_SRC
********** VarArg4 Ambiguity
	   #+BEGIN_SRC java

	   // Vaargs, overloading, and ambiguity.
	   //
	   // This program contains an error and will
	   // not compile!

	   class VarArg4 {

	       static void vaTest(int ... v) {
		   System.out.print("vaTest(int ...): " +
				    "Number of args " + v.length +
				    " Contents: ");

		   for(int x : v)
		       System.out.print(x + " ");

		   System.out.println();
	       }


	       static void vaTest(boolean ... v) {
		   System.out.print("vaTest(boolean ...): " +
				    "Number of args " + v.length +
				    " Contents: ");

		   for(boolean x : v)
		       System.out.print(x + " ");

		   System.out.println();
	       }

	       public static void main(String[] args) {
		   vaTest(1, 2, 3); // OK
		   vaTest(true, false, false); // OK
		   vaTest(); // Error: Ambiguous
	       }
	   }


	   #+END_SRC
********* Try This
********** Try 6-1 Queue - Control Acess
	    #+BEGIN_SRC java

	    class Queue {
		private char q[];
		private int putloc, getloc;

		Queue(int size) {
		    q = new char[size];
		    putloc = getloc = 0;
		}

		void put(char ch){
		    if(putloc==q.length){
			System.out.println(" - Queue is full.");
			return;
		    }

		    q[putloc++] = ch;
		}

		char get() {
		    if(getloc == putloc) {
			System.out.println(" - Queue is empty.");
			return (char) 0;
		    }

		    return q[getloc++];
		}
	    }

	    class QueueDemo {
		public static void main(String[] args) {
		    Queue bigQ = new Queue(100);
		    Queue smallQ = new Queue(4);
		    char ch;
		    int i;

		    System.out.println("Using bigQ to store the alphabet.");

		    for (i = 0; i < 26; i++) {
			bigQ.put((char) ('A' + i) );
		    }

		    // retrieve
		    System.out.println("Contents of bigQ: ");
		    for (i = 0; i < 26; i++) {
			ch = bigQ.get();
			if(ch != (char) 0) System.out.println(ch);
		    }

		    System.out.println("\n");

		    System.out.println("Using smallQ to generate errors.");
		    // Now
		    for (i = 0; i < 5; i++) {
			System.out.println("Attempting to store " + (char) ('Z' - i));

			smallQ.put((char) ('Z' - i));

			System.out.println();
		    }
		    System.out.println();

		    // more errors on smallQ
		    System.out.println("Contets of smallQ: ");
		    for (i = 0; i < 5; i++) {
			ch = smallQ.get();

			if(ch != (char ) 0) System.out.println(ch);
		    }
		}
	    }
	    #+END_SRC

********** Try 6-2 Queue - Construct Overload
	   #+BEGIN_SRC java

	   class Queue {
	       private char q[];
	       private int putloc, getloc;

	       Queue(int size) {
		   q = new char[size];
		   putloc = getloc = 0;
	       }

	       Queue(Queue ob) {
		   putloc = ob.putloc;
		   getloc = ob.getloc;
		   q = new char[ob.q.length];

		   for (int i = getloc; i < putloc; i++) {
		       q[i] = ob.q[i];
		   }
	       }

	       Queue(char a[]) {
		   putloc = 0;
		   getloc = 0;
		   q = new char[a.length];

		   for (int i = 0; i < a.length; i++) {
		       put(a[i]);
		   }
	       }

	       void put(char ch){
		   if(putloc==q.length){
		       System.out.println(" - Queue is full.");
		       return;
		   }

		   q[putloc++] = ch;
	       }

	       char get() {
		   if(getloc == putloc) {
		       System.out.println(" - Queue is empty.");
		       return (char) 0;
		   }

		   return q[getloc++];
	       }
	   }


	   class QDemo2 {
	       public static void main(String[] args) {

		   Queue q1 = new Queue(10);

		   char name[] = {'T', 'o', 'm'};

		   Queue q2 = new Queue(name);

		   char ch;
		   int i;

		   for (i = 0; i < 10; i++) {
		       q1.put((char) ('A' + i) );
		   }

		   Queue q3 = new Queue(q1);

		   System.out.print("Contents of q1: ");
		   for (i = 0; i < 10; i++) {
		       ch = q1.get();
		       System.out.print(ch);
		   }

		   System.out.println("\n");

		   System.out.print("Contents of q2: ");
		   for (i = 0; i < 3; i++) {
		       ch = q2.get();
		       System.out.print(ch);
		   }

		   System.out.println("\n");

		   System.out.print("Contents of q3: ");
		   for (i = 0; i < 10; i++) {
		       ch = q3.get();
		       System.out.print(ch);
		   }
	       }
	   }


	   #+END_SRC

****** JCR
******* Chapter 3 -
******** Examples
********* Array
	  #+BEGIN_SRC java

	  class Array {
	      public static void main(String[] args) {
		  int month_days[];
		  month_days = new int[12];
		  month_days[0] = 31;
		  month_days[1] = 28;
		  month_days[2] = 31;
		  month_days[3] = 30;
		  month_days[4] = 31;
		  month_days[5] = 30;
		  month_days[6] = 31;
		  month_days[7] = 31;
		  month_days[8] = 30;
		  month_days[9] = 31;
		  month_days[10] = 30;
		  month_days[11] = 31;
		  System.out.println("April has " + month_days[3] + " days.");
	      }
	  }

	  #+END_SRC
********* AutoArray
	  #+BEGIN_SRC java

	  class AutoArray {
	      public static void main(String[] args) {
		  int month_days[] = { 31, 28, 31, 30, 31, 30 , 31, 31, 30, 31, 30 , 31 };

		  System.out.println("April has " + month_days[3] + " days.");
	      }
	  }

	  #+END_SRC
********* Average
	  #+BEGIN_SRC java

	  class Average {
	      public static void main(String[] args) {
		  double nums[] = {10.1, 11.2 , 12.3, 13.4, 14.5};
		  double result = 0;
		  int i;

		  for (i = 0; i < 5; i++)
		      result = result + nums[i];

		  System.out.println("Average is " + result / 5);
	      }
	  }

	  #+END_SRC
********* TwoDArray
	  #+BEGIN_SRC java

	  class TwoDArray {
	      public static void main(String[] args) {
		  int twoD[][] = new int[4][5];
		  int i, j, k = 0;

		  for (i = 0; i < 4; i++)
		      for (j = 0; j < 5; j++) {
			  twoD[i][j] = k;
			  k++;
		      }

		  for (i = 0; i < 4; i++) {
		      for (j = 0; j < 5; j++)
			  System.out.print(twoD[i][j] + " ");
		      System.out.println();
		  }
	      }
	  }

	  #+END_SRC
********* TwoDAgain
	  #+BEGIN_SRC java

	  class TwoDAgain {
	      public static void main(String[] args) {
		  int twoD [][] = new int[4][];
		  twoD[0] = new int[1];
		  twoD[1] = new int[2];
		  twoD[2] = new int[3];
		  twoD[3] = new int[4];


		  int i, j, k = 0;

		  for (i = 0; i < 4; i++)
		      for (j = 0; j < i + 1; j++){
			  twoD[i][j] = k;
			  k++;
		      }

		  for (i = 0; i < 4; i++){
		      for (j = 0; j < i + 1; j++)
			  System.out.print () (twoD[i][j] + " ");
		      System.out.println();
		  }
	      }
	  }

	  #+END_SRC
********* Matrix
	  #+BEGIN_SRC java

	  class Matrix {
	      public static void main(String[] args) {
		  double m[][] = {
		      { 0*0, 1*0, 2*0, 3*0 },
		      { 0*1, 1*1, 2*1, 3*1},
		      { 0*2, 1*2, 2*2, 3*2},
		      { 0*3, 1*3, 2*3, 3*3},
		  };
		  int i, j;

		  for (i = 0; i < 4; i++){
		      for (j = 0; j < 4; j++)
			  System.out.print(m[i][j] + " ");
		      System.out.println();
		  }
	      }
	  }

	  #+END_SRC
********* ThreeDMatrix
	  #+BEGIN_SRC java

	  class ThreeDMatrix {
	      public static void main(String[] args) {
		  int threeD[][][] = new int[3][4][5];
		  int i, j, k;

		  for (i = 0; i < 3; i++)
		      for (j = 0; j < 4; j++)
			  for (k = 0; k < 5; k++)
			      threeD[i][j][k] = i * j * k;

		  for (i = 0; i < 3; i++){
		      for (j = 0; j < 4; j++) {
			  for (k = 0; k < 5; k++)
			      System.out.print(threeD[i][j][k] + " ");
			  System.out.println();
		      }
		  }
		  System.out.println();
	      }
	  }

	  #+END_SRC
********* VarDemo
	  #+BEGIN_SRC java

	  class VarDemo {
	      public static void main(String[] args) {

		  var avg = 10.0;
		  System.out.println("Value of avg: " + avg);

		  int var = 1;
		  System.out.println("Value of var: " + var);

		  var k = -var;
		  System.out.println("Value of k: " + k);
	      }
	  }

	  #+END_SRC

******* Chapter 4 - Operators
******** Examples
********* BasicMath
	  #+BEGIN_SRC java

	  class BasicMath {
	      public static void main(String[] args) {
		  System.out.println("Integer arithmetic");
		  int a = 1 + 1;
		  int b = a * 3;
		  int c = b / 4;
		  int d = c - a;
		  int e = -d;
		  System.out.println("a = " + a);
		  System.out.println("b = " + b);
		  System.out.println("c = " + c);
		  System.out.println("d = " + d);
		  System.out.println("e = " + e);

		  System.out.println("Floating Point Arithmetic");
		  double da = 1 + 1;
		  double db = da * 3;
		  double dc = db / 4;
		  double dd = dc - a;
		  double de = -dd;

		  System.out.println("da = " + da);
		  System.out.println("db = " + db);
		  System.out.println("dc = " + dc);
		  System.out.println("dd = " + dd);
		  System.out.println("de = " + de);
	      }
	  }

	  #+END_SRC
********* Modulus
	  #+BEGIN_SRC java

	  class Modulus {
	      public static void main(String[] args) {
		  int x = 42;
		  double y = 42.25;

		  System.out.println("x mod 10 = " + x % 10);
		  System.out.println("y mod 10 = " + y % 10);
	      }
	  }

	  #+END_SRC

********* OpEquals
	  #+BEGIN_SRC java

	  class OpEquals {
	      public static void main(String[] args) {
		  int a = 1;
		  int b = 2;
		  int c = 3;

		  a += 5;
		  b *= 4;
		  c %= 6;

		  System.out.println("a = " + a);
		  System.out.println("b = " + b);
		  System.out.println("c = " + c);
	      }
	  }

	  #+END_SRC

********* BitLogic
	  #+BEGIN_SRC java

	  class BitLogic {
	      public static void main(String[] args) {
		  String binary[] = {
		      "0000", "0001", "0010", "0011", "0100", "0110", "0111",
		      "1000", "1001", "1010", "1100", "1101", "1110", "1111"
		  };

		  int a = 3;
		  int b = 5;
		  int c = a | b;
		  int d = a & b;
		  int e = a ^ b;
		  int f = (~a & b)|(a & ~b);
		  int g = ~a & 0x0f;

		  System.out.println("                a = " + binary[a]);
		  System.out.println("                b = " + binary[b]);
		  System.out.println("                a|b = " + binary[c]);
		  System.out.println("                a&b = " + binary[d]);
		  System.out.println("                a^b = " + binary[e]);
		  System.out.println("                ~a&b|a&-b = "      + binary[f]);
		  System.out.println("                ~a = " + binary[g]);
	      }
	  }

	  #+END_SRC
******* Chapter 5 - Control Statements
******** Examples
******* Chapter 6 - Classes
******** BoxDemo
	 #+BEGIN_SRC java
	 class Box {
	     double width;
	     double height;
	     double depth;
	 }

	 class BoxDemo {
	     public static void main(String[] args) {
		 Box mybox = new Box();
		 double vol;

		 mybox.width = 10;
		 mybox.height = 20;
		 mybox.depth = 15;

		 vol = mybox.width * mybox.height * mybox.depth;

		 System.out.println("Volume is " + vol);
	     }
	 }

	 #+END_SRC
******** BoxDemo2
	 #+BEGIN_SRC java

	 class Box {
	     double width;
	     double height;
	     double depth;
	 }

	 class BoxDemo2 {
	     public static void main(String[] args) {
		 Box mybox1 = new Box();
		 Box mybox2 = new Box();
		 double vol;

		 mybox1.width = 10;
		 mybox1.height = 20;
		 mybox1.depth = 15;

		 mybox2.width = 3;
		 mybox2.height = 6;
		 mybox2.depth = 9;


		 vol = mybox1.width * mybox1.height * mybox1.depth;
		 System.out.println("Volume is " + vol);

		 vol = mybox2.width * mybox2.height * mybox2.depth;
		 System.out.println("Volume is " + vol);
	     }
	 }


	 #+END_SRC
******** BoxDemo3
	 #+BEGIN_SRC java

	 class Box {
	     double width;
	     double height;
	     double depth;

	     void volume() {
		 System.out.print("Volume is ");
		 System.out.println(width * height * depth);
	     }
	 }

	 class BoxDemo3 {
	     public static void main(String[] args) {
		 Box mybox1 = new Box();
		 Box mybox2 = new Box();

		 mybox1.width = 10;
		 mybox1.height = 20;
		 mybox1.depth = 15;

		 mybox2.width = 3;
		 mybox2.height = 6;
		 mybox2.depth = 9;

		 mybox1.volume();
		 mybox2.volume();

	     }
	 }


	 #+END_SRC
******** BoxDemo4
	 #+BEGIN_SRC java

	 class Box {
	     double width;
	     double height;
	     double depth;

	     double volume() {
		 return width * height * depth;
	     }
	 }

	 class BoxDemo4 {
	     public static void main(String[] args) {
		 Box mybox1 = new Box();
		 Box mybox2 = new Box();
		 double vol;

		 mybox1.width = 10;
		 mybox1.height = 20;
		 mybox1.depth = 15;

		 mybox2.width = 3;
		 mybox2.height = 6;
		 mybox2.depth = 9;

		 vol = mybox1.volume();
		 System.out.println("Volume is " + vol);

		 vol = mybox2.volume();
		 System.out.println("Volume is " + vol);

		 System.out.println("Volume is " + mybox1.volume());
		 System.out.println("Volume is " + mybox2.volume());
	     }
	 }


	 #+END_SRC
******** BoxDemo5
	 #+BEGIN_SRC java

	 class Box {
	     double width;
	     double height;
	     double depth;

	     double volume() {
		 return width * height * depth;
	     }

	     void setDim(double w, double h, double d){
		 width = w;
		 height = h;
		 depth = d;
	     }
	 }

	 class BoxDemo5 {
	     public static void main(String[] args) {
		 Box mybox1 = new Box();
		 Box mybox2 = new Box();
		 double vol;

		 mybox1.setDim(10, 20, 15);
		 mybox2.setDim(3, 6, 9);

		 System.out.println("Volume is " + mybox1.volume());
		 System.out.println("Volume is " + mybox2.volume());
	     }
	 }


	 #+END_SRC
******** BoxDemo7
	 #+BEGIN_SRC java

	 class Box {
	     double width;
	     double height;
	     double depth;

	     Box (double w, double h,double d) {
		 System.out.println("Constructing Box");
		 width = w;
		 height = h;
		 depth = d;
	     }
	     double volume() {
		 return width * height * depth;
	     }

	 }

	 class BoxDemo7 {
	     public static void main(String[] args) {
		 Box mybox1 = new Box(10, 20, 15);
		 Box mybox2 = new Box(3, 6, 9);

		 System.out.println("Volume is " + mybox1.volume());
		 System.out.println("Volume is " + mybox2.volume());
	     }
	 }


	 #+END_SRC
******** TestStack
	 #+BEGIN_SRC java

	 class Stack {
	     int stck[] = new int[10];
	     int tos;

	     // Initialize top-of-stack
	     Stack () {
		 tos = -1;
	     }

	     // Push an item onto the stack
	     void push (int item) {
		 if(tos == 9)
		     System.out.println("Stack if full.");
		 else
		     stck[++tos] = item;
	     }

	     // Pop an item from the stack
	     int pop () {
		 if(tos < 0){
		     System.out.println("Stack underflow");
		     return 0;
		 }
		 else
		     return stck[tos--];
	     }
	 }


	 class TestStack {
	     public static void main(String[] args) {
		 Stack mystack1 = new Stack();
		 Stack mystack2 = new Stack();

		 // push some numbers onto the stack
		 for (int i = 0; i < 10; i++) mystack1.push(i);
		 for (int i = 10; i < 20; i++) mystack2.push(i);


		 // pop those numbers off the stack
		 System.out.println("Stack in mystack1:");
		 for (int i = 0; i < 10; i++)
		     System.out.println(mystack1.pop());

		 System.out.println("Stack in mystack2:");
		 for (int i = 0; i < 10; i++)
		     System.out.println(mystack2.pop());
	     }
	 }

	 #+END_SRC
******** OverloadCons
	 #+BEGIN_SRC java

	 class Box {
	     double width;
	     double height;
	     double depth;


	     // constructor used when all dimensions specified
	     Box (double w, double h, double d) {
		 width = w;
		 height = h;
		 depth = d;
	     }


	     // construct used when no dimensions specified
	     Box () {
		 width = -1;
		 height = -1;
		 depth = -1;
	     }

	     // construct used when when cube is created
	     Box (double len) {
		 width = height = depth = len;
	     }

	     // compute and return volume
	     double volume () {
		 return width * height * depth;
	     }
	 }
	 class OverloadCons {
	     public static void main(String[] args) {
		 // create boxes using the various constructors
		 Box mybox1 = new Box(10,20,15);
		 Box mybox2 = new Box();
		 Box mycube = new Box(7);

		 double vol;

		 // get volume of first box
		 vol = mybox1.volume();
		 System.out.println("Volume of mybox1 is " + vol);

		 // get volume of second box
		 vol = mybox2.volume();
		 System.out.println("Volume of mybox2 is " + vol);

		 // get volume of cube
		 vol = mycube.volume();
		 System.out.println("Volume of mycube is " + vol);
	     }
	 }


	 #+END_SRC
******** PassArray
	 #+BEGIN_SRC java

	 // Use an array to pass a variable number of
	 // arguments to a method. This is the old-style
	 // approach to variable-length arguments

	 class PassArray {
	     static void vaTest (int v[]) {
		 System.out.print("Number of args: " + v.length + " Contents: ");

		 for(int x : v)
		     System.out.print(x + " ");
		 System.out.println();
	     }

	     public static void main(String[] args) {


		 // Notice how an array must be created so
		 // hold the arguments.
		 int n1[] = { 10 };
		 int n2[] = { 1, 2, 3};
		 int n3[] = { };

		 vaTest(n1); // 1 arg
		 vaTest(n2); // 3 args
		 vaTest(n3); // no args
	     }
	 }


	 #+END_SRC
******* Chapter 7 - A Closer Look at Methods and Classes
****** JVF
******* Chapter 2
******** InputTest
	 #+BEGIN_SRC java
	 import java.util.*;

	 /**
	    4   * This program demonstrates console input.
	    5   * @version 1.10 2004-02-10
	    6   * @author Cay Horstmann
	    7   */
	 public class InputTest
	 {
	     public static void main(String[] args)
	     {
		 Scanner in = new Scanner(System.in);

		 // get first input
		 System.out.print("What is your name? ");
		 String name = in.nextLine();

		 // get second input
		 System.out.print("How old are you? ");
		 int age = in.nextInt();

		 // display output on console
		 System.out.println("Hello, " + name + ". Next year, you'll be " + (age + 1));
	     }
	 }
	 #+END_SRC
******** Retirement
	 #+BEGIN_SRC java

	 import java.util.Scanner;

	 class retirement {
	     public static void main(String args[]) {

		 // read inputs
		 Scanner in = new Scanner(System.in);

		 System.out.print("How much money do you need to retire? ");
		 double goal = in.nextDouble();

		 System.out.print("How much money will you contribute every year? ");
		 double payment = in.nextDouble();

		 System.out.print("Interest rate in %: ");
		 double interestRate = in.nextDouble();

		 double balance = 0;
		 int years = 0;

		 // update account balance while goal isn't reached
		 while (balance > goal)
		     {
			 // this year's payment and interest
			 balance += payment;
			 double interest = balance * interestRate / 100;
			 balance += interest;
			 years++;
		     }

		 Smaystem.out.println("You can retire in " + years + " years.");
	     }
	 }

	 #+END_SRC
******** Retirement2
	 #+BEGIN_SRC java

	 import java.util.Scanner;

	 /**
	  ,* This program demonstrates a do/while loop.
	  ,* @version 1.20 2004-02-10
	  ,* @author Cay Horstmann
	  ,*/

	 class retirement2 {
	     public static void main(String args[]) {

		 Scanner in = new Scanner(System.in);

		 System.out.print("How much money will you contribute every year? ");
		 double payment = in.nextDouble();

		 System.out.print("Interest rate in %: ");
		 double interestRate = in.nextDouble();

		 double balance = 0;
		 int year = 0;

		 String input;

		 // update account balance while user isn't ready to retire
		 do
		     {
			 // add this year's payment and interest
			 balance += payment;
			 double interest = balance * interestRate / 100;
			 balance += interest;

			 year++;

			 // print current balance
			 System.out.printf("After year %d, your balance is %,.2f%n", year, balance);

			 // ask if ready to retire and get input
			 System.out.print("Ready to retire? (Y/N) ");
			 input = in.next();
		     }  while (input.equals("N"));
	     }
	 }

	 #+END_SRC
******** lotteryOdds
	 #+BEGIN_SRC java
	 import java.util.*;

	 /**
	  ,* This program demonstrates a for loop.
	  ,* @version 1.20 2004-02-10
	  ,* @author Cay Horstmann
	  ,*/

	 public class LotteryOdds
	 {
	     public static void main(String[] args)
	     {
		 Scanner in = new Scanner(System.in);

		 System.out.print("How many numbers do you need to draw? ");
		 int k = in.nextInt();

		 System.out.print("What is the highest number you can draw? ");
		 int n = in.nextInt();

		 /*
		  ,* compute binomial coefficient n*(n-1)*(n-2)*...*(n-k+1)/(1*2*3*...*k)
		  ,*/
		 int lotteryOdds = 1;
		 for (int i = 1; i <= k; i++)
		     lotteryOdds = lotteryOdds * (n - i + 1) / i;

		 System.out.println("Your odds are 1 in " + lotteryOdds + ". Good luck!");
	     }
	 }

	 #+END_SRC
******** BigIntegerTest
	 #+BEGIN_SRC java
	 import java.math.*;
	 import java.util.*;

	 /**
	  ,* This program uses big numbers to compute the odds of winning the grand prize in a lottery.
	  ,* @version 1.20 2004-02-10
	  ,* @author Cay Horstmann
	  ,*/

	 public class BigIntegerTest
	 {
	     public static void main(String[] args)
	     {
		 Scanner in = new Scanner(System.in);

		 System.out.print("How many numbers do you need to draw? ");
		 int k = in.nextInt();

		 System.out.print("What is the highest number you can draw? ");
		 int n = in.nextInt();

		 /*
		  ,* compute binomial coefficient n*(n-1)*(n-2)*...*(n-k+1)/(1*2*3*...*k)
		  ,*/

		 BigInteger lotteryOdds = BigInteger.valueOf(1);

		 for (int i = 1; i <= k; i++)
		     lotteryOdds = lotteryOdds.multiply(BigInteger.valueOf(n - i + 1)).divide(
											      BigInteger.valueOf(i));

		 System.out.println("Your odds are 1 in " + lotteryOdds + ". Good luck!");
	     }
	 }
	 #+END_SRC
******** LotteryDrawing
	 #+BEGIN_SRC java

	 import java.util.*;

	 /**
	  ,* This program demonstrates array manipulation.
	  ,* @version 1.20 2004-02-10
	  ,* @author Cay Horstmann
	  ,*/
	 public class LotteryDrawing
	 {
	     public static void main(String[] args)
	     {
		 Scanner in = new Scanner(System.in);

		 System.out.print("How many numbers do you need to draw? ");
		 int k = in.nextInt();

		 System.out.print("What is the highest number you can draw? ");
		 int n = in.nextInt();

		 // fill an array with numbers 1 2 3 . . . n
		 int[] numbers = new int[n];
		 for (int i = 0; i < numbers.length; i++)
		     numbers[i] = i + 1;

		 // draw k numbers and put them into a second array
		 int[] result = new int[k];
		 for (int i = 0; i < result.length; i++)
		     {
			 // make a random index between 0 and n - 1
			 int r = (int) (Math.random() * n);

			 // pick the element at the random location
			 result[i] = numbers[r];

			 // move the last element into the random location
			 numbers[r] = numbers[n - 1];
			 n--;
		     }

		 // print the sorted array
		 Arrays.sort(result);
		 System.out.println("Bet the following combination. It'll make you rich!");
		 for (int r : result)
		     System.out.println(r);
	     }
	 }

	 #+END_SRC
******** CompoundInterest
	 #+BEGIN_SRC java

	 /**
	  ,* This program shows how to store tabular data in a 2D array.
	  ,* @version 1.40 2004-02-10
	  ,*  Cay Horstmann
	  ,*/

	 public class CompoundInterest
	 {
	     public static void main(String[] args)
	     {
		 final double STARTRATE = 10;
		 final int NRATES = 6;
		 final int NYEARS = 10;

		 // set interest rates to 10 . . . 15%
		 double[] interestRate = new double[NRATES];

		 for (int j = 0; j < interestRate.length; j++)
		     interestRate[j] = (STARTRATE + j) / 100.0;

		 double[][] balances = new double[NYEARS][NRATES];

		 // set initial balances to 10000
		 for (int j = 0; j < balances[0].length; j++)
		     balances[0][j] = 10000;

		 // compute interest for future years
		 for (int i = 1; i < balances.length; i++)
		     {
			 for (int j = 0; j < balances[i].length; j++)
			     {
				 // get last year's balances from previous row
				 double oldBalance = balances[i - 1][j];

				 // compute interest
				 double interest = oldBalance * interestRate[j];

				 // compute this year's balances
				 balances[i][j] = oldBalance + interest;
			     }
		     }

		 // print one row of interest rates
		 for (int j = 0; j < interestRate.length; j++)
		     System.out.printf("%9.0f%%", 100 * interestRate[j]);

		 System.out.println();

		 // print balance table
		 for (double[] row : balances)
		     {
			 // print table row
			 for (double b : row)
			     System.out.printf("%10.2f", b);

			 System.out.println();
		     }
	     }
	 }
	 #+END_SRC
******** LotteryArray
	 #+BEGIN_SRC java


	 /**
	  ,* This program demonstrates a triangular array.
	  ,* @version 1.20 2004-02-10
	  ,* Cay Horstmann
	  ,*/

	 public class LotteryArray
	 {
	     public static void main(String[] args)
	     {
		 final int NMAX = 10;

		 // allocate triangular array
		 int[][] odds = new int[NMAX + 1][];
		 for (int n = 0; n <= NMAX; n++)
		     odds[n] = new int[n + 1];

		 // fill triangular array
		 for (int n = 0; n < odds.length; n++)
		     for (int k = 0; k < odds[n].length; k++)
			 {
			     /*
			      ,* compute binomial coefficient n*(n-1)*(n-2)*...*(n-k+1)/(1*2*3*...*k)
			      ,*/
			     int lotteryOdds = 1;
			     for (int i = 1; i <= k; i++)
				 lotteryOdds = lotteryOdds * (n - i + 1) / i;

			     odds[n][k] = lotteryOdds;
			 }

		 // print triangular array
		 for (int[] row : odds)
		     {
			 for (int odd : row)
			     System.out.printf("%4d", odd);
			 System.out.println();
		     }
	     }
	 }
	 #+END_SRC

******** ForDemo
	 #+BEGIN_SRC java

	 class ForDemo {
	     public static void main(String args[]) {
		 int count;

		 for (count = 0; count < 5; count++)
		     System.out.println("This is count: " + count);

		 System.out.println("Done");
	     }
	 }

	 #+END_SRC
******** BlockDemo
	 #+BEGIN_SRC java

	 class BlockDemo {
	     public static void main(String args[]) {
		 double i, j, d;

		 i = 5;
		 j = 10;

		 if (i != 0) {
		     System.out.println("i does not equal zero");
		     d = j /i;
		     System.out.println("j /d is: " + d);
		 }
	     }
	 }

	 #+END_SRC
******** GalToLitTable
	 #+BEGIN_SRC java

	 class GalToLitTable {
	     public static void main(String args[]) {
		 double gallons, liters;
		 int counter;

		 counter = 0;

		 for (gallons = 1; gallons <= 100; gallons++) {
		     liters = gallons * 3.7854;
		     System.out.println(gallons + " gallon is " +
					liters + " litters.");
		     counter++;
		     //
		     if (counter == 10) {
			 System.out.println();
			 counter = 0; //
		     }
		 }
	     }
	 }

	 #+END_SRC

*** Java Tools
***** Java Tools - Web Frameworks
      [[https://spring.io/][Spring]]
      [[https://vaadin.com/][Vaadin]]
***** Java Tools - ORM Frameworks
       [[http://hibernate.org/][Hibernate]]
       JDBC
***** Java Tools - REST

***** Java Tools - Java decompiler
      https://www.technotification.com/2018/10/5-best-java-decompilers.html/
***** Java Tools - Misc
      [[https://tomcat.apache.org/][Apache Tomcat]]
      [[http://wildfly.org/][Jboss/Wildfly]]
      SpotBugs
      [[https://docs.oracle.com/en/java/javase/11/tools/jlink.html][jlink]]
      [[https://docs.oracle.com/javase/9/tools/javapackager.htm#JSWOR719][javapackager]]
      https://sdkman.io/
***** Java Tools - Version management
      [[https://github.com/gcuisinier/jenv][jenv]]
      [[https://github.com/shyiko/jabba][jabba]]
***** Java Tools - Testing
      [[https://docs.seleniumhq.org/][Selenium]]
      [[junit.org][JUnit]]
      [[mockito.org][mockito]]
*** Java Commands/Features
    |                               |
    |-------------------------------|
    | [[https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/tooldescr006.html][The jcmd Utility ]]             |
    | [[https://openjdk.java.net/jeps/341][JEP 341: Default CDS Archives]] |

*** Java Skills
      |------------------------------------------------|
      | OOP (inheretince, polymorphism, encapsulation) |
      | Generics                                       |
      | Wrapper classes                                |
      | data structures, algorithms                    |
      | [[https://spring.io/][Spring]]                                         |
      | [[https://maven.apache.org/][Maven]]                                          |
      | [[https://jenkins.io/][Jenkis]]                                         |
      | [[http://www.jboss.org/][Jboss]]                                          |
      | [[https://www.oracle.com/technetwork/java/javaee/tech/persistence-jsp-140049.html][jpa]]                                            |
      | [[junit.org][JUnit]]                                          |
      | [[https://docs.seleniumhq.org/][Selenium]]
      | MVC                                            |
      | [[gradle.org][Gradle]]                                         |
      | [[http://hibernate.org/][Hibernate]]                                      |
      | SQL & relation database                        |
      | [[https://www.docker.com/][docker]]                                         |
      | [[json.org][Json]]                                           |
      | Web (JS, AngularJS...)                         |
      | [[https://vertx.io/][vertx]]                                          |
      | MVC                                            |
      | REST service (basic)                           |
      | [[mockito.org][mockito]]                                        |
      | Database design (Primary Key and Foreign Key). |
      | Design Patterns                                |
      | [[https://www.sonarsource.com/products/codeanalyzers/sonarjava.html][sonar]]                                          |
      | [[https://mantisbt.org/][mantisbt]]                                       |

*** Java Bad code Tips
    https://www.reddit.com/r/java/comments/apnj6j/what_are_various_red_flags_for_you_in_java_code/

*** Java Documentation
     https://docs.oracle.com/javase/specs/

     www.netlib.org/fdlibm

*** Java Blogs
      https://icedtea.classpath.org/bugzilla/

      https://spring.io/guides

      https://mjg123.github.io/

      https://vimeo.com/javazone
*** Java read later
    https://advancedweb.hu/2019/02/19/post_java_8/

    https://filippobuletto.github.io/solid-java/#srp-code-smells

    https://stackabuse.com/design-patterns-in-java/

    https://dev.to/aussieguy/a-quick-look-at-java-11s-httpclient-1f79

    https://medium.com/@adam_carroll/java-packager-with-jdk11-31b3d620f4a8

    https://jdk.java.net/jpackage/

    http://launch4j.sourceforge.net/

    https://steveperkins.com/using-java-9-modularization-to-ship-zero-dependency-native-apps/

    https://medium.com/azulsystems/using-jlink-to-build-java-runtimes-for-non-modular-applications-9568c5e70ef4

    https://vladmihalcea.com/14-high-performance-java-persistence-tips/

    https://jitpack.io/docs/

    https://enterprisersproject.com/article/2018/11/getting-started-kubernetes-5-misunderstandings-explained

    https://sdkman.io/install

    https://moocfi.github.io/courses/2013/programming-part-1/

    https://stackabuse.com/the-best-java-books-for-all-skill-levels/

    https://www.edx.org/course/fundamentals-java-ee-development-red-hat-jb083x

    https://okinskas.github.io/Java-Version-Management-on-Linux/

    https://www.javaworld.com/article/3314640/learn-java/java-101-functional-programming-for-java-developers-part-1.html#tk.rss_all

    https://blog.adversalabs.com/2018/10/29/our-experience-writing-a-vscode-extension/

    https://mjg123.github.io/2018/11/05/alpine-jdk11-images.html

    https://mjg123.github.io/2017/11/07/Java-modules-and-jlink.html

    https://mjg123.github.io/2018/05/26/Multi-Stage-Docker-Build-with-jlink.html

    https://mjg123.github.io/2017/10/02/JVM-startup.html

    https://mjg123.github.io/2017/10/04/AppCDS-and-Clojure.html

    https://mjg123.github.io/2017/10/16/Clojure-1.9-startup.html

    https://developers.redhat.com/blog/2018/11/05/migrating-from-oracle-jdk-to-openjdk-on-red-hat-enterprise-linux-what-you-need-to-know/

      The Z Garbage Collector by Erik Österlund: https://www.youtube.com/watch?v=7cWiwu7kYkE
********** Block
	   #+BEGIN_SRC java

	   // Objects can be passed to methods.
	   class Block {
	       int a, b, c;
	       int volume;

	       Block(int i, int j, int k) {
		   a = i;
		   b = j;
		   c = k;
		   volume = a * b *c;
	       }

	       // Return true if ob defines same block.
	       boolean sameBlock(Block ob) {
		   if((ob.a == a) & (ob.b == b) & (ob.c == c)) return true;
		   else return false;
	       }

	       // Return true if ob has same volume.
	       boolean sameVolume(Block ob) {
		   if(ob.volume == volume) return true;
		   else return false;
	       }
	   }

	   class PassOb {
	       public static void main(String args[]) {
		   Block ob1 = new Block(10, 2, 5);
		   Block ob2 = new Block(10, 2, 5);
		   Block ob3 = new Block(4, 5, 5);

		   System.out.println("ob1 same dimensions as ob2: " +
				      ob1.sameBlock(ob2));

		   System.out.println("ob1 same dimensions as ob3: " +
				      ob1.sameBlock(ob3));

		   System.out.println("ob1 same volume as ob3: " +
				      ob1.sameVolume(ob3));
	       }
	   }


	   #+END_SRC
********** VarArgs
	   #+BEGIN_SRC java

	   class VarArgs {

	       static void vaTest(int ... v) {
		   System.out.println("Numbers of args: " + v.length);
		   System.out.println("Contents: ");

		   for (int i = 0; i < v.length; i++)
		       System.out.println("  arg " + i + ": " +  v[i]);
		   System.out.println();
	       }

	       public static void main(String[] args) {

		   vaTest(10);
		   vaTest(1, 2, 3);
		   vaTest();
	       }
	   }


	   #+END_SRC
********** VarArgs2
	   #+BEGIN_SRC java

	   class VarArgs2 {

	       static void vaTest(String msg, int ... v) {
		   System.out.println(msg + v.length);
		   System.out.println("Contents: ");

		   for (int i = 0; i < v.length; i++)
		       System.out.println("  arg " + i + ": " +  v[i]);

		   System.out.println();
	       }

	       public static void main(String[] args) {

		   vaTest("One vararg: ", 10);
		   vaTest("Three vararg: ", 1, 2, 3);
		   vaTest("No vararg: ");
	       }
	   }

	   #+END_SRC
** [[https://www.python.org/][Python]]
*** Modules
    | Modules   |   |
    |-----------+---|
    | [[https://docs.python.org/3/library/shutil.html][shutil]]    |   |
    | [[https://docs.python.org/3/library/os.html][os]]        |   |
    | [[https://docs.python.org/3/library/os.path.html][os.path]]   |   |
    | [[https://docs.python.org/3/library/builtins.html][bultins]]   |   |
    | [[https://docs.python.org/3/library/sys.html][sys]]       |   |
    | importlib |   |

*** Features
    | Command                                        | description                                                                                      |   |
    |------------------------------------------------+--------------------------------------------------------------------------------------------------+---|
    | sys.ps1/ sys.ps2                               | variables that define the strings used as primary and secondary prompts                          |   |
    | sys.path                                       | list of strings that determines the interpreter’s search path for modules                        |   |
    | PYTHONPATH                                     |                                                                                                  |   |
    | importlib.reload()                             | reload modules in interpreter session                                                            |   |
    | dir()                                          | find out which names a module defines / no arguments: lists the names you have defined currently |   |
    | vars()                                         |                                                                                                  |   |
    | import builtins                                | list the names of built-in functions and variables                                               |   |
    | import inspect                                 | analyze functions...                                                                             |   |
    | itertools                                      |                                                                                                  |   |
    | argparse                                       |                                                                                                  |   |
    | pickle                                         | object serialization                                                                             |   |
    | dbm                                            |                                                                                                  |   |
    | unpacking assignment(comma)                    | x, = lst equal [x] = lst equal x, y = 1, 2                                                       |   |
    | list index as value in assignment              | var = [asd][0]                                                                                   |   |
    | args                                           |                                                                                                  |   |
    | kwargs                                         |                                                                                                  |   |
    | yield                                          |                                                                                                  |   |
    | collections.defaultdict                        |                                                                                                  |   |
    | itertools.product                              |                                                                                                  |   |
    | functools.lru_cache                            |                                                                                                  |   |
    | itertools                                      |                                                                                                  |   |
    | dunders                                        |                                                                                                  |   |
    | (__repr__, __init__, ...)                          |                                                                                                  |   |
    | decorators                                     |                                                                                                  |   |
    | classes                                        |                                                                                                  |   |
    | lambda                                         |                                                                                                  |   |
    | debug                                          |                                                                                                  |   |
    | hash                                           |                                                                                                  |   |
    | Unit tests                                     |                                                                                                  |   |
    | operator: attrgetter, itemgetter, methodcaller |                                                                                                  |   |
    | functools.partial                              |                                                                                                  |   |
    | metaclasses                                    |                                                                                                  |   |
    | getattr__ / __getattribute__                     |                                                                                                  |   |
    | operator overloading                           |                                                                                                  |   |
    | ast, inspect, dis                              |                                                                                                  |   |
    | pdb                                            | debuggin                                                                                         |   |
    | faulthandler                                   | dump python tracebacks                                                                           |   |
    | python -vv                                     | run python in verbose                                                                            |   |
    | python -I                                      | lock user customization                                                                          |   |
    | PYTHONHOME                                     |                                                                                                  |   |
    | from operator import or_                       | functional version of set union or                                                               |   |
    | from functools import reduce                   |                                                                                                  |   |
    | from itertools import chain                    |                                                                                                  |   |
*** Books
**** Python Crash Course
**** Automating
**** Fluent Python
*** PEPs
    - PEP 582 -- Python local packages directory
    - PEP 428 -- The pathlib module -- object-oriented filesystem paths
    - PEP 519 -- Adding a file system path protocol
    - PEP 443 -- Single dispatch generic functions
    - PEP 441 -- Execute zip file with py files inside as package
    - PEP 318 — Decorators for Functions and Methods
    - http://www.diegor.it/2017/06/15/the-must-read-pythons-peps/
*** Tools
**** build Tools
     https://github.com/SCons/scons
     https://github.com/pre-commit/pre-commit
     https://github.com/LINKIT-Group/pyshipper
**** code formatter
     https://github.com/psf/black

**** Browser tools
     http://chromedriver.chromium.org/downloads
**** Games Engine
     https://github.com/pvcraven/arcade

**** Misc
     https://github.com/pygobject/pycairo
     https://github.com/tonybaloney/wily
     https://github.com/python-mario/mario
     https://github.com/celery/celery
     https://github.com/cs01/pythonloc
     https://github.com/tqdm/tqdm
     https://github.com/dabeaz/thredo
     poetry
     tox
     pyenv
     pyinstaller

**** CLI
     https://gitlab.com/dslackw/colored
**** env
     https://github.com/pyenv/pyenv

**** Data
     https://github.com/numba/numba

**** Perfomance
     https://github.com/numba/llvmlite
     https://github.com/microsoft/Pyjion
*** Hacks
    | hack                     | eg             | description                                                                         |
    |--------------------------+----------------+-------------------------------------------------------------------------------------|
    | Unpacking Empty List     | *[]            | Return empty output                                                                 |
    | C's cast-like on the fly | type(EXP)(EXP) | type coercion just like in C, (float) 2, useful when you dont know what type EXP is |
*** Warning
    https://github.com/pypa/pip/issues/5599
*** Blogs
    https://julien.danjou.info/
*** PSF
    https://www.python.org/psf/contrib/contrib-form/
*** Read Later
**** Packaging
     https://docs.python-guide.org/writing/structure/
     https://dev.to/codemouse92/dead-simple-python-project-structure-and-imports-38c6
**** Argparse
     https://dusty.phillips.codes/2018/08/13/python-loading-pathlib-paths-with-argparse/
**** Misc
     tox
     nose

     https://www.artima.com/forums/flat.jsp?forum=106&thread=161207

     http://www.attrs.org/en/stable/why.html#data-classes

     https://docs.python-guide.org/writing/style/

     https://devblogs.microsoft.com/python/idiomatic-python-functions-versus-classes/

     https://old.reddit.com/r/learnpython/comments/d7o8qr/how_do_you_work_freelance_as_a_python_programmer/

     https://github.com/python-trio/trio

     https://glyph.twistedmatrix.com/2016/08/attrs.html

     https://realpython.com/command-line-interfaces-python-argparse/

     https://www.reddit.com/r/Python/comments/3p8m2s/what_did_you_automate_with_python/

     https://www.fullstackpython.com/best-python-resources.html

     https://docs.python-guide.org/

     https://docs.python.org/3/library/index.html

     https://bugs.python.org/

     [[https://www.youtube.com/watch?v=e4S8zfLdLgQ&list=PLLy4MeON3hKCtMvu4yA-DKRG_gsgRR1jM&index=45&t=0s][How the Internet Works for Developers - Pt 1 - Overview & Frontend]]

     https://treyhunner.com/2019/01/no-really-pathlib-is-great/
**** Blogs
     http://inventwithpython.com/blog/

**** Web Scrapping
     https://www.freecodecamp.org/news/web-scraping-101-in-python/
**** Code Style - Read later
     https://realpython.com/cpython-source-code-guide/
**** Sequences - Read later
     https://eli.thegreenplace.net/2011/11/28/less-copies-in-python-with-the-buffer-protocol-and-memoryviews
**** Authors
     | Author            |
     |-------------------|
     | Trey Hunner       |
     | Raymond Hettinger |
     | Jack Diederich    |

**** Videos
***** Worthy to watch
      | title                                             | @                                           |
      |---------------------------------------------------+---------------------------------------------|
      | Python Conferences Videos                         | http://www.pyvideo.org                      |
      | transforming code into beautiful idiomatic python | https://www.youtube.com/watch?v=OSGv2VnC0go |
      | Pycon                                             |                                             |
      | EuroPython Conference                             |                                             |

***** Still to watch
      |                                                                            |   |
      |----------------------------------------------------------------------------+---|
      | Andrey Vlasovskikh - The Story of Features Coming in Python 3.8 and Beyond |   |
**** TODO
****** TODO Dired Cli App: Fork Ranger and change it into dired
*** BackEnd Job - Priorities
    | Skill           | desc                             |
    |-----------------+----------------------------------|
    | Languages       | Python (+3yrs) - ...             |
    | Back-End        | Django (+2yrs) - ORM             |
    | REST API        | ...                              |
    | Database Engine | PostgreSQL - NoSQL - SQLAlchemy- |
    | Linux           | CLI Toolings -                   |
    | Git             | ... - GitHub                     |
    | Test Unit       | pytest ...                       |
    | Misc            | Nginx, Redis                     |
    | Education       | CS Bachelor’s degree             |
    | Nice to have    | AWS - Docker - Front-End - ...   |

*** Skills
    | Skills To learn                                                                         |
    |-----------------------------------------------------------------------------------------|
    | UniTest & Pytest                                                                        |
    | OOP & Class                                                                             |
    | dataclasses                                                                             |
    | p                                                                                       |
    | Python Interfaces                                                                       |
    | ContextManager                                                                          |
    | refactoring                                                                             |
    | exception system                                                                        |
    | recursion                                                                               |
    | REST API, docker, testing, etc. testing concepts, algorithms, databases, devops, ci/cd, |



    | Python related tools |
    |----------------------|
    | https://redash.io/   |
    | Django               |
    | Flask                |
    | SQL & Non-SQL        |
    | Docker               |
    | pyQT                 |
    | SQLAlquemy           |
    | Celery               |
    | Pytest               |
    | Agile                |
    | Scrum                |
    | PostgreSQL / MySQL   |
    | Redis                |
    | Ansible              |
    | ElasticSearch        |
    | Logstash             |
    | HTTP Request         |
    | API Rest             |
    | JSON                 |
    | Grafana              |
    | Postman              |
    | Buildout             |
*** Misc
    #+begin_src python
    phone_folder = Path( str("/run/user/1001/" + phone_id + "/SD
	card/Download/sent") )

    copyfile(this, Path(phone_folder) / file_name)
    copytree(this, phone_folder, dirs_exist_ok=True)

    def asd(*args):
	lst = args[0][1:]
	subprocess.run(['sudo', 'apt', args[0][0], *lst], check=True)

    asd(sys.argv[1:])

    # Create CLI commands
    parser = argparse.ArgumentParser(
	description=__doc__,
	prog=sys.argv[0],
	usage='lx <command> <subcommands>',
    )

    # Set CLI Commands
    parser.add_argument(
	'homer',
	help='Prepare home folders/files software',
    )

    parser.add_argument(
	'gitter',
	help='Clone/Pull group of git repositories',
    )

    # Collect CLI commands as dict(key:value)
    args = vars(parser.parse_args())

    # CLI Command call for specific function
    if args['homer'] == 'homer':
	home_setup()

    if args['gitter'] == 'gitter':
	file = Path(sys.argv[2])
	to = Path(sys.argv[3])

	gitter(file, to)


    class CliColors:
	""" Provide CLI's Font Colors """

	def __init__(self):
	    self.cli_color_red = '\033[31m'
	    self.cli_color_green = "\033[32m"
	    self.cli_color_blue = "\033[34m"
	    self.cli_color_purple = "\033[45m"
	    self.cli_color_bold = "\033[1m"
	    self.cli_color_reset = "\033[0m"

	def warning(self, message=None):
	    """ Warning Color Text Print """
	    print(f'{self.cli_color_red}{message}{self.cli_color_reset} \n')

	def success(self, message=None):
	    """ Success Color Text Print """
	    print(f'{self.cli_color_green}{message}{self.cli_color_reset} \n')

	def notify(self, message=None):
	    """ Notify Color Text Print """
	    print(f'{self.cli_color_purple}{message}{self.cli_color_reset} \n')

	def welcome(self, message=None):
	    """ Welcome Color Text Print """
	    print(f'{self.cli_color_blue}{message}{self.cli_color_reset} \n')

	def bold(self, message=None):
	    """ Bold Color Text Print """
	    print(f'{self.cli_color_bold}{message}{self.cli_color_reset} \n')


    def main():
	""" and, so it begins. """

	tools_install = ToolsPip()

	parser = argparse.ArgumentParser()
	subparsers = parser.add_subparsers()

	parser_echo = subparsers.add_parser(
	    "tools_python",
	    help="Pip install packages"
	)
	parser_echo.set_defaults(func=tools_install.tools_python)

	options = parser.parse_args()
	options.func()


    #+end_src
*** setup.py
    #+begin_src python
    setup(scripts=["bin/liz"],)
    #+end_src
** PHP
** CPP
*** CPP Best Practices
    http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines
*** CPP Errors
**** Source of errors
     • Poor specification: If we are not specific about what a program should do, we are unlikely to adequately examine the
     “dark corners” and make sure that all cases are handled (i.e., that every input gives a correct answer or an adequate
     error message).

     • Incomplete programs: During development, there are obviously cases that we haven’t yet taken care of. That’s
     unavoidable. What we must aim for is to know when we have handled all cases.

     • Unexpected arguments: Functions take arguments. If a function is given an argument we don’t handle, we have a
     problem. An example is calling the standard library square root function with –1.2: sqrt(–1.2). Since sqrt() of a double
     returns a double, there is no possible correct return value. §5.5.3 discusses this kind of problem.

     • Unexpected input: Programs typically read data (from a keyboard, from files, from GUIs, from network connections,
     etc.). A program makes many assumptions about such input, for example, that the user will input a number. What if the
     user inputs “aw, shut up!” rather than the expected integer? §5.6.3 and §10.6 discuss this kind of problem.

     • Unexpected state: Most programs keep a lot of data (“state”) around for use by different parts of the system. Examples
     are address lists, phone directories, and vectors of temperature readings. What if such data is incomplete or wrong? The
     various parts of the program must still manage. §26.3.5 discusses this kind of problem.

     • Logical errors: That is, code that simply doesn’t do what it was supposed to do; we’ll just have to find and fix such
     problems. §6.6 and §6.9 give examples of finding such problems.

*** CPP Embedded
*** CPP - Jobs Skills
    | SKILLS                                                                    |
    |---------------------------------------------------------------------------|
    | data structures                                                           |
    | algorithms                                                                |
    | math: calculus 3, linear algebra, differential equations                  |
    | automata theory                                                           |
    | software engineering                                                      |
    | GUI programming                                                           |
    | assembly language                                                         |
    | computer hardware classes (logic, architecture)                           |
    | build process of a C++ program (preprocessor, compiler, linker)           |
    | OOP.  architecting/designing anticipating future changes/problems         |
    | compilers (gcc, clang), CMake + Make/Ninja and GDB or a similar debugger. |
    | Scripting - Bash/Python                                                   |
    | Git                                                                       |
    | Automated testing.  unit tests                                            |
    | networking                                                                |

*** CPP Read Later
    https://caseymuratori.com/blog_0015
    http://www.elbeno.com/blog/?p=1598
    https://www.reddit.com/r/cpp/comments/c7nka1/employment_using_c/
*** CPP Compilers
**** Clang
* Tools
** DevOps
*** Cloud
    AWS
*** Read Later
    https://www.reddit.com/r/devops/comments/dq6nrc/monthly_getting_into_devops_thread_201911/

    https://aws.amazon.com/devops/what-is-devops/
