#+TITLE: Awk

* Summary
    :PROPERTIES:
    :TOC:      :include all :depth 3 :ignore this
    :END:
    :CONTENTS:
    - [[#progress][Progress]]
      - [[#books][Books]]
      - [[#sloc][SLOC]]
    - [[#packages][Packages]]
      - [[#gem][gem]]
      - [[#bundle][bundle]]
	- [[#outdated][outdated]]
	- [[#gem][gem]]
	- [[#install][install]]
	- [[#update][update]]
      - [[#irb][irb]]
	- [[#cli][cli]]
	- [[#inside][inside]]
      - [[#rspec][rspec]]
      - [[#unit-test][unit test]]
      - [[#pry][pry]]
    - [[#features][Features]]
      - [[#project-structure][project structure]]
      - [[#system-errors][System Errors]]
	- [[#usage][usage]]
      - [[#exceptions][exceptions]]
	- [[#errors][Errors]]
	- [[#usage][usage]]
      - [[#writable-object-attribute][writable object attribute]]
      - [[#multithreading][Multithreading]]
	- [[#usage][usage]]
      - [[#modules][modules]]
      - [[#continuation][continuation]]
      - [[#fibers][Fibers]]
	- [[#errors][errors]]
	- [[#usage][usage]]
      - [[#delimited-input][delimited input]]
      - [[#rake][rake]]
	- [[#usage][usage]]
      - [[#gem][gem]]
      - [[#variables][Variables]]
	- [[#class-variables][class variables]]
	- [[#global-variables][global variables]]
      - [[#self][self]]
      - [[#commentary][commentary]]
      - [[#defined][defined?]]
      - [[#iterators][iterators]]
      - [[#block-local-variables][block-local variables]]
      - [[#loops][loops]]
      - [[#statement-modifiers][statement modifiers]]
      - [[#comparison][comparison]]
      - [[#conditional][conditional]]
      - [[#class][class]]
	- [[#class][class]]
      - [[#append-][append <<]]
      - [[#blocks][blocks]]
      - [[#lambda][lambda]]
	- [[#how][How]]
	- [[#usage][Usage]]
      - [[#methods][methods]]
      - [[#yield][yield]]
      - [[#procs][procs]]
      - [[#operators][operators]]
      - [[#enumerable][enumerable]]
      - [[#enumerator][enumerator]]
	- [[#lazy][lazy]]
	- [[#each_car][each_car]]
	- [[#each][each]]
	- [[#to_enumenum_for][to_enum/enum_for]]
      - [[#inject][inject]]
      - [[#select][select]]
      - [[#succ][succ]]
      - [[#collect][collect]]
      - [[#freeze][freeze]]
      - [[#dup][dup]]
      - [[#dig][dig]]
      - [[#fetch][fetch]]
      - [[#tap][tap]]
      - [[#map][map]]
      - [[#pluck][pluck]]
      - [[#quoting][Quoting]]
      - [[#here-documents][here documents]]
      - [[#proc][proc]]
      - [[#do-end-as-param][do end as param]]
      - [[#array][array]]
      - [[#datetime][date/time]]
      - [[#lambda][lambda]]
      - [[#begin-rescue][begin rescue]]
      - [[#hash][hash]]
      - [[#range][range]]
      - [[#sets][sets]]
      - [[#gsub][gsub]]
      - [[#find][find]]
      - [[#map][map]]
      - [[#each_slice][each_slice]]
      - [[#lazy][lazy]]
      - [[#with_index][with_index]]
      - [[#enum_for][enum_for]]
      - [[#more][more]]
      - [[#concepts][Concepts]]
	- [[#iterator][Iterator]]
	- [[#methods][Methods]]
	- [[#enumerator][Enumerator]]
      - [[#instructions][Instructions]]
	- [[#rbenv][Rbenv]]
	- [[#misc][misc]]
    - [[#toolings][Toolings]]
    - [[#videos][Videos]]
    - [[#tests][Tests]]
      - [[#rspec][RSpec]]
      - [[#unit][Unit]]
    :END:
* Progress
** Books
| name                     | chapter | @                       | late | revision |
|--------------------------+---------+-------------------------+------+----------|
| Awk Programming Language |       1 | 1.5 Computing with A WK |      |          |

** LDC
| Source Code | folder | file | @ |
|-------------+--------+------+---|
|             |        |      |   |

* Features
** Types
*** numbers
*** strings
** syntax
- pattern, action, files
- only pattern
- only action
- one or multiples files
** eg
#+begin_src shell
    pattern action                files
awk '$3 > 0 { print $1, $2 * $3}' ~/emp.data

awk '{ print}' ~/emp.data

awk '$3 > 0' ~/emp.data

awk { print "total pay for", $1, "is", $2 * $3 }

$2 * $3 > 50 { printf("$%.2f for %s\n", $2 * $3, $1) }

#+end_src
** pattern
*** comparison
|    |   |
|----+---|
| == |   |
| >  |   |
| <  |   |
| >= |   |
| <= |   |
*** regular expresion
#+begin_src shell
awk '/Susie/ { print NR, $1, $3 }
#+end_src
*** combination
|    |     |
|----+-----|
| && | and |
| ]] | or  |
|    |     |

#+begin_src shell
$2 >= 4 || $3 >= 20
( $2 < 4 && $3 < 20)
#+end_src
*** data validation
#+begin_src shell
NF I= 3   { print $0, "number of fields is not equal to 3" }
$2 < 3.35 { print $0, "number of fields is not equal to 3" }
$2 < 3.35 { print SO, "rate is below minimum wage" }
$2 > 10   { print $0, "rate exceeds $10 per hour" }
#+end_src
** BEGIN END
** fields

|     |                                      |
|-----+--------------------------------------|
| $0  | whole line                           |
| $N  | field                                |
| NF  | number of fields and in current line |
| $NF | last input files of current line     |
| NR  | number of line                       |

** printf
#+begin_src shell
printf (format, value 1 , value 2 , ... , valueN)

{ printf("total pay for %s is $%.2f\n", $1, $2 * $3) }
#+end_src
** print

* Cli
