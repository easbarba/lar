#+TILE: Programas e Ferramentas - Anotacoes, Dicas e mais

* Sumario
  :PROPERTIES:
  :TOC:      :include all :depth 2 :ignore this
  :END:
:CONTENTS:
- [[#git][Git]]
  - [[#git-resources][Git Resources]]
  - [[#git-commands][Git Commands]]
  - [[#git-tips][Git Tips]]
  - [[#git---fixing-common-errors][Git - Fixing Common Errors]]
  - [[#git-read-later][Git read later]]
- [[#emacs][Emacs]]
  - [[#emacs-resources][Emacs Resources]]
  - [[#emacs-important-commands][Emacs Important Commands]]
  - [[#emacs-regexp][Emacs RegExp]]
  - [[#emacs-packages-brainstorm][Emacs Packages Brainstorm]]
- [[#servers][Servers]]
- [[#outros][Outros]]
- [[#onlines][Onlines]]
- [[#media][Media]]
  - [[#youtube-dl][Youtube-dl]]
  - [[#mpv][mpv]]
  - [[#ffmpeg][FFmpeg]]
- [[#browser][Browser]]
  - [[#vimium---emacs-bindings][Vimium - Emacs bindings]]
:END:
* [[https://git-scm.com/][Git]]
** Git Resources
   https://git-scm.com/docs

   https://medium.com/sweetmeat/how-to-keep-a-downstream-git-repository-current-with-upstream-repository-changes-10b76fad6d97

   http://gitready.com/intermediate/2009/02/13/list-remote-branches.html
** Git Commands
    | git command                              | description                                                           |
    |------------------------------------------+-----------------------------------------------------------------------|
    | log --pretty=oneline                     |                                                                       |
    | push                                     | Update remote refs along with associated objects                      |
    | commit                                   | Record changes to the repository, call editor                         |
    | add                                      | Add file contents to the index                                        |
    | remote                                   | Manage set of tracked repositories                                    |
    | revert                                   | Revert some existing commits                                          |
    | reset                                    | Reset current HEAD to the specified state                             |
    | commit -m "detailed commit"              |                                                                       |
    | push origin master                       |                                                                       |
    | log --statgit log --stat                 | abbreviated stats for each commit                                     |
    | diff --git $FILE                         |                                                                       |
    | log -p -2                                | difference (the patch output) introduced in each commit               |
    | log                                      | log in this project                                                   |
    | mv                                       | rename                                                                |
    | commit -a -m "commit message"            | commit all files and commit message                                   |
    | log --pretty=format:"%h - %an, %ar : %s" |                                                                       |
    | log --pretty=format:"%h %s" --graph      | adds a nice little ASCII graph                                        |
    | log --since=2.weeks                      | time-limiting                                                         |
    | log --author=user                        | filter on a specific author                                           |
    | log --grep                               | search for keywords in the commit messages                            |
    | git log -S function_name                 | last commit that added or removed a reference to a  specific function |
    | --since, --after                         | Limit the commits to those made after the specified date.             |
    | --until, --before                        | Limit the commits to those made before the specified date.            |
    | --no-merges                              | prevent the display of merge commits cluttering up your log history   |
    | --force-with-lease                       |                                                                       |

    | GIT eg                                                                                                              |
    |-----------------------------------------------------------------------------------------------------------------------|
    | git log --pretty="%h - %s" --author='Junio C Hamano' --since="2008-10-01" \   --before="2008-11-01" --no-merges -- t/ |
    |                                                                                                                       |

    | add    | Add file contents to the index.                         |
    | bisect | Find by binary search the change that introduced a bug. |
    | branch | List, create, or delete branches.                       |
    | checkout | Switch branches or restore working tree files. |

    |          |                                                |
    cherry  Find commits yet to be applied to upstream (branch on the remote).
    cherry-pick  Apply the changes introduced by some existing commits.
    clone  Clone a repository into a new directory.
    commit  Record changes to the repository.
    config  Get and set repository or global options.
    diff  Show changes between commits, commits and working tree, and so on.
    fetch  Download objects and refs from another repository.
    grep  Print lines matching a pattern.
    help  Display help information.
    log  Show commit logs.
    merge  Join two or more development histories together.
    mv  Move or rename a file, directory, or symlink.
    pull  Fetch from, or integrate with, another repository or a local branch.
    push  Update remote refs along with associated objects.
    rebase  Forward-port local commits to the updated upstream head.
    rerere  Reuse recorded resolution for merged conflicts.
    reset  Reset current HEAD to the specified state.
    revert  Revert some existing commits.
    rm  Remove files from the working tree and from the index.
    show  Show various types of objects.
    status  Show the working tree status.
    submodule  Initialize, update, or inspect submodules.
    subtree  Merge subtrees and split repositories into subtrees.
    tag  Create, list, delete, or verify a tagged object.
    worktree  Manage multiple working trees.
** Git Tips
*** Pull Request a specific commit
    #+BEGIN_SRC shell-script

    git remote add upstream https://github.com/upstream_github_username/upstream_github_repo_name.git

    git fetch --all
    git checkout -b my-single-change upstream/master
    git cherry-pick b50b2e7
    git push -u origin my-single-change
    #+END_SRC

*** Force reset Fork to upstream state
    #+BEGIN_SRC shell-script

    # local
    git remote add upstream https://github.com/some_user/some_repo
    git fetch upstream
    git checkout master
    git reset --hard upstream/master

    # remote
    git push origin master --force
    #+END_SRC
** Git - Fixing Common Errors
*** Git Push Error: insufficient permission for adding an object to repository
    cd .git/objects
    ls -al
    sudo chown -R yourname:yourgroup *
** Git read later
   https://chris.beams.io/posts/git-commit/
   [[https://www.learnenough.com/git-tutorial][Learn enough to be dangerous]]
* [[https://www.gnu.org/software/emacs/][Emacs]]
** Emacs Resources
   - Development Group: https://lists.gnu.org/archive/html/emacs-devel/
** Emacs Important Commands
   | Command                                       | Description                                                                                                                                           |
   |-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------|
   | dired-mark-extension                          | Mark all files with a certain extension for use in later commands.                                                                                    |
   | check-parens                                  | Check for unbalanced parentheses in the current buffer.                                                                                               |
   | ffap                                          | find file at point                                                                                                                                    |
   | ruler-mode                                    | (you can adjust the margins on the fly) neat.                                                                                                         |
   | skeletons                                     | the emacs built-in answer to yasnippets. The cool thing is they have a global "skeleton" and a mode specific.                                         |
   | org                                           | Org has a built in context mode (setq org-use-speed-commands t) where if you are on the first star certain things like n and p will navigate headers. |
   | C-u C-x                                       | ( executes the last macro and lets you put in more input. Extremely useful for when I forget to type C-n or whatever to link the macro.               |
   | redshank                                      |                                                                                                                                                       |
   | elint                                         |                                                                                                                                                       |
   | elp                                           |                                                                                                                                                       |
   | ert                                           |                                                                                                                                                       |
   | set-selective-display                         |                                                                                                                                                       |
   | hideshow                                      | folding sections                                                                                                                                      |
   | occur                                         |                                                                                                                                                       |
   | reveal-mode                                   |                                                                                                                                                       |
   | substitute-in-file-name                       |                                                                                                                                                       |
   | expand-file-name                              |                                                                                                                                                       |
   | string-match                                  |                                                                                                                                                       |
   | list-display-colors                           |                                                                                                                                                       |
   | read-file-name                                |                                                                                                                                                       |
   | read-directory-name                           | Read directory name, prompting with PROMPT and completing in directory DIR.                                                                           |
   | custom-reevaluate-setting                     | Reset the value of SYMBOL by re-evaluating its saved or standard value.                                                                               |
   | (info "(elisp) key binding conventions")      |                                                                                                                                                       |
   | M-x apropos RET print\                        | insert\                                                                                                                                               |
   | Compile el files conflict: find -name "*.elc" | xargs rm                                                                                                                                              |
   | var: system-configuration-options             | emacs enabled configure options                                                                                                                       |
   | url-hexify-string                             |                                                                                                                                                       |
   | artist-mode                                   | painting in emacs                                                                                                                                     |

** Emacs RegExp
   | regexp           | desc                          |
   |------------------+-------------------------------|
   | \(\<\w+-?\w+\>\) | match any "word-word" pattern |

** Emacs Packages Brainstorm
*** TODO EXWM notify dbus notification as tool-box
*** TODO EXWM status bar
    #+begin_src emacs-lisp
    (defun my-setup-header-line-format ()
      "Hide header line if required."
      (set-window-parameter (next-window) 'header-line-format
                            (unless (window-at-side-p (next-window) 'top)
                              'none)))

    (add-hook 'exwm-update-class-hook #'my-setup-header-line-format)

    (set-face-attribute 'header-line nil
                        :background "#000000"
                        :foreground "#cccccc"
                        :height 100)

    ;; See https://github.com/TatriX/good-line
    (defun good-line-format (left right)
      "Return a string of `window-width' length containing LEFT and RIGHT, aligned respectively."
      (let ((reserve (length right)))
        (when (and (display-graphic-p) (eq 'right (get-scroll-bar-mode)))
          (setq reserve (- reserve 3)))
        (concat
         left
         " "
         (propertize  " "
                      'display `((space :align-to (- (+ right right-fringe right-margin) ,(+ reserve 0)))))
         right)))

    (setq display-time-default-load-average nil)
    (setq display-time-interval 1)
    (setq display-time-format "%a %d/%m/%Y %H:%M:%S")
    (display-time-mode 1)

    (setq-default header-line-format
                  '(:eval (good-line-format
                           ;; Left
                           (when
                               (and (window-at-side-p nil 'top)
                                    (window-at-side-p nil 'left))
                             (format " [%s]" exwm-workspace-current-index))
                           ;; Right
                           (when (and (window-at-side-p nil 'top)
                                      (window-at-side-p nil 'right))
                             (format "CPU %s | MEM %s |%s| %s"
                                     (let ((cpu (format "%02d%%%%" my-cpu-usage)))
                                       (if (> my-cpu-usage 75)
                                           (propertize cpu 'font-lock-face '(:foreground "#ff2222"))
                                         cpu))
                                     (let* ((used (car my-mem-usage))
                                            (total (cdr my-mem-usage))
                                            (mem (format "%.2f/%.2f"  used total)))
                                       (if (> (/ used total) 0.75)
                                           (propertize mem 'font-lock-face '(:foreground "#ff2222"))
                                         mem))
                                     telega-mode-line-string
                                     display-time-string)))))

    ;; Install "systat" package via yor distro package manager
    (defvar my-cpu-usage 0
      "Current CPU usage percent.")

    (defun my-start-cpu-usage-process ()
      "Start `mstat' process updating `my-cpu-usage' variable."
      (when-let ((old-process (get-process "mpstat")))
        (kill-process old-process))
      (make-process :name "mpstat"
                    :command '("mpstat" "2")
                    :connection-type 'pipe
                    :filter (lambda (process output)
                              (let* ((last-column (car (last (split-string output))))
                                     (idle (cl-parse-integer last-column :junk-allowed t)))
                                (when idle
                                  (setq my-cpu-usage (- 100 idle)))))))


    (my-start-cpu-usage-process)

    (defvar my-mem-usage '(0 . 0)
      "Current MEM usage in GB (used . free).")

    (defun my-start-mem-usage-process ()
      "Start `free' process updating `my-cpu-usage' variable."
      (when-let ((old-process (get-process "free")))
        (kill-process old-process))
      (make-process :name "free"
                    :command '("free" "--mebi" "-s" "2")
                    :connection-type 'pipe
                    :filter (lambda (process output)
                              (let ((columns (split-string output)))
                                (let ((total (string-to-number (nth 7 columns)))
                                      (used (string-to-number (nth 8 columns)))
                                      (shared (string-to-number (nth 10 columns))))
                                  (setq my-mem-usage (cons (/ (+ used shared) 1024.0)
                                                           (/ total 1024.0))))))))

    (my-start-mem-usage-process)

    (add-hook 'window-configuration-change-hook #'my-setup-header-line-format)


    ;; X Windows Names
    ;; (defun exwm-rename-buffer-to-title ()
    ;;   (exwm-workspace-rename-buffer)
    ;;   (add-hook 'exwm-update-title-hook 'exwm-rename-buffer-to-title)
    #+end_src
*** TODO ffmpeg: trim audio
*** TODO ereader: fix toc, add feature "n" jump to next head
*** TODO package.el functional - Add fallback, pack per version...
*** TODO ido-everywhere - for real
**** TODO ido-popup > ido as completion similar to company but using all available ido packages as fuzzy match(flx)
*** TODO ido-quick-help > similar to company-quick-help
*** TODO echo-box > an eldoc-box for echo **messages** to pop up box
*** TODO Emacs Interface with system packages as emms,vc...
**** TODO vc-mode: Improve/Modernize - a real alternative to Magit
***** vc-mode: remove pass-sh
**** TODO Emacs default PDF viewer fix & add TOC discover feature
**** FFmpeg
**** kdeconnect
*** TODO Emacs Replace system packages as elfeed, nov...
**** LOWriter's .odt files: Editing from Emacs
*** TODO Org mode packages ideas
**** TODO Org package similar to Google docs collaborative: real time comments(using erc), save comments, pop-up box(eldoc-box) as we hover up comments
**** TODO epub-to-org: converting epubs to org package and more: reading progress, comments, TODO, thumbnails, agenda integration
**** TODO #+BEGIN_SRC: prettify it for better readibility
**** TODO org-mode: #+BEGIN_SRC: heading property that state every code under this parent heading are elisp code, should be tangled...
* Servers
   https://hadoop.apache.org/

   https://www.theforeman.org/

   https://linux.die.net/man/1/dstat
* Outros
  [[https://langserver.org/][Language Server Protocol]]
  [[Https://zeromq.org/][Zeromq]]
* Onlines
  https://www.urionlinejudge.com.br/judge/en/login

  https://projecteuler.net/

  http://typicalprogrammer.com/

  https://www.coderhood.com/5-problem-solving-skills-great-software-developers/

  https://onlinetexttools.com/

  https://devurls.com/
* Media
** Youtube-dl
*** Download from YT

    To list the available formats type:
    youtube-dl -F url

    Then choose the best one
    Example  720p : youtube-dl -f 22 url
*** Download audio from YT video
    youtube-dl -x --audio-format vorbis
    youtube-dl -x --audio-format flac

** mpv
*** IPC
    https://alexherbo2.github.io/config/mpv/control-mpv-through-command-line/
    https://github.com/mpv-player/mpv/blob/master/DOCS/man/ipc.rst
*** config eg
    https://github.com/mpv-player/mpv/blob/master/etc/input.conf
** FFmpeg
*** ffmpeg sound booster
    https://trac.ffmpeg.org/wiki

     # Audio Increase/Decrease
     ffmpeg -i input.flac -filter:a "volume=1.5" output.flac
     ffmpeg -i input.flac -af 'volume=1.5' output.flac

*** ffmpeg cut/trim audio/video
    - You can use the time offset parameter (-ss) to specify the start time stamp in HH:MM:SS.ms format
    while the -t parameter is for specifying the actual duration of the clip in seconds:

    ffmpeg -i input.mp4 -ss 00:00:50.0 -codec copy -t 20 output.mp4
*** ffmpeg video to audio
    ffmpeg -i input.mp4 output.flac
*** ffmpeg mic recording
     ffmpeg -f pulse -i default output.wav
*** ffmpeg read later
     https://www.labnol.org/internet/useful-ffmpeg-commands/28490/
*** ffmpeg -dvd ripper
    cat *.VOB > moviename.vob; ffmpeg -i moviename.vob -acodec libfaac -ac 2 -ab 128k -vcodec libx264 -vpre fast -crf 20 -threads 0 moviename.mp4
*** ffmpeg concat files
    ffmpeg -f concat -i mylist -c copy ap2-long.flac
* Browser
** Vimium - Emacs bindings
   #+BEGIN_SRC text

   unmap j
   unmap k
   unmap h
   unmap l
   unmap f
   unmap F
   unmap B
   unmap n
   unmap N
   unmap gg
   unmap G

   map n scrollDown
   map p scrollUp
   map b scrollLeft
   map f scrollRight
   map < scrollToTop
   map > scrollToBottom

   map B goBack
   map F goForward
   map s performFind
   map l LinkHints.activateMode
   mpa r performBackwardsFind

   #+END_SRC
