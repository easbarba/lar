#+TILE: Containers - Annotations

* Summary
  :PROPERTIES:
  :TOC:      :include all :depth 2 :ignore this
  :END:
:CONTENTS:
- [[#progresso][Progresso]]
- [[#features][Features]]
  - [[#container][container]]
  - [[#stopquitdetach][Stop/Quit/Detach]]
  - [[#run][run]]
  - [[#images][images]]
- [[#terms][Terms]]
- [[#podman][Podman]]
  - [[#docs][docs]]
  - [[#tricks][tricks]]
  - [[#fixes][fixes]]
- [[#docker][Docker]]
  - [[#fortschritt][Fortschritt]]
  - [[#dockerfile][Dockerfile]]
  - [[#traits][Traits]]
  - [[#commands][Commands]]
:END:
* Progresso
| books                     | chapter                                  | at                                              |
|---------------------------+------------------------------------------+-------------------------------------------------|
| Learn Docker Fundamentals | 4 Creating and Managing Container Images | The CMD and ENTRYPOINT keywords                 |
| Docker for Devs           | Sharing Containers Using Docker Hub      | Implementing a sample microservices application |

| SLOC   | @                 | file          | line |
|--------+-------------------+---------------+------|
| go     |                   |               |      |
| podman | cmd/podman/common | completion.go |      |

* Features
** container
*** ls
|    |                                                             |
|----+-------------------------------------------------------------|
| -h | display help                                                |
| -a | Show all the containers, default is only running containers |
| -q | containers ID                                               |
| -l |                                                             |
*** exec
|    |                           |
|----+---------------------------|
| -i | run process interactively |
| -t | provide tty               |
| -e | define env vars           |
| -d | run as daemon             |
*** attach
|         |   |
|---------+---|
| <image> |   |
*** logs
|            |   |
|------------+---|
| --tail <N> |   |
| --follow   |   |


*** inspect
|               |   |
|---------------+---|
| ID            |   |
| -f / --filter |   |
** Stop/Quit/Detach
|         |          |
|---------+----------|
| C-c     | stop all |
| C-p C-q | detach   |
|         |          |

** run
|        |   |
|--------+---|
| -d     |   |
| --name |   |
| -p     |   |

** images
* Terms
- kernel namespace & cgropus
- noisy-neighbor problem
- common vulnerabilities and exposures (CVEs)
- content trust
- man-in-the-middle (MITM)
* Podman
** docs
http://docs.podman.io/en/latest/index.html
** tricks
   - podman info | grep rootless
** fixes
*** "sudo -k -n podman version --format " exit status 1: sudo: a password is required
    Add your user to the 'sudoers' file: 'elxbarbosa ALL=(ALL) NOPASSWD: /usr/bin/podman'
*** user namespaces are not enabled in /proc/sys/kernel/unprivileged_userns_clone
    sudo sysctl -w kernel.unprivileged_userns_clone=1
* Docker
** Fortschritt
   |                       |                        |
   |-----------------------+------------------------|
   | Docker For Developers | Introduction to Docker |

** Dockerfile
** Traits
   - cgroups
   - use linux security primitives
   - prevent MITM attack
   - images are immutable
** Commands
   | command             | description                            |
   |---------------------+----------------------------------------|
   | login               |                                        |
   | container ls        |                                        |
   | images              |                                        |
   | pull <img>          |                                        |
   | ps                  |                                        |
   | run <img>           |                                        |
   | run -d <img>        |                                        |
   | run -dp 80:80 <img> |                                        |
   | stop <id>           |                                        |
   | rm $(docker ps -aq) | remove all images running              |
   | run --name <name>   |                                        |
   | run -rm             | clean up when the container exits      |
   | run -p              | port                                   |
   | exec -it            | run command in container interactively |
   |                     |                                        |
