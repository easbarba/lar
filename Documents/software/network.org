#+TITLE: Network

* Progress
|                   |                  |                                  |
|-------------------+------------------+----------------------------------|
| Computer Networks | Introduction     | 1.3.4 Metropolitan Area Networks |
| Comptia Network+  | 2 Network Tables | OSI 7 layer                      |

* Load balancing
* Subneting
* Models
** OSI Model
*** Concepts
- 7 layers
- works for almost every type of network, even extremely old and long-obsolete ones
*** Layers
**** Layer 7 Application
**** Layer 6 Presentation
**** Layer 5 Session
**** Layer 4 Transport
**** Layer 3 Network
**** Layer 2 Data Link
- Data Link layer
- Switches handle traffic using MAC addresses
- NIC is in the Data Link layer and the Physical layer
**** Layer 1 Physical
- defines the method of moving data between computers
- cabling and central box are part of the Physical layer
- doesnâ€™t care what data goes through
- it just moves the data from one system to another system
- NIC interface between the PC and the network
** TCP/IP
* Protocols
** HTTP
** HTTPS
** FTP
** SSL/TLS
** SSH
*** OpenSSH
    - ControlPersist
    - ssh-copy-id
* Physical
** Cable
*** UTP
- unshielded twisted pair
- contains four pairs of wires
*** central box
* Terms
  - hotspot
  - VOIP
  - IPTV
  - RFID
  - 2 family (p2p)
  - desktop sharing
** Mac Adress
** OSI layers
** TCP/IP
** NIC
** FCS
** PANs
Personal Area Networks let devices communicate over the range of a person.

- Bluetooth
** LAN
A Local Area Network is a private network that operates within and nearby
a single building such as a home, office, or factory.

- Access Point: AP
- IEEE 802.11: WIFI
- IEEE 802.3: Ethernet
- switch
- VLAN
** MAN
Metropolitan Area Networks
* Software
** ssh
*** --
end of command line flags

It tells ssh or any other valid shell command not to try to parse what comes after command line options

#+begin_src shell

ssh nixcraft@server1.cyberciti.biz -- command1 --arg1 --arg2

#+end_src

 This ensures that command1 will accept --arg1 and --arg2 (or -opt1) as command-line arguments.

** ip
** ifconfig
configure a network interface
** whois
** host
** dig
** iwd
  #+begin_src shell

  ip a
  iw dev
  ip link set wlp2s0 up

  iwlist scan
  #+end_src

  add to /etc/network/interfaces

  #+begin_src shell
  iface wlp2s0 inet dhcp
        wpa-ssid ESSID
        wpa-psk PASSWORD
  #+end_src

  Bring up your interface and verify the connection:

  #+begin_src shell
  ifup wlp2s0
  iw wlp2s0 link
  ip a
  #+end_src
** dhcpd
** iw
** wpa_supplicant
** curl
curl - transfer a URL

|         |   |
|---------+---|
| -v <ip> |   |
| -<N>    |   |

*** read local file
#+begin_src shell-script
curl file:///home/user/.bashrc
#+end_src

** nmap
** nmcli
|                               |                                                                |
|-------------------------------+----------------------------------------------------------------|
| radio wifi on                 | Enable Your Wi-Fi Device                                       |
| dev status                    | Status                                                         |
| dev wifi list                 | Lisit available SSID                                           |
| dev wifi connect <SSID>       | connect to SSID                                                |
| --ask dev wifi connect <SSID> | password is provided in a manager to avoid dirty shell history |
| con show                      | list saved connections                                         |
| con down <SSID>               | disconnect of SSID                                             |
| con up <SSID>                 | reconnect to SSID                                              |
|                               |                                                                |

network manager wont work if /etc/network/interface is set to any device, remove it and procced again

** nslookup
** route
** netstat
|        |   |
|--------+---|
| -natp  |   |
| -tulpn |   |
** telnet
** rlogin
** tracerout
