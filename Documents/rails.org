#+TILE: Ruby on Rails - Study Annotations

* Summary
  :PROPERTIES:
  :TOC:      :include all :depth 3 :ignore this
  :END:
:CONTENTS:
- [[#progress][Progress]]
  - [[#books][Books]]
  - [[#sloc][SLOC]]
- [[#cli][Cli]]
  - [[#database][Database]]
  - [[#misc][Misc]]
  - [[#tasks-rake][Tasks (rake)]]
  - [[#models][Models]]
  - [[#console-rails-console][Console (rails console)]]
  - [[#env][ENV]]
- [[#logger][Logger]]
- [[#active-record][Active Record]]
  - [[#associations][Associations]]
  - [[#validations][Validations]]
  - [[#migrations][Migrations]]
  - [[#callbacks][Callbacks]]
  - [[#query-interface][Query Interface]]
  - [[#find][Find]]
    - [[#sql-syntax][SQL Syntax]]
    - [[#array-condition][Array Condition]]
    - [[#association-proxies][Association Proxies]]
    - [[#more][more]]
  - [[#named-scope][Named Scope]]
- [[#database][Database]]
- [[#views][Views]]
- [[#controller][Controller]]
- [[#models][Models]]
  - [[#fat-models][Fat models]]
- [[#tests][Tests]]
  - [[#rspec][RSpec]]
  - [[#unit][Unit]]
- [[#rest][REST]]
- [[#json][JSON]]
- [[#traits][Traits]]
- [[#i18n][i18n]]
- [[#models][Models]]
- [[#misc][Misc]]
- [[#priorities][Priorities]]
:END:
* Progress
** Books
   | Books                | Chapter                                       | @                | late | revision |
   |----------------------+-----------------------------------------------+------------------+------+----------|
   | Beginning Rails 6    | Advanced Active Record: Enhancing Your Models | Making Callbacks |      |          |
   | Active Record Basics |                                               |                  |      |          |
   | Raisl Style Guide    | Controllers: Rendering                        |                  |      |          |

** SLOC
   | Project | folder                                                    | file           | @ |
   |---------+-----------------------------------------------------------+----------------+---|
   | rails   | rails/activerecord/lib/active_record/associations/builder | association.rb |   |

* Cli
** Database
   | what     | how                                                                    | desc                                              |
   |----------+------------------------------------------------------------------------+---------------------------------------------------|
   | database | –d or --database=                                                      | use the database management system of your choice |
   |          | db:create:all                                                          |                                                   |
   |          | db:create                                                              |                                                   |
   |          | dbconsole                                                              |                                                   |
   |          | db:migrate                                                             |                                                   |
   |          | new <name>                                                             |                                                   |
   | models   | generate model <Name>                                                  |                                                   |
   |          | destroy controller articles                                            |                                                   |
   |          | destroy model Artile                                                   |                                                   |
   |          | generate scaffold Article title:string body:text published_at:datetime |                                                   |
   |          | db:system:change                                                       | switch databases                                  |
   |          | db:rollback                                                            |                                                   |
   |          | db:seed                                                                |                                                   |
   |          |                                                                        |                                                   |

** Misc
   | what       | how         | desc |
   |------------+-------------+------|
   | destroy    | destroy / d |      |
   | belongs_to |             |      |

** Tasks (rake)
   | what | how | desc |
   |------+-----+------|
   |      |     |      |

** Models
   | what   | how                                                                    | desc |
   |--------+------------------------------------------------------------------------+------|
   | models | generate model <Name>                                                  |      |
   |        | destroy controller articles                                            |      |
   |        | destroy model Artile                                                   |      |
   | a      |                                                                        |      |
   |        | generate scaffold Article title:string body:text published_at:datetime |      |
   |        |                                                                        |      |

** Console (rails console)
   | what              | how                                                                | desc                                                                                                                               |
   |-------------------+--------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------|
   | create            | create(title: "foo", body: "bar", published_at: '2020-01-31')      | create new and save to db                                                                                                          |
   | save              | a.save  / a.save!                                                  | save object to db / save and show errors                                                                                           |
   | new               | a.new                                                              | create an empty object                                                                                                             |
   | count             | A.count                                                            |                                                                                                                                    |
   | find              | A.find(3) / A.find([4,5])                                          |                                                                                                                                    |
   | first             | A.first   / A.first.title                                          |                                                                                                                                    |
   | last              | A.last                                                             |                                                                                                                                    |
   | all               | A.all / A.all.size / A.all.each { \a\ puts a.title }               | relational collection                                                                                                              |
   | order             | A.order(:order) / A.order(:order :desc)                            | order per title / order descedent                                                                                                  |
   | where             | A.where(title: 'foo')                                              |                                                                                                                                    |
   | update_attributes | update_attributes(title: "foo", published_at: 1.day.ago)           |                                                                                                                                    |
   | find_or_create_by |                                                                    | find or if none is found create a db anew                                                                                          |
   | <<                | a.x << x                                                           |                                                                                                                                    |
   | delete            |                                                                    | don’t instantiate or perform callbacks on the object they’re deleting. They remove the row immediately from the database.          |
   | destroy           | A.destroy(1) / .destroy([3,4])                                     | finds a single row first and then deletes the row /works on the instance                                                           |
   | delete_by         |                                                                    |                                                                                                                                    |
   | errors            | a.errors.any? / a.errors.full_messages / a.errors.messages[:title] |                                                                                                                                    |
   |                   | a.valid?                                                           |                                                                                                                                    |
   | reload            |                                                                    | reloads the Rails application environment within your console session. You need to call it when you make changes to existing code. |
   | routes --expanded |                                                                    |                                                                                                                                    |
   | byebug            |                                                                    |                                                                                                                                    |

** ENV
   |   |                      |   |
   |---+----------------------+---|
   |   | RAILS_ENV=production |   |
* Logger
  - live log feed: tail -f log/development.log

  #+begin_src ruby
  Rails.logger.debug "This will only show in development"
  Rails.logger.warn "This will show in all environments"
  #+end_src

* Active Record
  - Single-Table Inheritance
** Associations
   |                         |                                        |
   |-------------------------+----------------------------------------|
   | has_many                |                                        |
   | has_one                 |                                        |
   | belongs_to              | goes in the class with the foreign key |
   | many_to_many            |                                        |
   | has_and_belongs_to_many |                                        |
** Validations
** Migrations
** Callbacks
** Query Interface
** Find
*** SQL Syntax
    #+begin_src ruby
    Obj.where(title: 'AwesomeWM is really awesome')
    #+end_src

*** Array Condition
    #+begin_src ruby
    Article.where("published_at < ?", Time.now)
    Article.where("published_at < ?", Time.now).to_sql # inspect the issued SQL statement

    Article.where("title LIKE :search OR body LIKE :search", {search: '%association%'})
    #+end_src

*** Association Proxies
    - Chain together multiple calls to Active Record
    #+begin_src ruby

    #+end_src
*** more
    #+begin_src ruby
    Article.order("published_at DESC")
    Article.limit(1)
    Article.joins(:comments)
    Article.includes(:comments)
    Article.order("title DESC").limit(2)
    #+end_src
** Named Scope
   #+begin_src ruby
   scope :published, -> { where.not(published_at: nil) }
   scope :draft, -> { where(published_at: nil) }
   #+end_src
* Database
  | it    | desc                                                     |
  |-------+----------------------------------------------------------|
  | seeds | which defines some data you always need in your database |
  |       |                                                          |

* Views
* Controller
* Models
** Fat models
   An intelligent model like this is often called fat. Instead of performing model-related logic in
   other places (i.e., in controllers or views), you keep it in the model, thus making it fat. This
   makes your models easier to work with and helps your code stay DRY.
* Tests
** RSpec
** Unit
* REST
* JSON
* Traits
  - Active Records: Ruby object-relational mapping (ORM) library
  - root_path
* i18n
  - i18n.t()
  - i18n.l()
* Models
  | what   | $ | ...         |
  |--------+---+-------------|
  | Models |   | Camel-Cased |
  |        |   |             |
* Misc
  HTTP status codes: Rack::Utils::HTTP_STATUS_CODES
* Priorities
  - TDD BDD
  - Rails / MVC
  - PostgreSQL
  - Docker/Kubernetes
  - Redis/SideKick/
  - MicroServices
  - AWS
  - Circle CI
  - REST
