#+TILE: PostgreSQL - Study annotations

* Summary
  :PROPERTIES:
  :TOC:      :include all :depth 2 :ignore this
  :END:
:CONTENTS:
- [[#progress][Progress]]
- [[#features][Features]]
  - [[#tables][Tables]]
  - [[#databases][Databases]]
  - [[#ddl---data-definition-language][DDL - Data Definition Language]]
  - [[#dml---data-manipulation-language][DML - Data Manipulation Language]]
  - [[#tablespace][Tablespace]]
  - [[#users--groups][Users & Groups]]
- [[#cli][cli]]
  - [[#pg_ctl][pg_ctl]]
  - [[#psql][psql]]
  - [[#pstree][pstree]]
  - [[#initdb][initdb]]
  - [[#createdb][createdb]]
- [[#official][Official]]
- [[#documentation][Documentation]]
- [[#terms][Terms]]
- [[#tips][Tips]]
  - [[#local-and-non-root-database][local and non-root database]]
- [[#errors][Errors]]
- [[#utils][Utils]]
- [[#container][Container]]
:END:
* Progress
| book                   | chapter          | @               | revision |
|------------------------+------------------+-----------------+----------|
| Learn PostgreSQL 12/13 | Basic Statements | Dropping tables |          |

* Features
** Tables
| Types            |                                                                   |
|------------------+-------------------------------------------------------------------|
| Temporary tables | Very fast tables, visible only to the user who created them       |
| Unlogged tables  | Very fast tables to be used as support tables common to all users |
| Logged tables    | Regular tables                                                                  |

*** create
#+begin_src sql
CREATE TABLE dummytable (dummyfield integer not null primary key);

CREATE TABLE users (
pk int GENERATED ALWAYS AS IDENTITY
, username text NOT NULL
, gecos text
, email text NOT NULL
, PRIMARY KEY(pk)
, UNIQUE(username)
);
#+end_src
*** drop

#+begin_src sql
DROP TABLE tablename;
#+end_src

#+begin_src sql
DROP TABLE IF EXISTS users;
#+end_src
*** insert
#+begin_src sql
forumdb=# INSERT INTO users (username,gecos,email) values
('myusername','mygecos','myemail');

forumdb=# INSERT INTO categories (title,description) values
('apple', 'fruits'), ('orange','fruits'),('lettuce','vegetable');
#+end_src
*** update
*** delete
*** temporary
table visible only in the session where it was created

#+begin_src sql

forumdb=# create temp table if not exists temp_users
pk int GENERATED ALWAYS AS IDENTITY
,username text NOT NULL
,gecos text
,email text NOT NULL
,PRIMARY KEY( pk )
,UNIQUE ( username )
);

#+end_src

table visible only within our transaction

#+begin_src sql
forumdb=# begin work;
BEGIN

forumdb# create temp table if not exists temp_users (
pk int GENERATED ALWAYS AS IDENTITY
,username text NOT NULL
,gecos text
,email text NOT NULL
,PRIMARY KEY( pk )
,UNIQUE ( username )
) on commit drop;

forumdb=# commit work;
COMMIT

in this way :
forumdb=# \d temp_users;
Did not find any relation named "temp_users".

#+end_src
*** unlogged
*** null
display NULL values present in the tables

#+begin_src sql
forumdb=# \pset null NULL
Null display is "NULL".
#+end_src

Query null values

#+begin_src sql
forumdb=# SELECT title,description FROM categories WHERE description IS NULL;

forumdb=# select * from categories order by description NULLS first;

#+end_src
** Databases
*** create
#+begin_src sql
CREATE DATABASE dummydb;
#+end_src
*** drop
#+begin_src sqld
DROP DATABASE tablename;
#+end_src
*** copy
#+begin_src sql
CREATE DATABASE forumdb2 TEMPLATE forumdb;
#+end_src
*** size
**** via psql
#+begin_src conf
\x
\l+ databasename
#+end_src
**** via sql
#+begin_src sql
SELECT pg_database_size('forumdb');
SELECT pg_size_pretty(pg_database_size('forumdb'));
#+end_src
*** query
#+begin_src sql
select * from pg_database where datname='forumdb';
#+end_src
** DDL - Data Definition Language
commands are used to manage databases and tables
** DML - Data Manipulation Language
used to insert, delete, update, and select data inside databases
*** where
*** in
*** not int
*** and
*** or
*** like
*** between
*** order by

** Tablespace
pg_tblspc
pg_default
pg_global
** Users & Groups
*** role
- A role can be a single account, a group of accounts, or even both depending on how you configure it
- it should be either a single user or a single group, but not both.
- have a unique name or identifier, usually called the username.
- represents a collection of database permissions and connection properties.
**** Statements
|             |                             |
|-------------+-----------------------------|
| CREATE ROLE | create a role from scratch  |
| ALTER ROLE  | change some role properties |
| DROP ROLE   | remove an existing role     |

* cli
** pg_ctl
|                          |                                                                                                                                          |
|--------------------------+------------------------------------------------------------------------------------------------------------------------------------------|
| start, stop, and restart | execute the corresponding actions on the cluster                                                                                         |
| status                   | reports the current status (running or not) of the cluster.                                                                              |
| initdb                   | executes the initialization of the cluster, possibly                                                                                     |
| reload                   | causes the PostgreSQL server to reload the configuration                                                                                 |
| promote                  |                                                                                                                                          |
| -d <database>            | Specifies the file system location of the database files                                                                                 |
| -m <mode>                | Specifies the shutdown mode. mode can be smart, fast, or immediate, or the first letter of one of these three. p, start, restart, reload |
| -U <user>                |                                                                                                                                          |
| -h <host>                | IPV4,IPV6 or hostname                                                                                                                    |
| -p                       | Specifies the location of the postgres executable.                                                                                       |
|                          |                                                                                                                                          |
** psql
a command-line client that allows you to interact with, connect, and administer
databases and the cluster itself.

|    |                                                         |
|----+---------------------------------------------------------|
| -l |                                                         |
| -d | The database name                                       |
| -U | The username                                            |
| -h | The host (either an IPv4 or IPv6 address or a hostname) |
|    |                                                         |

*** commands (\)
|                |                                                        |
|----------------+--------------------------------------------------------|
| \x             | expanded mode                                          |
| \l             | list all the databases that are present in the cluster |
| \c             | connect                                                |
| \l+ <database> |                                                        |
| \du            | list roles                                             |
| \du+           | same as above but more info                            |

*** psql prompt
|                                          |                |
|------------------------------------------+----------------|
| \i <file>                                | load file      |
| <statement> \g                           | same as ;      |
| \e <file> or \e <statement>              | open in editor |
| \h <command>                             | command doc    |
| \?                                       |                |
| \d                                       |                |
| postgresql://username@host:port/database |                |

*** drop role
#+begin_src sql
DROP ROLE [ IF EXISTS ] name [, ...]
#+end_src

#+begin_src sql

DROP ROLE IF EXISTS saitama;
#+end_src

*** create role
*** create group
*** grant
*** inspect

** pstree
    - checkpointer
    - background writer
    - walwriter
    - stats collector
    - logical replication launcher
** initdb
** createdb
* [[https://www.postgresql.org/][Official]]
* [[https://www.postgresql.org/docs/][Documentation]]
* Terms
|              |                                                                        |
|--------------+------------------------------------------------------------------------|
| session      |                                                                        |
| transactions |                                                                        |
| concurrency  |                                                                        |
| ACID         | atomicity, consistency, isolation, and durability                      |
| DMBS         | Database Management System                                             |
| PID          | Process Identifier                                                     |
| TableSpace   | tablespace is a storage space that can be outside the PGDATA directory |
| PGDATA       |                                                                        |
* Tips
** local and non-root database
#+begin_src shell-script

initdb -D .postgres -A md5 -U $USER --pwprompt
# or
initdb -D .postgres -A md5 -U $USER --pwfile=/path/to/passfile

pg_ctl -D .postgres -w start
createdb -U $USER mydb

#+end_src
* Errors


#+begin_src shell
[error] Postgrex.Protocol (#PID<0.328.0>) failed to connect: ** (DBConnection.ConnectionError) tcp connect (localhost:5432): co
nnection refused - :econnrefused
#+end_src

* Utils
- postmaster: prints out a few log lines before redirecting the logs to the appropriate log file
- oid2name
* Container
#+begin_src yaml
version: "3.9"

services:
  database:
    image: postgres:latest
    restart: always
    env_file:
      - .env/development/database
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5442:5432"

volumes:
  db_data:
#+end_src
