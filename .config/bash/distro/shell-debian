#!/usr/bin/env sh

# * DEBIAN

e-distro-debian-upgrade()
{
    echo "-- Atualizando Sistema"
    sudo apt update && sudo apt upgrade

    sudo apt autoremove
}

e-distro-debian-packages ()
{
    essentials=(git p7zip p7zip-full zip unzip bash tmux zile)

    languages=(shellcheck zenity libpq-dev bash-completion postgresql sqlite3 libsqlite3-dev)

    user_packages=(emacs firefox libreoffice kdeconnect calibre inkscape screenkey kdenlive gimp obs-studio syncthing mpv libnotify-bin imagemagick pandoc screenfetch lm-sensors aspell aspell-pt-br)

    media=(ffmpeg vorbis-tools gstreamer1.0-plugins-bad gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly)

    virtualization=(qemu qemu-system-gui qemu-utils qemu-efi qemu-kvm virt-manager ovmf) # qemu-system-x86

    wine=(wine winetricks wine32)

    fonts=(fonts-firacode ttf-ancient-fonts fonts-nanum fonts-freefont-ttf fonts-dejavu numix-icon-theme numix-gtk-theme)

    system_tools=(lshw at usbutils lsof time net-tools iproute2 curl entr tree git xsel xclip exuberant-ctags fontconfig libfreetype6 subversion bc gdebi htop strace ltrace ssh cpio lhasa lzop atool wmctrl poppler-utils linux-perf mercurial sysstat jq dialog ncdu nnn fzf fzy rsync bat rclone xonsh pv wget2 parallel locate info wget stow screen neovim zsh parted texinfo gcc gdb make build-essential autoconf automake gnutls-bin bash-doc gcc-doc gdb-doc gdbserver nftables firewalld firewall-config unrar rar ripgrep socat flatpak fish vrms fzf)

    ruby=(libssl-dev libgdbm-dev python2)

    misc_deps=(build-essential libreadline-dev libfixposix-dev gconf2) # luarocks lisp megasyn

    security=(gnutls-bin)

    laptop=(iw wireless-tools libiw-dev laptop-mode-tools i965-va-driver vainfo libvdpau-va-gl1 libinput-tools acpi acpid) # apmd pbbuttonsd pmud

    debian_internals=(apt-listbugs apt-listchanges reportbug aptitude apt-file)

    echo "-- Debian Packages"

    echo "-- Habilita Multi-Arch"
    sudo dpkg --add-architecture i386

    echo "Instalando pacotes."
    local command='sudo apt install -y'

    e_foreach "$command" "${essentials[@]}"
    # e_foreach "$command" "${wm[@]}"
    e_foreach "$command" "${languages[@]}"
    e_foreach "$command" "${system_tools[@]}"
    e_foreach "$command" "${user_packages[@]}"
    e_foreach "$command" "${media[@]}"
    #e_foreach "$command" "${virtualization[@]}"
    e_foreach "$command" "${wine[@]}"
    e_foreach "$command" "${fonts[@]}"; sudo fc-cache -fv
    e_foreach "$command" "${ruby[@]}"
    sudo apt -y build-dep emacs
    e_foreach "$command" "${misc_deps[@]}"
    e_foreach "$command" "${security[@]}"
    e_foreach "$command" "${laptop[@]}"
    e_foreach "$command" "${debian_internals[@]}"; sudo apt-file update # update Debian database

    echo "Done"
}

e-distro-debian-services()
{
    echo "systemctl"
    sudo systemctl disable mpd.service
    sudo systemctl disable mpd.socket
}

e-distro-debian-foreign()
{
    if [ ! $(command -v google-chrome) ]; then
	cd ${HOME}
	wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

	sudo apt install -y ${HOME}/google-chrome-stable_current_amd64.deb
	sudo apt update
    fi

    if [ ! $(command -v code) ]; then
	cd ${HOME}
	wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
	sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
	sudo sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'

	sudo apt-get install apt-transport-https
	sudo apt-get update
	sudo apt install -y code
    fi

    if [ -x "$(command -v pgadmin)" ]; then
	# Install the public key for the repository (if not done previously):
	curl https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo apt-key add

	# Create the repository configuration file:
	sudo sh -c 'echo "deb https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/buster pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'

	# Install for both desktop and web modes:
	sudo apt install pgadmin4 pgadmin4-desktop pgadmin4-web

	# Configure the webserver, if you installed pgadmin4-web:
	python -m pip install --user flask
	sudo /usr/pgadmin4/bin/setup-web.sh
    fi
}

e-distro-debian()
{
    e-debian-upgrade
    e-debian-packages
    e-debian-services
    e-debian-foreign
}
