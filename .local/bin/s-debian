#!/usr/bin/env bash

# Debug Options
set -euo pipefail

# Information

DEPS=(sudo apt wget systemctl firewalld timedatectl fc-cache)
s-checkdeps "${DEPS[@]}"

s-echo "Debian '$(cat /etc/debian_version)' - Installing system packages on Debian"

# Begin

upgrade() {
	s-echo "Upgrading System"

	sudo apt update
	sudo apt upgrade -y
}

pre() {
	_multi() {
		s-echo "Enable Multi-Arch"
		sudo dpkg --add-architecture i386
	}

	_multi
}

packages() {
	s-echo "Installing system packages"

	essentials=(git ssh curl unzip tmux)

	system=(zip p7zip p7zip-full recutils at usbutils lsof atool linux-perf
		time entr tree bc strace ltrace cpio lhasa lzop
		rsync pv texinfo autoconf automake socat)

	shell=(bash-completion shellcheck zsh fish)

	editors=(zile vim neovim)

	gnu=(bash gcc make vrms info wget parallel gawk)

	fonts=(fonts-hack fonts-dejavu fonts-jetbrains-mono ttf-ancient-fonts fonts-nanum)

	laptop=(acpi lm-sensors lshw laptop-mode-tools libinput-tools)

	debian=(build-essential apt-listbugs apt-listchanges reportbug aptitude
		apt-file gdebi)

	xorg=(awesome feh scrot xclip xsel)

	wmapps=(htop ffmpeg mpv elinks aria2 playerctl brightnessctl libnotify-bin picom
		udiskie bluez mpd mpc ncmpcpp suckless-tools network-manager-gnome)

	books=(pandoc)

	user=(firefox libreoffice evince gimp obs-studio xdg-utils imagemagick aspell
		aspell-pt-br telegram-desktop calibre cheese)

	sound=(pipewire pipewire-pulse wireplumber pulseaudio-utils)

	media=(vorbis-tools gstreamer1.0-plugins-bad gstreamer1.0-plugins-base
		gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly libavcodec58)

	amd=(firmware-linux-nonfree amd64-microcode firmware-amd-graphics
		libgl1-mesa-dri libglx-mesa0 mesa-utils libgl1-mesa-glx mesa-vulkan-drivers xserver-xorg-video-all
		libglx-mesa0:i386 mesa-vulkan-drivers:i386 libgl1-mesa-dri:i386
		radeontop)

	local command='sudo apt install -y'

	enabled=(
		"${essentials[@]}"
		"${debian[@]}"
		"${system[@]}"
		"${gnu[@]}"
		"${shell[@]}"
		"${media[@]}"
		"${sound[@]}"
		"${editors[@]}"
		"${user[@]}"
		"${xorg[@]}"
		"${wayland[@]}"
		"${wmapps[@]}"
		"${laptop[@]}"
		"${books[@]}"
		"${fonts[@]}"
		"${amd[@]}")

	for i in "${enabled[@]}"; do
		s-dolist "$command" "$i"
	done

	s-echo "Done"
}

post() {
	s-echo "Post install"

	_emacs() {
		sudo apt -y build-dep emacs
	}

	_debian() {
		sudo apt-file update # update Debian database
	}

	_emacs
	_debian
}

clean() {
	s-echo "Clean up"

	_unused() {
		packages=(firefox-esr)

		local command='sudo apt remove -y'
		s-dolist "$command" "${packages[@]}"
	}

	_purge() {
		packages=(*nvidia*)

		local command='sudo apt purge -y'
		s-dolist "$command" "${packages[@]}"
	}

	_unused
	_purge
}

services() {
	s-echo "Debian Services"

	_mpd() {
		sudo systemctl disable mpd
	}

	_pipewire() {
		systemctl --user --now enable wireplumber pipewire pipewire-pulse
	}

	_misc() {
		sudo systemctl enable fstrim.timer
	}

	_misc
	_pipewire
	_mpd
}

foreign() {
	echo "Non-Debian packages"

	_flatpak() {
		sudo apt install -y flatpak gnome-software-plugin-flatpak
		sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
	}

	_chrome() {
		wget -P "/tmp" https://dl.google.com/linux/direct/google-chrome-stable-current_amd64.deb
		sudo apt install -y /tmp/google-chrome-stable-current_amd64.deb
	}

	_vscode() {
		wget -c "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64" -O '/tmp/vscode-x64.deb'
		sudo apt install -y /tmp/vscode-x64.deb
	}

	_flatpak
	_vscode
	_chrome
}

# * RUN
_main() {
	upgrade
	pre
	packages
	post
	clean
	services
	foreign
}

main
