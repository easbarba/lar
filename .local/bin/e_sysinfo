#!/usr/bin/env bash

# DEBUG OPTIONS
set -euo pipefail

# Dependencies: sensors, ping, awk, grep, sed

deps=(sensors ping gawk grep sed amixer pactl) # TODO: Check deps

Distro() {
    result=$(awk '{print $1}' /etc/hostname)
    echo -e "\uf05a  GNU / ${result^}"
}

Kernel() {
    local result=$(awk '{ print substr($3,1,4)}' /proc/version) # uname -r | sed 's/.//5g'
    echo -e $result
}

Uptime() {
    result=$(uptime -p | awk '{ print $2 "h, " $4 "m" }') # uptime -p | awk '{print $2 $3}' | tr -d ','
    echo -e "$result"
}

Volume() {
    local result="???"
    local check="$(pactl list sinks | awk '/Mute/ {print $2}')" # pactl list sinks | grep 'Mute' | awk '{print $2}' | tr -d '\n')
    # [[ $(pgrep -x "amixer") ]] && result="$(amixer get Master | grep % | awk '{ print substr($5,2,3) }')"

    [[ $(pgrep -x "pulseaudio") ]] && result="$(pactl list sinks | awk '/Volume: front/ {print $5}')" # pactl list sinks | grep 'Volume: front' | tail -1 | awk '{print $5}'

    [[ $check == *\[yes\]* ]] && printf "\Uf026"
    [[ $check == *no* ]] && printf "%s" "\Uf028 $result"
}

Cpuf() {
    local prevtotal
    local total
    local result
    read -r _ a b c previdle rest </proc/stat
    prevtotal=$((a + b + c + previdle))
    sleep 0.5
    read -r _ a b c idle rest </proc/stat
    total=$((a + b + c + idle))
    result="$((100 * ((total - prevtotal) - (idle - previdle)) / (total - prevtotal)))"
    echo -e "\Uf110 ${result}%"
}

Cput() {
    local result
    result="$(sensors 2>&1 | awk '/Tctl/ {print substr($2, 2)}')" # sensors 2>&1 | grep Tctl | awk '{print substr($2, 2)}'
    echo -e "\Uf134 ${result}"
}

Memory() {
    local result
    result="$(free -m | awk 'NR==2 {printf "%dMB\n", $3,$2,$3*100/$2 }')"
    printf "%s" "\Uf1c0 ${result}"
}

Date() {
    local result
    result="$(date "+%H:%M - %a, %b %d")"
    printf "%s" "\Uf017 ${result}"
}

Battery() {
    local result
    result="$(acpi -b | awk '{print $4}')"
    printf "%s" "\Uf241: ${result}"
}

Gput() {
    local result
    result="$(sensors 2>&1 | awk '/edge/ {print substr($2, 2)}')" # sensors 2>&1 | grep edge | awk '{print substr($2, 2)}'
    printf "%s" "\Uf11b  $result"
}

arch-update() {
    local sys
    local check

    sys=$(checkupdates | wc -l)

    [[ "$sys" != "0" ]] && printf "%s" "$sys "
}

update-debian() {
    local output=$(aptitude full-upgrade --simulate --assume-yes)
    local num=$(($packs | wc - l))
    printf "%s" "Packs: $num"
}

Connection() {
    local result
    result=$(nmcli connection show | awk 'NR==2 {print $4}')
    if [[ "$result" != '--' ]]; then
        printf 'CON: ON'
    else
        printf 'CON: OFF'
    fi
}

Host() {
    printf "%s" "${HOSTNAME^}"
}

SEP="  "
SEP2=" / "
echo -e "$(Cpuf)$SEP$(Cput)$SEP$(Gput)$SEP$(Volume)$SEP$(Memory)$SEP$(Battery)$SEP$(Distro)$SEP2$(Kernel)$SEP2$(Uptime)$SEP$(Date) "

exit 0
