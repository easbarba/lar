#!/usr/bin/env bash

# Debug Options
set -euo pipefail

# * DEBIAN

e_echo "Debian"

upgrade() {
	e_echo "Updating Debian"

	sudo apt update
	sudo apt upgrade -y
	sudo apt autoremove
}

pre() {
	e_echo "Enable Multi-Arch"

	sudo dpkg --add-architecture i386
}

packages() {
	e_echo "Installing system packages"

	essentials=(git p7zip p7zip-full zip unzip bash tmux zile gcc make
		build-essential curl emacs)

	programming=(direnv shellcheck zenity libpq-dev bash-completion cmake
		mercurial clang libsqlite3-dev) # libfixposix-dev

	ruby=(libssl-dev ruby-dev)

	lua=(lua5.4 luarocks lua-check)

	postgres=(libreadline-dev zlib1g-dev curl)

	music=(mpd mpc ncmpcpp)

	system=(telnet fd-find screen micro neovim zsh fish unrar rar ripgrep lshw at usbutils
			lsof time net-tools iproute2 entr tree xsel xclip exuberant-ctags
			fontconfig libfreetype6 subversion bc gdebi htop strace ltrace ssh
			cpio lhasa lzop atool wmctrl devilspie2 lua5.2 poppler-utils linux-perf sysstat jq
			dialog ncdu nnn fzy rsync bat rclone xonsh pv wget2 parallel
			locate info wget stow parted texinfo autoconf automake gnutls-bin
			bash-doc gcc-doc gdb-doc gdbserver nftables firewalld
			firewall-config socat vrms fzf aria2)

	emacs=(libgccjit-10-dev)

	qt=(kdeconnect kdenlive clementine)

	gtk=(cheese transmission-gtk pragha materia-gtk-theme papirus-icon-theme suru-icon-theme)

	infra=(podman winetricks qemu qemu-system-gui
		qemu-utils qemu-efi qemu-kvm virt-manager ovmf
		bridge-utils)

	fonts=(fonts-firacode ttf-ancient-fonts fonts-nanum fonts-hack
		fonts-freefont-ttf fonts-dejavu)

	security=(gnutls-bin)

	laptop=(iw wireless-tools libiw-dev laptop-mode-tools
		i965-va-driver vainfo libvdpau-va-gl1 libinput-tools acpi acpid
		lm-sensors hddtemp)

	debian=(apt-listbugs apt-listchanges reportbug aptitude apt-file)

	wm=(awesome awesome-extra network-manager-gnome aria2 maim udiskie
		unclutter diodon gnome-keyring ssh-askpass-gnome pasystray
		libfile-mimeinfo-perl dmenu xdg-utils wofi rofi playerctl
		lxappearance seahorse x11proto-dev brightnessctl tlp acpi-call
		blueman volumeicon-alsa) # dunst

	user=(firefox chromium libreoffice calibre inkscape screenkey gimp
		obs-studio syncthing mpv libnotify-bin imagemagick pandoc
		screenfetch aspell aspell-pt-br gopher telegram-desktop)

	media=(ffmpeg vorbis-tools gstreamer1.0-plugins-bad
		gstreamer1.0-plugins-base gstreamer1.0-plugins-good
		gstreamer1.0-plugins-ugly)

	latex=(texlive-latex-recommended texlive-latex-extra
		texlive-latex-base)

	amd=(firmware-linux-nonfree libgl1-mesa-dri libglx-mesa0
		mesa-vulkan-drivers xserver-xorg-video-all libglx-mesa0:i386
		mesa-vulkan-drivers:i386 libgl1-mesa-dri:i386)

	local command='sudo apt install -y'

	enabled=("${essentials[@]}"
			 "${debian[@]}"
			 "${emacs[@]}"
			 "${ruby[@]}"
			 "${lua[@]}"
			 "${programming[@]}"
			 "${postgres[@]}"
			 "${system[@]}"
			 "${music[@]}"
			 "${gtk[@]}"
			 "${qt[@]}"
			 "${infra[@]}"
			 "${fonts[@]}"
			 "${security[@]}"
			 "${laptop[@]}"
			 "${wm[@]}"
			 "${user[@]}"
			 "${media[@]}"
			 "${amd[@]}")

	for i in "${enabled[@]}"; do
		e_dolist "$command" "$i"
	done

	# builds dep
	sudo apt -y build-dep emacs

	e_echo "Done"
}

post(){
	e_echo "Post install"

	sudo apt-file update # update Debian database
	sudo fc-cache -fv
}

clean() {
	e_echo "Clean up"

	unused=(firefox-esr)

	local command='sudo apt remove -y'

	e_dolist "$command" "${unused[@]}"
}

services() {
	e_echo "Debian Services"

	mpd() {
		sudo systemctl disable mpd
	}

	kdeconnect() {
		sudo firewall-cmd --zone=public --permanent --add-port=1714-1764/tcp
		sudo firewall-cmd --zone=public --permanent --add-port=1714-1764/udp
		sudo systemctl restart firewalld.service
	}

	timezone() {
		local current_zone
		local desired_zone

		desired_zone='America/Sao_Paulo'
		current_zone=$(timedatectl | grep 'Time zone' | awk '{print $3}')

		[[ "$current_zone" != "$desired_zone" ]] && sudo timedatectl set-timezone America/Sao_Paulo
	}

	alternatives() {
		# set python to python3
		sudo update-alternatives --install /usr/bin/python python "$(which python3)" 1
	}

	virtualization() {
		sudo usermod -aG libvirt "$USER"
		sudo usermod -aG kvm "$USER"
	}

	mpd
	alternatives
	timezone
	kdeconnect
	virtualization
}

foreign() {
	echo "Non-Debian packages"

	chrome() {
		wget -P "/tmp" https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
		sudo apt install -y "/tmp/google-chrome-stable_current_amd64.deb"
	}
}

# * RUN

upgrade
pre
packages
post
clean
services
foreign
