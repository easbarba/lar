#!/usr/bin/env bash

volume ()
{
    local onoff
    onoff=$(amixer get Master | tail -1)

    local state
    if pgrep -x "pulseaudio" > /dev/null; then
	state=$(pactl list sinks | grep '^[[:space:]]Volume:' | head -n $(( "$SINK" + 1 )) \
		    | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,')%
    else
	state="$(amixer get Master | tail -n1 | sed -r 's/.*\[(.*)%\].*/\1/')"
    fi

    if [[ $onoff == *\[off\]* ]]; then
	echo -e "Vol: MUTE"
    elif [[ $onoff == *\[on\]* ]]; then
	echo -e "Vol: ${state}"
    else
	echo -e "???"
    fi
}

cpu-frequency ()
{
    read -r cpu a b c previdle rest < /proc/stat

    local prevtotal
    prevtotal=$((a+b+c+previdle))

    sleep 0.5

    read -r cpu a b c idle rest < /proc/stat
    total=$((a+b+c+idle))

    local cpu
    cpu="$((100*( (total-prevtotal) - (idle-previdle) ) / (total-prevtotal) ))"

    echo -ne "CPU: ${cpu}%"
}

cpu-temperature ()
{
    local now
    now="$(sensors | grep Core | awk '{print substr($3, 2, length($1)-2)}' | tr '\n' ' ' | sed 's/ /°c /g' | sed 's/ $//')"

    echo -ne "Temp: ${now}"
}

memory ()
{
    local now
    now="$(free -m | awk 'NR==2{printf "%dMB\n", $3,$2,$3*100/$2 }')"

    echo -ne "Mem: ${now}"
}

_date ()
{
    local now
    now="$(date "+%H:%M - %a, %b %d")"

    echo -ne "${now}"
}

battery ()
{
    local state
    state=$(acpi -b | sed 's/.*[charging|unknown|full], \([0-9]*\)%.*/\1/gi')

    local status
    status=$(acpi -b | sed 's/.*: \([a-zA-Z]*\),.*/\1/gi')

    echo -ne "Bat: ${state}%"

    # (${status})
    # if ([ "$BATT" -le 5 ] && [ "$STATUS" == 'Discharging' ]); then
    #     # Beep
    #     echo -ne "\007" >/dev/tty10 && sleep 0.2
    #     echo -ne "\007" >/dev/tty10 && sleep 0.2
    #     echo -ne "\007" >/dev/tty10 && sleep 0.2
    #     # Blink
    #     echo -ne 'on' > /proc/acpi/ibm/light && sleep 1
    #     echo -ne 'off' > /proc/acpi/ibm/light
    # fi
}

connection ()
{
    ping -c 3 cnn.com &> /dev/null &&
	echo -ne "CON: ON" || echo -ne "CON: OFF"
}

gputil ()
{
    gputil="$( nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader )"
    echo -ne "GPUF: ${gputil}"
    # utilization.memory
    # utilization.gpu
}

gputemp ()
{
    gputemp="$( nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader )"
    echo -ne "GPUT: ${gputemp}°c"
    n# utilization.memory
    # utilization.gpu
}

update ()
{
    pac=$(checkupdates | wc -l)
    aur=$(cower -u | wc -l)

    check=$((pac + aur))
    if [[ "$check" != "0" ]]
    then
	echo -e " $pac  $aur / "
    fi
}

con ()
{
    if pgrep -x "nm-applet" > /dev/null; then # if is running
	echo ""
    else
	ping -c 3 gnu.org &> /dev/null &&
	    echo -ne "WIFI: ON" || echo -ne "CON: OFF"
    fi
}

host ()
{
    echo -e "$HOSTNAME"
}

# apt list --upgradable

sep=" :: "
echo " $(host)${sep}$(volume)${sep}$(memory)${sep}$(cpu-frequency)${sep}$(cpu-temperature)${sep}$(battery)${sep}$(_date)"

exit 0
