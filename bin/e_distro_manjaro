#!/usr/bin/env bash

# set -e

# * ARCH LINUX

manjaro-upgrade()
{
    echo "-- Atualizando Sistema" sudo pacman -Syy && sudo pacman -Syu
}

manjaro-packages ()
{
    echo "-- Debian Packages"

    essentials=(base-devel coreutils wget git p7zip zip unzip util-linux bash tmux zile)

    languages=(gcc clang postgresql sqlite3 postgresql-libs shellcheck zenity bash-completion python-pip)

    user_packages=(emacs firefox libreoffice kdeconnect calibre inkscape screenkey kdenlive cheese deluge gimp obs-studio gnome-keyring vlc kate syncthing steam imagemagick pandoc xdg-utils screenfetch lm_sensors aspell aspell-en  mpv)

    media=(ffmpeg vorbis-tools gst-libav gst-plugins-bad gst-plugins-base gst-plugins-good  gst-plugins-ugly)

    virtualization=(qemu qemu-system-gui qemu-utils qemu-efi qemu-kvm virt-manager ovmf) # qemu-system-x86

    wine=(wine winetricks)

    fonts=(ttf-fira-code gnu-free-fonts ttf-dejavu) # ttf-ancient-fonts fonts-nanum

    system_tools=(lshw at usbutils lsof time net-tools iproute2 curl entr tree git xsel xclip ctags fontconfig
		  freetype2 subversion bc htop strace ltrace openssh cpio lhasa lzop atool wmctrl poppler
		  perf mercurial sysstat jq dialog ncdu nnn fzf fzy rsync bat rclone xonsh pv
		  parallel findutils wget stow screen neovim zsh parted texinfo gcc gdb make autoconf
		  automake gnutls gdb nftables firewalld unrar ripgrep socat fish)  # console-data

    emacs_deps=(libjansson-dev libbrotli-dev libwebkit2gtk-4.0-dev libpng-dev zlib1g-dev libpoppler-glib-dev
		libpoppler-private-dev ghostscript mupdf-tools
		poppler-utils texlive-binaries unoconv djvulibre-bin ncurses-dev
		texlive-latex-base texlive-fonts-recommended  texlive-latex-extra
		uuid-dev libicu-dev icu-devtools libedit-dev libxml2-dev
		libsqlite3-dev swig libpython-dev libncurses5-dev pkg-config
		libcurl4-openssl-dev systemtap-sdt-dev tzdata rsync)

    laptop=(iw wireless_tools libinput-gestures acpi acpid) # apmd pbbuttonsd pmud libiw-dev laptop-mode-tools

    local command='sudo pacman -S --noconfirm'

    e_foreach "$command" "${essentials[@]}"
    e_foreach "$command" "${languages[@]}"
    e_foreach "$command" "${devops[@]}"
    e_foreach "$command" "${wm_packges[@]}"
    e_foreach "$command" "${user_packages[@]}"
    e_foreach "$command" "${media[@]}"
    e_foreach "$command" "${virtualization[@]}"
    e_foreach "$command" "${wine[@]}"
    e_foreach "$command" "${fonts[@]}"; sudo fc-cache -fv
    e_foreach "$command" "${ruby_tools[@]}"
    # e_foreach "$command" "${emacs_deps[@]}"
    # e_foreach "$command" "${misc_deps[@]}"
    e_foreach "$command" "${laptop[@]}"
}

manjaro-services()
{
    echo "systemctl"
    sudo systemctl disable mpd.service
    sudo systemctl disable mpd.socket
}

manjaro-foreign()
{
    if [ ! $(command -v google-chrome) ]; then
	cd ${HOME}
	wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

	sudo apt install -y ${HOME}/google-chrome-stable_current_amd64.deb
	sudo apt update
    fi

    if [ ! $(command -v code) ]; then
	cd ${HOME}
	wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
	sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
	sudo sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'

	sudo apt-get install apt-transport-https
	sudo apt-get update
	sudo apt install -y code
    fi

    if [ -x "$(command -v pgadmin)" ]; then
	# Install the public key for the repository (if not done previously):
	curl https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo apt-key add

	# Create the repository configuration file:
	sudo sh -c 'echo "deb https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/buster pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'

	# Install for both desktop and web modes:
	sudo apt install pgadmin4 pgadmin4-desktop pgadmin4-web

	# Configure the webserver, if you installed pgadmin4-web:
	python -m pip install --user flask
	sudo /usr/pgadmin4/bin/setup-web.sh
    fi
}

# * RUN

manjaro-upgrade
manjaro-packages
manjaro-services
# manjaro-foreign
